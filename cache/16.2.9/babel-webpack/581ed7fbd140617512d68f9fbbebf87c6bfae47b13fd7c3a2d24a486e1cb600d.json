{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport H from '../Globals.js';\n/* *\n *\n *  Namespace\n *\n * */\nvar RendererRegistry;\n(function (RendererRegistry) {\n  /* *\n   *\n   *  Constants\n   *\n   * */\n  RendererRegistry.rendererTypes = {};\n  /* *\n   *\n   *  Variables\n   *\n   * */\n  let defaultRenderer;\n  /* *\n   *\n   *  Functions\n   *\n   * */\n  /**\n   * Gets a registered renderer class. If no renderer type is provided or the\n   * requested renderer was not founded, the default renderer is returned.\n   *\n   * @param {string} [rendererType]\n   * Renderer type or the default renderer.\n   *\n   * @return {Highcharts.Class<Highcharts.SVGRenderer>}\n   * Returns the requested renderer class or the default renderer class.\n   */\n  function getRendererType(rendererType = defaultRenderer) {\n    return RendererRegistry.rendererTypes[rendererType] || RendererRegistry.rendererTypes[defaultRenderer];\n  }\n  RendererRegistry.getRendererType = getRendererType;\n  /**\n   * Register a renderer class.\n   *\n   * @param {string} rendererType\n   * Renderer type to register.\n   *\n   * @param {Highcharts.Class<Highcharts.SVGRenderer>} rendererClass\n   * Returns the requested renderer class or the default renderer class.\n   *\n   * @param {boolean} setAsDefault\n   * Sets the renderer class as the default renderer.\n   */\n  function registerRendererType(rendererType, rendererClass, setAsDefault) {\n    RendererRegistry.rendererTypes[rendererType] = rendererClass;\n    if (!defaultRenderer || setAsDefault) {\n      defaultRenderer = rendererType;\n      H.Renderer = rendererClass; // compatibility\n    }\n  }\n\n  RendererRegistry.registerRendererType = registerRendererType;\n})(RendererRegistry || (RendererRegistry = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default RendererRegistry;","map":{"version":3,"names":["H","RendererRegistry","rendererTypes","defaultRenderer","getRendererType","rendererType","registerRendererType","rendererClass","setAsDefault","Renderer"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Renderer/RendererRegistry.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../Globals.js';\n/* *\n *\n *  Namespace\n *\n * */\nvar RendererRegistry;\n(function (RendererRegistry) {\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    RendererRegistry.rendererTypes = {};\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    let defaultRenderer;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Gets a registered renderer class. If no renderer type is provided or the\n     * requested renderer was not founded, the default renderer is returned.\n     *\n     * @param {string} [rendererType]\n     * Renderer type or the default renderer.\n     *\n     * @return {Highcharts.Class<Highcharts.SVGRenderer>}\n     * Returns the requested renderer class or the default renderer class.\n     */\n    function getRendererType(rendererType = defaultRenderer) {\n        return (RendererRegistry.rendererTypes[rendererType] || RendererRegistry.rendererTypes[defaultRenderer]);\n    }\n    RendererRegistry.getRendererType = getRendererType;\n    /**\n     * Register a renderer class.\n     *\n     * @param {string} rendererType\n     * Renderer type to register.\n     *\n     * @param {Highcharts.Class<Highcharts.SVGRenderer>} rendererClass\n     * Returns the requested renderer class or the default renderer class.\n     *\n     * @param {boolean} setAsDefault\n     * Sets the renderer class as the default renderer.\n     */\n    function registerRendererType(rendererType, rendererClass, setAsDefault) {\n        RendererRegistry.rendererTypes[rendererType] = rendererClass;\n        if (!defaultRenderer || setAsDefault) {\n            defaultRenderer = rendererType;\n            H.Renderer = rendererClass; // compatibility\n        }\n    }\n    RendererRegistry.registerRendererType = registerRendererType;\n})(RendererRegistry || (RendererRegistry = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default RendererRegistry;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,OAAOA,CAAC,MAAM,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzB;AACJ;AACA;AACA;AACA;EACIA,gBAAgB,CAACC,aAAa,GAAG,CAAC,CAAC;EACnC;AACJ;AACA;AACA;AACA;EACI,IAAIC,eAAe;EACnB;AACJ;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,eAAeA,CAACC,YAAY,GAAGF,eAAe,EAAE;IACrD,OAAQF,gBAAgB,CAACC,aAAa,CAACG,YAAY,CAAC,IAAIJ,gBAAgB,CAACC,aAAa,CAACC,eAAe,CAAC;EAC3G;EACAF,gBAAgB,CAACG,eAAe,GAAGA,eAAe;EAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASE,oBAAoBA,CAACD,YAAY,EAAEE,aAAa,EAAEC,YAAY,EAAE;IACrEP,gBAAgB,CAACC,aAAa,CAACG,YAAY,CAAC,GAAGE,aAAa;IAC5D,IAAI,CAACJ,eAAe,IAAIK,YAAY,EAAE;MAClCL,eAAe,GAAGE,YAAY;MAC9BL,CAAC,CAACS,QAAQ,GAAGF,aAAa,CAAC,CAAC;IAChC;EACJ;;EACAN,gBAAgB,CAACK,oBAAoB,GAAGA,oBAAoB;AAChE,CAAC,EAAEL,gBAAgB,KAAKA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAeA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}