{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport ScatterSeriesDefaults from './ScatterSeriesDefaults.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nconst {\n  column: ColumnSeries,\n  line: LineSeries\n} = SeriesRegistry.seriesTypes;\nimport U from '../../Core/Utilities.js';\nconst {\n  addEvent,\n  extend,\n  merge\n} = U;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Scatter series type.\n *\n * @private\n */\nclass ScatterSeries extends LineSeries {\n  constructor() {\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    super(...arguments);\n    /* *\n     *\n     *  Properties\n     *\n     * */\n    this.data = void 0;\n    this.options = void 0;\n    this.points = void 0;\n    /* eslint-enable valid-jsdoc */\n  }\n  /* *\n   *\n   *  Functions\n   *\n   * */\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Optionally add the jitter effect.\n   * @private\n   */\n  applyJitter() {\n    const series = this,\n      jitter = this.options.jitter,\n      len = this.points.length;\n    /**\n     * Return a repeatable, pseudo-random number based on an integer\n     * seed.\n     * @private\n     */\n    function unrandom(seed) {\n      const rand = Math.sin(seed) * 10000;\n      return rand - Math.floor(rand);\n    }\n    if (jitter) {\n      this.points.forEach(function (point, i) {\n        ['x', 'y'].forEach(function (dim, j) {\n          let axis,\n            plotProp = 'plot' + dim.toUpperCase(),\n            min,\n            max,\n            translatedJitter;\n          if (jitter[dim] && !point.isNull) {\n            axis = series[dim + 'Axis'];\n            translatedJitter = jitter[dim] * axis.transA;\n            if (axis && !axis.isLog) {\n              // Identify the outer bounds of the jitter range\n              min = Math.max(0, point[plotProp] - translatedJitter);\n              max = Math.min(axis.len, point[plotProp] + translatedJitter);\n              // Find a random position within this range\n              point[plotProp] = min + (max - min) * unrandom(i + j * len);\n              // Update clientX for the tooltip k-d-tree\n              if (dim === 'x') {\n                point.clientX = point.plotX;\n              }\n            }\n          }\n        });\n      });\n    }\n  }\n  /**\n   * @private\n   */\n  drawGraph() {\n    if (this.options.lineWidth) {\n      super.drawGraph();\n    } else if (this.graph) {\n      this.graph = this.graph.destroy();\n    }\n  }\n}\nScatterSeries.defaultOptions = merge(LineSeries.defaultOptions, ScatterSeriesDefaults);\nextend(ScatterSeries.prototype, {\n  drawTracker: ColumnSeries.prototype.drawTracker,\n  sorted: false,\n  requireSorting: false,\n  noSharedTooltip: true,\n  trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n  takeOrdinalPosition: false // #2342\n});\n/* *\n *\n *  Events\n *\n * */\n/* eslint-disable no-invalid-this */\naddEvent(ScatterSeries, 'afterTranslate', function () {\n  this.applyJitter();\n});\nSeriesRegistry.registerSeriesType('scatter', ScatterSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ScatterSeries;","map":{"version":3,"names":["ScatterSeriesDefaults","SeriesRegistry","column","ColumnSeries","line","LineSeries","seriesTypes","U","addEvent","extend","merge","ScatterSeries","constructor","arguments","data","options","points","applyJitter","series","jitter","len","length","unrandom","seed","rand","Math","sin","floor","forEach","point","i","dim","j","axis","plotProp","toUpperCase","min","max","translatedJitter","isNull","transA","isLog","clientX","plotX","drawGraph","lineWidth","graph","destroy","defaultOptions","prototype","drawTracker","sorted","requireSorting","noSharedTooltip","trackerGroups","takeOrdinalPosition","registerSeriesType"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Series/Scatter/ScatterSeries.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport ScatterSeriesDefaults from './ScatterSeriesDefaults.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nconst { column: ColumnSeries, line: LineSeries } = SeriesRegistry.seriesTypes;\nimport U from '../../Core/Utilities.js';\nconst { addEvent, extend, merge } = U;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Scatter series type.\n *\n * @private\n */\nclass ScatterSeries extends LineSeries {\n    constructor() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        super(...arguments);\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.data = void 0;\n        this.options = void 0;\n        this.points = void 0;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Optionally add the jitter effect.\n     * @private\n     */\n    applyJitter() {\n        const series = this, jitter = this.options.jitter, len = this.points.length;\n        /**\n         * Return a repeatable, pseudo-random number based on an integer\n         * seed.\n         * @private\n         */\n        function unrandom(seed) {\n            const rand = Math.sin(seed) * 10000;\n            return rand - Math.floor(rand);\n        }\n        if (jitter) {\n            this.points.forEach(function (point, i) {\n                ['x', 'y'].forEach(function (dim, j) {\n                    let axis, plotProp = 'plot' + dim.toUpperCase(), min, max, translatedJitter;\n                    if (jitter[dim] && !point.isNull) {\n                        axis = series[dim + 'Axis'];\n                        translatedJitter =\n                            jitter[dim] * axis.transA;\n                        if (axis && !axis.isLog) {\n                            // Identify the outer bounds of the jitter range\n                            min = Math.max(0, point[plotProp] - translatedJitter);\n                            max = Math.min(axis.len, point[plotProp] + translatedJitter);\n                            // Find a random position within this range\n                            point[plotProp] = min +\n                                (max - min) * unrandom(i + j * len);\n                            // Update clientX for the tooltip k-d-tree\n                            if (dim === 'x') {\n                                point.clientX = point.plotX;\n                            }\n                        }\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * @private\n     */\n    drawGraph() {\n        if (this.options.lineWidth) {\n            super.drawGraph();\n        }\n        else if (this.graph) {\n            this.graph = this.graph.destroy();\n        }\n    }\n}\nScatterSeries.defaultOptions = merge(LineSeries.defaultOptions, ScatterSeriesDefaults);\nextend(ScatterSeries.prototype, {\n    drawTracker: ColumnSeries.prototype.drawTracker,\n    sorted: false,\n    requireSorting: false,\n    noSharedTooltip: true,\n    trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n    takeOrdinalPosition: false // #2342\n});\n/* *\n *\n *  Events\n *\n * */\n/* eslint-disable no-invalid-this */\naddEvent(ScatterSeries, 'afterTranslate', function () {\n    this.applyJitter();\n});\nSeriesRegistry.registerSeriesType('scatter', ScatterSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ScatterSeries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}