{"ast":null,"code":"import Highcharts from 'highcharts/es-modules/masters/highcharts.src';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"highcharts-angular\";\nexport class PieChartComponent {\n  constructor() {\n    this.data = [];\n    this.Highcharts = Highcharts;\n    // chartOptions = {\n    //   chart: {\n    //     plotBorderWidth: 0,\n    //     plotShadow: false,\n    //   },\n    //   title: {\n    //     text: 'Browser market shares at a specific website, 2014',\n    //   },\n    //   tooltip: {\n    //     pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\n    //   },\n    //   plotOptions: {\n    //     pie: {\n    //       allowPointSelect: true,\n    //       cursor: 'pointer',\n    //       dataLabels: {\n    //         enabled: false,\n    //       },\n    //       showInLegend: true,\n    //     },\n    //   },\n    //   series: [\n    //     {\n    //       type: 'pie',\n    //       name: 'Browser share',\n    //       data: [\n    //         ['Firefox', 45.0],\n    //         ['IE', 26.8],\n    //         {\n    //           name: 'Chrome',\n    //           y: 12.8,\n    //           sliced: true,\n    //           selected: true,\n    //         },\n    //         ['Safari', 8.5],\n    //         ['Opera', 6.2],\n    //         ['Others', 0.7],\n    //       ],\n    //     } as Highcharts.SeriesPieOptions, // Define the series type as SeriesPieOptions\n    //   ],\n    // };\n    this.chartOptions = {\n      chart: {\n        plotBorderWidth: 0,\n        plotShadow: false\n      },\n      title: {\n        text: 'User Balance Distribution'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: true\n        }\n      },\n      series: [{\n        type: 'pie',\n        name: 'User Balance',\n        data: this.formatDataForPieChart()\n      }]\n    };\n  }\n  formatDataForPieChart() {\n    const balanceData = this.data.map(user => [`${user.first} ${user.last}`, parseFloat(user.balance.replace(/[^0-9.]/g, '')) // Extract and parse the balance as a number\n    ]);\n\n    return balanceData;\n  }\n  static #_ = this.ɵfac = function PieChartComponent_Factory(t) {\n    return new (t || PieChartComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PieChartComponent,\n    selectors: [[\"app-pie-chart\"]],\n    inputs: {\n      data: \"data\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"Highcharts\", \"options\"]],\n    template: function PieChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"highcharts-chart\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"options\", ctx.chartOptions);\n      }\n    },\n    dependencies: [i1.HighchartsChartComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Highcharts","PieChartComponent","constructor","data","chartOptions","chart","plotBorderWidth","plotShadow","title","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","series","type","name","formatDataForPieChart","balanceData","map","user","first","last","parseFloat","balance","replace","_","_2","selectors","inputs","decls","vars","consts","template","PieChartComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵproperty"],"sources":["D:\\Vamtage\\angular-widget-project\\src\\app\\pie-chart\\pie-chart.component.ts","D:\\Vamtage\\angular-widget-project\\src\\app\\pie-chart\\pie-chart.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport Highcharts from 'highcharts/es-modules/masters/highcharts.src';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss'],\n})\nexport class PieChartComponent {\n  @Input() data: any[] = [];\n\n  Highcharts: typeof Highcharts = Highcharts;\n\n  // chartOptions = {\n  //   chart: {\n  //     plotBorderWidth: 0,\n  //     plotShadow: false,\n  //   },\n  //   title: {\n  //     text: 'Browser market shares at a specific website, 2014',\n  //   },\n  //   tooltip: {\n  //     pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\n  //   },\n  //   plotOptions: {\n  //     pie: {\n  //       allowPointSelect: true,\n  //       cursor: 'pointer',\n  //       dataLabels: {\n  //         enabled: false,\n  //       },\n  //       showInLegend: true,\n  //     },\n  //   },\n  //   series: [\n  //     {\n  //       type: 'pie',\n  //       name: 'Browser share',\n  //       data: [\n  //         ['Firefox', 45.0],\n  //         ['IE', 26.8],\n  //         {\n  //           name: 'Chrome',\n  //           y: 12.8,\n  //           sliced: true,\n  //           selected: true,\n  //         },\n  //         ['Safari', 8.5],\n  //         ['Opera', 6.2],\n  //         ['Others', 0.7],\n  //       ],\n  //     } as Highcharts.SeriesPieOptions, // Define the series type as SeriesPieOptions\n  //   ],\n  // };\n\n  chartOptions = {\n    chart: {\n      plotBorderWidth: 0,\n      plotShadow: false,\n    },\n    title: {\n      text: 'User Balance Distribution',\n    },\n    tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n        },\n        showInLegend: true,\n      },\n    },\n    series: [\n      {\n        type: 'pie',\n        name: 'User Balance',\n        data: this.formatDataForPieChart(),\n      } as Highcharts.SeriesPieOptions,\n    ],\n  };\n\n  private formatDataForPieChart() {\n    const balanceData = this.data.map((user) => [\n      `${user.first} ${user.last}`,\n      parseFloat(user.balance.replace(/[^0-9.]/g, '')), // Extract and parse the balance as a number\n    ]);\n    return balanceData;\n  }\n\n\n}\n","<highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartOptions\"></highcharts-chart>\n"],"mappings":"AACA,OAAOA,UAAU,MAAM,8CAA8C;;;AAOrE,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAMW,KAAAC,IAAI,GAAU,EAAE;IAEzB,KAAAH,UAAU,GAAsBA,UAAU;IAE1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,KAAAI,YAAY,GAAG;MACbC,KAAK,EAAE;QACLC,eAAe,EAAE,CAAC;QAClBC,UAAU,EAAE;OACb;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,OAAO,EAAE;QACPC,WAAW,EAAE;OACd;MACDC,WAAW,EAAE;QACXC,GAAG,EAAE;UACHC,gBAAgB,EAAE,IAAI;UACtBC,MAAM,EAAE,SAAS;UACjBC,UAAU,EAAE;YACVC,OAAO,EAAE;WACV;UACDC,YAAY,EAAE;;OAEjB;MACDC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE,cAAc;QACpBlB,IAAI,EAAE,IAAI,CAACmB,qBAAqB;OACF;KAEnC;;EAEOA,qBAAqBA,CAAA;IAC3B,MAAMC,WAAW,GAAG,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAEC,IAAI,IAAK,CAC1C,GAAGA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACE,IAAI,EAAE,EAC5BC,UAAU,CAACH,IAAI,CAACI,OAAO,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAE;IAAA,CACnD,CAAC;;IACF,OAAOP,WAAW;EACpB;EAAC,QAAAQ,CAAA,G;qBAnFU9B,iBAAiB;EAAA;EAAA,QAAA+B,EAAA,G;UAAjB/B,iBAAiB;IAAAgC,SAAA;IAAAC,MAAA;MAAA/B,IAAA;IAAA;IAAAgC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BE,EAAA,CAAAC,SAAA,0BAAwF;;;QAAtED,EAAA,CAAAE,UAAA,eAAAH,GAAA,CAAAzC,UAAA,CAAyB,YAAAyC,GAAA,CAAArC,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}