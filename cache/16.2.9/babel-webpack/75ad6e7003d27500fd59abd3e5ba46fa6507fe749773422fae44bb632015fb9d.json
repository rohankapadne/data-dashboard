{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport U from './Utilities.js';\nconst {\n  addEvent,\n  isFunction,\n  objectEach,\n  removeEvent\n} = U;\n/* *\n *\n *  Class Namespace\n *\n * */\nvar Foundation;\n(function (Foundation) {\n  /* *\n   *\n   *  Functions\n   *\n   * */\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Register event options. If an event handler is set on the options, it\n   * should be subject to Chart.update, Axis.update and Series.update. This is\n   * contrary to general handlers that are set directly using addEvent either\n   * on the class or on the instance. #6538, #6943, #10861.\n   * @private\n   */\n  function registerEventOptions(component, options) {\n    // A lookup over those events that are added by _options_ (not\n    // programmatically). These are updated through .update()\n    component.eventOptions = component.eventOptions || {};\n    // Register event listeners\n    objectEach(options.events, function (event, eventType) {\n      // If event does not exist, or is changed by the .update()\n      // function\n      if (component.eventOptions[eventType] !== event) {\n        // Remove existing if set by option\n        if (component.eventOptions[eventType]) {\n          removeEvent(component, eventType, component.eventOptions[eventType]);\n          delete component.eventOptions[eventType];\n        }\n        if (isFunction(event)) {\n          component.eventOptions[eventType] = event;\n          addEvent(component, eventType, event, {\n            order: 0 // #14080 fire those events as firsts\n          });\n        }\n      }\n    });\n  }\n\n  Foundation.registerEventOptions = registerEventOptions;\n})(Foundation || (Foundation = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default Foundation;","map":{"version":3,"names":["U","addEvent","isFunction","objectEach","removeEvent","Foundation","registerEventOptions","component","options","eventOptions","events","event","eventType","order"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Foundation.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport U from './Utilities.js';\nconst { addEvent, isFunction, objectEach, removeEvent } = U;\n/* *\n *\n *  Class Namespace\n *\n * */\nvar Foundation;\n(function (Foundation) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Register event options. If an event handler is set on the options, it\n     * should be subject to Chart.update, Axis.update and Series.update. This is\n     * contrary to general handlers that are set directly using addEvent either\n     * on the class or on the instance. #6538, #6943, #10861.\n     * @private\n     */\n    function registerEventOptions(component, options) {\n        // A lookup over those events that are added by _options_ (not\n        // programmatically). These are updated through .update()\n        component.eventOptions = component.eventOptions || {};\n        // Register event listeners\n        objectEach(options.events, function (event, eventType) {\n            // If event does not exist, or is changed by the .update()\n            // function\n            if (component.eventOptions[eventType] !== event) {\n                // Remove existing if set by option\n                if (component.eventOptions[eventType]) {\n                    removeEvent(component, eventType, component.eventOptions[eventType]);\n                    delete component.eventOptions[eventType];\n                }\n                if (isFunction(event)) {\n                    component.eventOptions[eventType] = event;\n                    addEvent(component, eventType, event, {\n                        order: 0 // #14080 fire those events as firsts\n                    });\n                }\n            }\n        });\n    }\n    Foundation.registerEventOptions = registerEventOptions;\n})(Foundation || (Foundation = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default Foundation;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,OAAOA,CAAC,MAAM,gBAAgB;AAC9B,MAAM;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAY,CAAC,GAAGJ,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnB;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,oBAAoBA,CAACC,SAAS,EAAEC,OAAO,EAAE;IAC9C;IACA;IACAD,SAAS,CAACE,YAAY,GAAGF,SAAS,CAACE,YAAY,IAAI,CAAC,CAAC;IACrD;IACAN,UAAU,CAACK,OAAO,CAACE,MAAM,EAAE,UAAUC,KAAK,EAAEC,SAAS,EAAE;MACnD;MACA;MACA,IAAIL,SAAS,CAACE,YAAY,CAACG,SAAS,CAAC,KAAKD,KAAK,EAAE;QAC7C;QACA,IAAIJ,SAAS,CAACE,YAAY,CAACG,SAAS,CAAC,EAAE;UACnCR,WAAW,CAACG,SAAS,EAAEK,SAAS,EAAEL,SAAS,CAACE,YAAY,CAACG,SAAS,CAAC,CAAC;UACpE,OAAOL,SAAS,CAACE,YAAY,CAACG,SAAS,CAAC;QAC5C;QACA,IAAIV,UAAU,CAACS,KAAK,CAAC,EAAE;UACnBJ,SAAS,CAACE,YAAY,CAACG,SAAS,CAAC,GAAGD,KAAK;UACzCV,QAAQ,CAACM,SAAS,EAAEK,SAAS,EAAED,KAAK,EAAE;YAClCE,KAAK,EAAE,CAAC,CAAC;UACb,CAAC,CAAC;QACN;MACJ;IACJ,CAAC,CAAC;EACN;;EACAR,UAAU,CAACC,oBAAoB,GAAGA,oBAAoB;AAC1D,CAAC,EAAED,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}