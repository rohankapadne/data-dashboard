{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport PlotLineOrBandAxis from './PlotLineOrBandAxis.js';\nimport U from '../../Utilities.js';\nconst {\n  arrayMax,\n  arrayMin,\n  defined,\n  destroyObjectProperties,\n  erase,\n  fireEvent,\n  merge,\n  objectEach,\n  pick\n} = U;\n/* *\n *\n *  Class\n *\n * */\n/**\n * The object wrapper for plot lines and plot bands\n *\n * @class\n * @name Highcharts.PlotLineOrBand\n *\n * @param {Highcharts.Axis} axis\n * Related axis.\n *\n * @param {Highcharts.AxisPlotLinesOptions|Highcharts.AxisPlotBandsOptions} [options]\n * Options to use.\n */\nclass PlotLineOrBand {\n  /* *\n   *\n   *  Static Functions\n   *\n   * */\n  static compose(AxisClass) {\n    return PlotLineOrBandAxis.compose(PlotLineOrBand, AxisClass);\n  }\n  /* *\n   *\n   *  Constructor\n   *\n   * */\n  constructor(axis, options) {\n    /**\n     * The id of the plot line or plot band.\n     *\n     * @name Highcharts.PlotLineOrBand#id\n     * @type {string}\n     */\n    this.id = void 0;\n    this.axis = axis;\n    if (options) {\n      this.options = options;\n      this.id = options.id;\n    }\n  }\n  /* *\n   *\n   *  Functions\n   *\n   * */\n  /* eslint-disable no-invalid-this, valid-jsdoc */\n  /**\n   * Render the plot line or plot band. If it is already existing,\n   * move it.\n   * @private\n   * @function Highcharts.PlotLineOrBand#render\n   */\n  render() {\n    fireEvent(this, 'render');\n    const plotLine = this,\n      /**\n       * Related axis.\n       *\n       * @name Highcharts.PlotLineOrBand#axis\n       * @type {Highcharts.Axis}\n       */\n      axis = plotLine.axis,\n      horiz = axis.horiz,\n      log = axis.logarithmic,\n      /**\n       * Options of the plot line or band.\n       *\n       * @name Highcharts.PlotLineOrBand#options\n       * @type {AxisPlotBandsOptions|AxisPlotLinesOptions}\n       */\n      options = plotLine.options,\n      color = options.color,\n      zIndex = pick(options.zIndex, 0),\n      events = options.events,\n      groupAttribs = {},\n      renderer = axis.chart.renderer;\n    let optionsLabel = options.label,\n      label = plotLine.label,\n      to = options.to,\n      from = options.from,\n      value = options.value,\n      svgElem = plotLine.svgElem,\n      path = [],\n      group;\n    const isBand = defined(from) && defined(to),\n      isLine = defined(value),\n      isNew = !svgElem,\n      attribs = {\n        'class': 'highcharts-plot-' + (isBand ? 'band ' : 'line ') + (options.className || '')\n      };\n    let groupName = isBand ? 'bands' : 'lines';\n    // logarithmic conversion\n    if (log) {\n      from = log.log2lin(from);\n      to = log.log2lin(to);\n      value = log.log2lin(value);\n    }\n    // Set the presentational attributes\n    if (!axis.chart.styledMode) {\n      if (isLine) {\n        attribs.stroke = color || \"#999999\" /* Palette.neutralColor40 */;\n        attribs['stroke-width'] = pick(options.width, 1);\n        if (options.dashStyle) {\n          attribs.dashstyle = options.dashStyle;\n        }\n      } else if (isBand) {\n        // plot band\n        attribs.fill = color || \"#e6e9ff\" /* Palette.highlightColor10 */;\n        if (options.borderWidth) {\n          attribs.stroke = options.borderColor;\n          attribs['stroke-width'] = options.borderWidth;\n        }\n      }\n    }\n    // Grouping and zIndex\n    groupAttribs.zIndex = zIndex;\n    groupName += '-' + zIndex;\n    group = axis.plotLinesAndBandsGroups[groupName];\n    if (!group) {\n      axis.plotLinesAndBandsGroups[groupName] = group = renderer.g('plot-' + groupName).attr(groupAttribs).add();\n    }\n    // Create the path\n    if (isNew) {\n      /**\n       * SVG element of the plot line or band.\n       *\n       * @name Highcharts.PlotLineOrBand#svgElem\n       * @type {Highcharts.SVGElement}\n       */\n      plotLine.svgElem = svgElem = renderer.path().attr(attribs).add(group);\n    }\n    // Set the path or return\n    if (isLine) {\n      path = axis.getPlotLinePath({\n        value: value,\n        lineWidth: svgElem.strokeWidth(),\n        acrossPanes: options.acrossPanes\n      });\n    } else if (isBand) {\n      // plot band\n      path = axis.getPlotBandPath(from, to, options);\n    } else {\n      return;\n    }\n    // common for lines and bands\n    // Add events only if they were not added before.\n    if (!plotLine.eventsAdded && events) {\n      objectEach(events, function (event, eventType) {\n        svgElem.on(eventType, function (e) {\n          events[eventType].apply(plotLine, [e]);\n        });\n      });\n      plotLine.eventsAdded = true;\n    }\n    if ((isNew || !svgElem.d) && path && path.length) {\n      svgElem.attr({\n        d: path\n      });\n    } else if (svgElem) {\n      if (path) {\n        svgElem.show();\n        svgElem.animate({\n          d: path\n        });\n      } else if (svgElem.d) {\n        svgElem.hide();\n        if (label) {\n          plotLine.label = label = label.destroy();\n        }\n      }\n    }\n    // the plot band/line label\n    if (optionsLabel && (defined(optionsLabel.text) || defined(optionsLabel.formatter)) && path && path.length && axis.width > 0 && axis.height > 0 && !path.isFlat) {\n      // apply defaults\n      optionsLabel = merge({\n        align: horiz && isBand && 'center',\n        x: horiz ? !isBand && 4 : 10,\n        verticalAlign: !horiz && isBand && 'middle',\n        y: horiz ? isBand ? 16 : 10 : isBand ? 6 : -4,\n        rotation: horiz && !isBand && 90\n      }, optionsLabel);\n      this.renderLabel(optionsLabel, path, isBand, zIndex);\n    } else if (label) {\n      // move out of sight\n      label.hide();\n    }\n    // chainable\n    return plotLine;\n  }\n  /**\n   * Render and align label for plot line or band.\n   * @private\n   * @function Highcharts.PlotLineOrBand#renderLabel\n   */\n  renderLabel(optionsLabel, path, isBand, zIndex) {\n    const plotLine = this,\n      axis = plotLine.axis,\n      renderer = axis.chart.renderer;\n    let label = plotLine.label;\n    // Add the SVG element\n    if (!label) {\n      /**\n       * SVG element of the label.\n       *\n       * @name Highcharts.PlotLineOrBand#label\n       * @type {Highcharts.SVGElement}\n       */\n      plotLine.label = label = renderer.text(this.getLabelText(optionsLabel), 0, 0, optionsLabel.useHTML).attr({\n        align: optionsLabel.textAlign || optionsLabel.align,\n        rotation: optionsLabel.rotation,\n        'class': 'highcharts-plot-' + (isBand ? 'band' : 'line') + '-label ' + (optionsLabel.className || ''),\n        zIndex\n      });\n      if (!axis.chart.styledMode) {\n        label.css(merge({\n          fontSize: '0.8em',\n          textOverflow: 'ellipsis'\n        }, optionsLabel.style));\n      }\n      label.add();\n    }\n    // Get the bounding box and align the label\n    // #3000 changed to better handle choice between plotband or plotline\n    const xBounds = path.xBounds || [path[0][1], path[1][1], isBand ? path[2][1] : path[0][1]];\n    const yBounds = path.yBounds || [path[0][2], path[1][2], isBand ? path[2][2] : path[0][2]];\n    const x = arrayMin(xBounds);\n    const y = arrayMin(yBounds);\n    label.align(optionsLabel, false, {\n      x,\n      y,\n      width: arrayMax(xBounds) - x,\n      height: arrayMax(yBounds) - y\n    });\n    if (!label.alignValue || label.alignValue === 'left') {\n      const width = optionsLabel.clip ? axis.width : axis.chart.chartWidth;\n      label.css({\n        width: (label.rotation === 90 ? axis.height - (label.alignAttr.y - axis.top) : width - (label.alignAttr.x - axis.left)) + 'px'\n      });\n    }\n    label.show(true);\n  }\n  /**\n   * Get label's text content.\n   * @private\n   * @function Highcharts.PlotLineOrBand#getLabelText\n   */\n  getLabelText(optionsLabel) {\n    return defined(optionsLabel.formatter) ? optionsLabel.formatter.call(this) : optionsLabel.text;\n  }\n  /**\n   * Remove the plot line or band.\n   *\n   * @function Highcharts.PlotLineOrBand#destroy\n   */\n  destroy() {\n    // remove it from the lookup\n    erase(this.axis.plotLinesAndBands, this);\n    delete this.axis;\n    destroyObjectProperties(this);\n  }\n}\n/* *\n *\n *  Default Export\n *\n * */\nexport default PlotLineOrBand;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Options for plot bands on axes.\n *\n * @typedef {Highcharts.XAxisPlotBandsOptions|Highcharts.YAxisPlotBandsOptions|Highcharts.ZAxisPlotBandsOptions} Highcharts.AxisPlotBandsOptions\n */\n/**\n * Options for plot band labels on axes.\n *\n * @typedef {Highcharts.XAxisPlotBandsLabelOptions|Highcharts.YAxisPlotBandsLabelOptions|Highcharts.ZAxisPlotBandsLabelOptions} Highcharts.AxisPlotBandsLabelOptions\n */\n/**\n * Options for plot lines on axes.\n *\n * @typedef {Highcharts.XAxisPlotLinesOptions|Highcharts.YAxisPlotLinesOptions|Highcharts.ZAxisPlotLinesOptions} Highcharts.AxisPlotLinesOptions\n */\n/**\n * Options for plot line labels on axes.\n *\n * @typedef {Highcharts.XAxisPlotLinesLabelOptions|Highcharts.YAxisPlotLinesLabelOptions|Highcharts.ZAxisPlotLinesLabelOptions} Highcharts.AxisPlotLinesLabelOptions\n */\n'';\n/* *\n *\n *  API Options\n *\n * */\n/**\n * An array of colored bands stretching across the plot area marking an\n * interval on the axis.\n *\n * In styled mode, the plot bands are styled by the `.highcharts-plot-band`\n * class in addition to the `className` option.\n *\n * @productdesc {highcharts}\n * In a gauge, a plot band on the Y axis (value axis) will stretch along the\n * perimeter of the gauge.\n *\n * @type      {Array<*>}\n * @product   highcharts highstock gantt\n * @apioption xAxis.plotBands\n */\n/**\n * Flag to decide if plotBand should be rendered across all panes.\n *\n * @since     7.1.2\n * @product   highstock\n * @type      {boolean}\n * @default   true\n * @apioption xAxis.plotBands.acrossPanes\n */\n/**\n * Border color for the plot band. Also requires `borderWidth` to be set.\n *\n * @type      {Highcharts.ColorString}\n * @apioption xAxis.plotBands.borderColor\n */\n/**\n * Border width for the plot band. Also requires `borderColor` to be set.\n *\n * @type      {number}\n * @default   0\n * @apioption xAxis.plotBands.borderWidth\n */\n/**\n * A custom class name, in addition to the default `highcharts-plot-band`,\n * to apply to each individual band.\n *\n * @type      {string}\n * @since     5.0.0\n * @apioption xAxis.plotBands.className\n */\n/**\n * The color of the plot band.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Color band\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @default   #e6e9ff\n * @apioption xAxis.plotBands.color\n */\n/**\n * An object defining mouse events for the plot band. Supported properties\n * are `click`, `mouseover`, `mouseout`, `mousemove`.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-events/\n *         Mouse events demonstrated\n *\n * @since     1.2\n * @apioption xAxis.plotBands.events\n */\n/**\n * Click event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.click\n */\n/**\n * Mouse move event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mousemove\n */\n/**\n * Mouse out event on the corner of a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mouseout\n */\n/**\n * Mouse over event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mouseover\n */\n/**\n * The start position of the plot band in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Datetime axis\n * @sample {highcharts} highcharts/xaxis/plotbands-from/\n *         Categorized axis\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotBands.from\n */\n/**\n * An id used for identifying the plot band in Axis.removePlotBand.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-id/\n *         Remove plot band by id\n * @sample {highstock} highcharts/xaxis/plotbands-id/\n *         Remove plot band by id\n *\n * @type      {string}\n * @apioption xAxis.plotBands.id\n */\n/**\n * The end position of the plot band in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Datetime axis\n * @sample {highcharts} highcharts/xaxis/plotbands-from/\n *         Categorized axis\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotBands.to\n */\n/**\n * The z index of the plot band within the chart, relative to other\n * elements. Using the same z index as another element may give\n * unpredictable results, as the last rendered element will be on top.\n * Values from 0 to 20 make sense.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Behind plot lines by default\n * @sample {highcharts} highcharts/xaxis/plotbands-zindex/\n *         Above plot lines\n * @sample {highcharts} highcharts/xaxis/plotbands-zindex-above-series/\n *         Above plot lines and series\n *\n * @type      {number}\n * @since     1.2\n * @apioption xAxis.plotBands.zIndex\n */\n/**\n * Text labels for the plot bands\n *\n * @product   highcharts highstock gantt\n * @apioption xAxis.plotBands.label\n */\n/**\n * Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n * \"right\".\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-align/\n *         Aligned to the right\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {Highcharts.AlignValue}\n * @default   center\n * @since     2.1\n * @apioption xAxis.plotBands.label.align\n */\n/**\n * Rotation of the text label in degrees .\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-rotation/\n *         Vertical text\n *\n * @type      {number}\n * @default   0\n * @since     2.1\n * @apioption xAxis.plotBands.label.rotation\n */\n/**\n * CSS styles for the text label.\n *\n * In styled mode, the labels are styled by the\n * `.highcharts-plot-band-label` class.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-style/\n *         Blue and bold label\n *\n * @type      {Highcharts.CSSObject}\n * @since     2.1\n * @apioption xAxis.plotBands.label.style\n */\n/**\n * The string text itself. A subset of HTML is supported.\n *\n * @type      {string}\n * @since     2.1\n * @apioption xAxis.plotBands.label.text\n */\n/**\n * The text alignment for the label. While `align` determines where the\n * texts anchor point is placed within the plot band, `textAlign` determines\n * how the text is aligned against its anchor point. Possible values are\n * \"left\", \"center\" and \"right\". Defaults to the same as the `align` option.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-rotation/\n *         Vertical text in center position but text-aligned left\n *\n * @type       {Highcharts.AlignValue}\n * @since      2.1\n * @apioption  xAxis.plotBands.label.textAlign\n */\n/**\n * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n * to render the labels.\n *\n * @type      {boolean}\n * @default   false\n * @since     3.0.3\n * @apioption xAxis.plotBands.label.useHTML\n */\n/**\n * Vertical alignment of the label relative to the plot band. Can be one of\n * \"top\", \"middle\" or \"bottom\".\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-verticalalign/\n *         Vertically centered label\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type       {Highcharts.VerticalAlignValue}\n * @default    top\n * @since      2.1\n * @apioption  xAxis.plotBands.label.verticalAlign\n */\n/**\n * Horizontal position relative the alignment. Default varies by\n * orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-align/\n *         Aligned 10px from the right edge\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotBands.label.x\n */\n/**\n * Vertical position of the text baseline relative to the alignment. Default\n * varies by orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-y/\n *         Label on x axis\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotBands.label.y\n */\n/**\n * An array of lines stretching across the plot area, marking a specific\n * value on one of the axes.\n *\n * In styled mode, the plot lines are styled by the\n * `.highcharts-plot-line` class in addition to the `className` option.\n *\n * @type      {Array<*>}\n * @product   highcharts highstock gantt\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         Basic plot line\n * @sample {highcharts} highcharts/series-solidgauge/labels-auto-aligned/\n *         Solid gauge plot line\n * @apioption xAxis.plotLines\n */\n/**\n * Flag to decide if plotLine should be rendered across all panes.\n *\n * @sample {highstock} stock/xaxis/plotlines-acrosspanes/\n *         Plot lines on different panes\n *\n * @since     7.1.2\n * @product   highstock\n * @type      {boolean}\n * @default   true\n * @apioption xAxis.plotLines.acrossPanes\n */\n/**\n * A custom class name, in addition to the default `highcharts-plot-line`,\n * to apply to each individual line.\n *\n * @type      {string}\n * @since     5.0.0\n * @apioption xAxis.plotLines.className\n */\n/**\n * The color of the line.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         A red line from X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {Highcharts.ColorString}\n * @default   #999999\n * @apioption xAxis.plotLines.color\n */\n/**\n * The dashing or dot style for the plot line. For possible values see\n * [this overview](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-dashstyle/\n *         Dash and dot pattern\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since     1.2\n * @apioption xAxis.plotLines.dashStyle\n */\n/**\n * An object defining mouse events for the plot line. Supported\n * properties are `click`, `mouseover`, `mouseout`, `mousemove`.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-events/\n *         Mouse events demonstrated\n *\n * @since     1.2\n * @apioption xAxis.plotLines.events\n */\n/**\n * Click event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.click\n */\n/**\n * Mouse move event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mousemove\n */\n/**\n * Mouse out event on the corner of a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mouseout\n */\n/**\n * Mouse over event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mouseover\n */\n/**\n * An id used for identifying the plot line in Axis.removePlotLine.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-id/\n *         Remove plot line by id\n *\n * @type      {string}\n * @apioption xAxis.plotLines.id\n */\n/**\n * The position of the line in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         Between two categories on X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotLines.value\n */\n/**\n * The width or thickness of the plot line.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         2px wide line from X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @default   2\n * @apioption xAxis.plotLines.width\n */\n/**\n * The z index of the plot line within the chart.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-behind/\n *         Behind plot lines by default\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-above/\n *         Above plot lines\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-above-all/\n *         Above plot lines and series\n *\n * @type      {number}\n * @since     1.2\n * @apioption xAxis.plotLines.zIndex\n */\n/**\n * Text labels for the plot bands\n *\n * @apioption xAxis.plotLines.label\n */\n/**\n * Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n * \"right\".\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-align-right/\n *         Aligned to the right\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type       {Highcharts.AlignValue}\n * @default    left\n * @since      2.1\n * @apioption  xAxis.plotLines.label.align\n */\n/**\n * Whether to hide labels that are outside the plot area.\n *\n * @type      {boolean}\n * @default   false\n * @since 10.3.3\n * @apioption xAxis.plotLines.labels.clip\n */\n/**\n * Callback JavaScript function to format the label. Useful properties like\n * the value of plot line or the range of plot band (`from` & `to`\n * properties) can be found in `this.options` object.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-plotbands-label-formatter\n *         Label formatters for plot line and plot band.\n * @type      {Highcharts.FormatterCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.label.formatter\n */\n/**\n * Rotation of the text label in degrees. Defaults to 0 for horizontal plot\n * lines and 90 for vertical lines.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-verticalalign-middle/\n *         Slanted text\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.rotation\n */\n/**\n * CSS styles for the text label.\n *\n * In styled mode, the labels are styled by the\n * `.highcharts-plot-line-label` class.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-style/\n *         Blue and bold label\n *\n * @type      {Highcharts.CSSObject}\n * @since     2.1\n * @apioption xAxis.plotLines.label.style\n */\n/**\n * The text itself. A subset of HTML is supported.\n *\n * @type      {string}\n * @since     2.1\n * @apioption xAxis.plotLines.label.text\n */\n/**\n * The text alignment for the label. While `align` determines where the\n * texts anchor point is placed within the plot band, `textAlign` determines\n * how the text is aligned against its anchor point. Possible values are\n * \"left\", \"center\" and \"right\". Defaults to the same as the `align` option.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-textalign/\n *         Text label in bottom position\n *\n * @type      {Highcharts.AlignValue}\n * @since     2.1\n * @apioption xAxis.plotLines.label.textAlign\n */\n/**\n * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n * to render the labels.\n *\n * @type      {boolean}\n * @default   false\n * @since     3.0.3\n * @apioption xAxis.plotLines.label.useHTML\n */\n/**\n * Vertical alignment of the label relative to the plot line. Can be\n * one of \"top\", \"middle\" or \"bottom\".\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-verticalalign-middle/\n *         Vertically centered label\n *\n * @type       {Highcharts.VerticalAlignValue}\n * @default    {highcharts} top\n * @default    {highstock} top\n * @since      2.1\n * @apioption  xAxis.plotLines.label.verticalAlign\n */\n/**\n * Horizontal position relative the alignment. Default varies by\n * orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-align-right/\n *         Aligned 10px from the right edge\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.x\n */\n/**\n * Vertical position of the text baseline relative to the alignment. Default\n * varies by orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-y/\n *         Label below the plot line\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.y\n */\n/**\n * @type      {Array<*>}\n * @extends   xAxis.plotBands\n * @apioption yAxis.plotBands\n */\n/**\n * In a gauge chart, this option determines the inner radius of the\n * plot band that stretches along the perimeter. It can be given as\n * a percentage string, like `\"100%\"`, or as a pixel number, like `100`.\n * By default, the inner radius is controlled by the [thickness](\n * #yAxis.plotBands.thickness) option.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.innerRadius\n */\n/**\n * In a gauge chart, this option determines the outer radius of the\n * plot band that stretches along the perimeter. It can be given as\n * a percentage string, like `\"100%\"`, or as a pixel number, like `100`.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @default   100%\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.outerRadius\n */\n/**\n * In a gauge chart, this option sets the width of the plot band\n * stretching along the perimeter. It can be given as a percentage\n * string, like `\"10%\"`, or as a pixel number, like `10`. The default\n * value 10 is the same as the default [tickLength](#yAxis.tickLength),\n * thus making the plot band act as a background for the tick markers.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @default   10\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.thickness\n */\n/**\n * @type      {Array<*>}\n * @extends   xAxis.plotLines\n * @apioption yAxis.plotLines\n */\n''; // keeps doclets above in JS file","map":{"version":3,"names":["PlotLineOrBandAxis","U","arrayMax","arrayMin","defined","destroyObjectProperties","erase","fireEvent","merge","objectEach","pick","PlotLineOrBand","compose","AxisClass","constructor","axis","options","id","render","plotLine","horiz","log","logarithmic","color","zIndex","events","groupAttribs","renderer","chart","optionsLabel","label","to","from","value","svgElem","path","group","isBand","isLine","isNew","attribs","className","groupName","log2lin","styledMode","stroke","width","dashStyle","dashstyle","fill","borderWidth","borderColor","plotLinesAndBandsGroups","g","attr","add","getPlotLinePath","lineWidth","strokeWidth","acrossPanes","getPlotBandPath","eventsAdded","event","eventType","on","e","apply","d","length","show","animate","hide","destroy","text","formatter","height","isFlat","align","x","verticalAlign","y","rotation","renderLabel","getLabelText","useHTML","textAlign","css","fontSize","textOverflow","style","xBounds","yBounds","alignValue","clip","chartWidth","alignAttr","top","left","call","plotLinesAndBands"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Axis/PlotLineOrBand/PlotLineOrBand.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport PlotLineOrBandAxis from './PlotLineOrBandAxis.js';\nimport U from '../../Utilities.js';\nconst { arrayMax, arrayMin, defined, destroyObjectProperties, erase, fireEvent, merge, objectEach, pick } = U;\n/* *\n *\n *  Class\n *\n * */\n/**\n * The object wrapper for plot lines and plot bands\n *\n * @class\n * @name Highcharts.PlotLineOrBand\n *\n * @param {Highcharts.Axis} axis\n * Related axis.\n *\n * @param {Highcharts.AxisPlotLinesOptions|Highcharts.AxisPlotBandsOptions} [options]\n * Options to use.\n */\nclass PlotLineOrBand {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass) {\n        return PlotLineOrBandAxis.compose(PlotLineOrBand, AxisClass);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(axis, options) {\n        /**\n         * The id of the plot line or plot band.\n         *\n         * @name Highcharts.PlotLineOrBand#id\n         * @type {string}\n         */\n        this.id = void 0;\n        this.axis = axis;\n        if (options) {\n            this.options = options;\n            this.id = options.id;\n        }\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable no-invalid-this, valid-jsdoc */\n    /**\n     * Render the plot line or plot band. If it is already existing,\n     * move it.\n     * @private\n     * @function Highcharts.PlotLineOrBand#render\n     */\n    render() {\n        fireEvent(this, 'render');\n        const plotLine = this, \n        /**\n         * Related axis.\n         *\n         * @name Highcharts.PlotLineOrBand#axis\n         * @type {Highcharts.Axis}\n         */\n        axis = plotLine.axis, horiz = axis.horiz, log = axis.logarithmic, \n        /**\n         * Options of the plot line or band.\n         *\n         * @name Highcharts.PlotLineOrBand#options\n         * @type {AxisPlotBandsOptions|AxisPlotLinesOptions}\n         */\n        options = plotLine.options, color = options.color, zIndex = pick(options.zIndex, 0), events = options.events, groupAttribs = {}, renderer = axis.chart.renderer;\n        let optionsLabel = options.label, label = plotLine.label, to = options.to, from = options.from, value = options.value, svgElem = plotLine.svgElem, path = [], group;\n        const isBand = defined(from) && defined(to), isLine = defined(value), isNew = !svgElem, attribs = {\n            'class': 'highcharts-plot-' + (isBand ? 'band ' : 'line ') +\n                (options.className || '')\n        };\n        let groupName = isBand ? 'bands' : 'lines';\n        // logarithmic conversion\n        if (log) {\n            from = log.log2lin(from);\n            to = log.log2lin(to);\n            value = log.log2lin(value);\n        }\n        // Set the presentational attributes\n        if (!axis.chart.styledMode) {\n            if (isLine) {\n                attribs.stroke = color || \"#999999\" /* Palette.neutralColor40 */;\n                attribs['stroke-width'] = pick(options.width, 1);\n                if (options.dashStyle) {\n                    attribs.dashstyle =\n                        options.dashStyle;\n                }\n            }\n            else if (isBand) { // plot band\n                attribs.fill = color || \"#e6e9ff\" /* Palette.highlightColor10 */;\n                if (options.borderWidth) {\n                    attribs.stroke = options.borderColor;\n                    attribs['stroke-width'] = options.borderWidth;\n                }\n            }\n        }\n        // Grouping and zIndex\n        groupAttribs.zIndex = zIndex;\n        groupName += '-' + zIndex;\n        group = axis.plotLinesAndBandsGroups[groupName];\n        if (!group) {\n            axis.plotLinesAndBandsGroups[groupName] = group =\n                renderer.g('plot-' + groupName)\n                    .attr(groupAttribs).add();\n        }\n        // Create the path\n        if (isNew) {\n            /**\n             * SVG element of the plot line or band.\n             *\n             * @name Highcharts.PlotLineOrBand#svgElem\n             * @type {Highcharts.SVGElement}\n             */\n            plotLine.svgElem = svgElem = renderer\n                .path()\n                .attr(attribs)\n                .add(group);\n        }\n        // Set the path or return\n        if (isLine) {\n            path = axis.getPlotLinePath({\n                value: value,\n                lineWidth: svgElem.strokeWidth(),\n                acrossPanes: options.acrossPanes\n            });\n        }\n        else if (isBand) { // plot band\n            path = axis.getPlotBandPath(from, to, options);\n        }\n        else {\n            return;\n        }\n        // common for lines and bands\n        // Add events only if they were not added before.\n        if (!plotLine.eventsAdded && events) {\n            objectEach(events, function (event, eventType) {\n                svgElem.on(eventType, function (e) {\n                    events[eventType].apply(plotLine, [e]);\n                });\n            });\n            plotLine.eventsAdded = true;\n        }\n        if ((isNew || !svgElem.d) && path && path.length) {\n            svgElem.attr({ d: path });\n        }\n        else if (svgElem) {\n            if (path) {\n                svgElem.show();\n                svgElem.animate({ d: path });\n            }\n            else if (svgElem.d) {\n                svgElem.hide();\n                if (label) {\n                    plotLine.label = label = label.destroy();\n                }\n            }\n        }\n        // the plot band/line label\n        if (optionsLabel &&\n            (defined(optionsLabel.text) || defined(optionsLabel.formatter)) &&\n            path &&\n            path.length &&\n            axis.width > 0 &&\n            axis.height > 0 &&\n            !path.isFlat) {\n            // apply defaults\n            optionsLabel = merge({\n                align: horiz && isBand && 'center',\n                x: horiz ? !isBand && 4 : 10,\n                verticalAlign: !horiz && isBand && 'middle',\n                y: horiz ? isBand ? 16 : 10 : isBand ? 6 : -4,\n                rotation: horiz && !isBand && 90\n            }, optionsLabel);\n            this.renderLabel(optionsLabel, path, isBand, zIndex);\n        }\n        else if (label) { // move out of sight\n            label.hide();\n        }\n        // chainable\n        return plotLine;\n    }\n    /**\n     * Render and align label for plot line or band.\n     * @private\n     * @function Highcharts.PlotLineOrBand#renderLabel\n     */\n    renderLabel(optionsLabel, path, isBand, zIndex) {\n        const plotLine = this, axis = plotLine.axis, renderer = axis.chart.renderer;\n        let label = plotLine.label;\n        // Add the SVG element\n        if (!label) {\n            /**\n             * SVG element of the label.\n             *\n             * @name Highcharts.PlotLineOrBand#label\n             * @type {Highcharts.SVGElement}\n             */\n            plotLine.label = label = renderer\n                .text(this.getLabelText(optionsLabel), 0, 0, optionsLabel.useHTML)\n                .attr({\n                align: optionsLabel.textAlign || optionsLabel.align,\n                rotation: optionsLabel.rotation,\n                'class': 'highcharts-plot-' + (isBand ? 'band' : 'line') +\n                    '-label ' + (optionsLabel.className || ''),\n                zIndex\n            });\n            if (!axis.chart.styledMode) {\n                label.css(merge({\n                    fontSize: '0.8em',\n                    textOverflow: 'ellipsis'\n                }, optionsLabel.style));\n            }\n            label.add();\n        }\n        // Get the bounding box and align the label\n        // #3000 changed to better handle choice between plotband or plotline\n        const xBounds = path.xBounds ||\n            [path[0][1], path[1][1], (isBand ? path[2][1] : path[0][1])];\n        const yBounds = path.yBounds ||\n            [path[0][2], path[1][2], (isBand ? path[2][2] : path[0][2])];\n        const x = arrayMin(xBounds);\n        const y = arrayMin(yBounds);\n        label.align(optionsLabel, false, {\n            x,\n            y,\n            width: arrayMax(xBounds) - x,\n            height: arrayMax(yBounds) - y\n        });\n        if (!label.alignValue || label.alignValue === 'left') {\n            const width = optionsLabel.clip ?\n                axis.width : axis.chart.chartWidth;\n            label.css({\n                width: (label.rotation === 90 ?\n                    axis.height - (label.alignAttr.y - axis.top) :\n                    width - (label.alignAttr.x - axis.left)) + 'px'\n            });\n        }\n        label.show(true);\n    }\n    /**\n     * Get label's text content.\n     * @private\n     * @function Highcharts.PlotLineOrBand#getLabelText\n     */\n    getLabelText(optionsLabel) {\n        return defined(optionsLabel.formatter) ?\n            optionsLabel.formatter\n                .call(this) :\n            optionsLabel.text;\n    }\n    /**\n     * Remove the plot line or band.\n     *\n     * @function Highcharts.PlotLineOrBand#destroy\n     */\n    destroy() {\n        // remove it from the lookup\n        erase(this.axis.plotLinesAndBands, this);\n        delete this.axis;\n        destroyObjectProperties(this);\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nexport default PlotLineOrBand;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Options for plot bands on axes.\n *\n * @typedef {Highcharts.XAxisPlotBandsOptions|Highcharts.YAxisPlotBandsOptions|Highcharts.ZAxisPlotBandsOptions} Highcharts.AxisPlotBandsOptions\n */\n/**\n * Options for plot band labels on axes.\n *\n * @typedef {Highcharts.XAxisPlotBandsLabelOptions|Highcharts.YAxisPlotBandsLabelOptions|Highcharts.ZAxisPlotBandsLabelOptions} Highcharts.AxisPlotBandsLabelOptions\n */\n/**\n * Options for plot lines on axes.\n *\n * @typedef {Highcharts.XAxisPlotLinesOptions|Highcharts.YAxisPlotLinesOptions|Highcharts.ZAxisPlotLinesOptions} Highcharts.AxisPlotLinesOptions\n */\n/**\n * Options for plot line labels on axes.\n *\n * @typedef {Highcharts.XAxisPlotLinesLabelOptions|Highcharts.YAxisPlotLinesLabelOptions|Highcharts.ZAxisPlotLinesLabelOptions} Highcharts.AxisPlotLinesLabelOptions\n */\n('');\n/* *\n *\n *  API Options\n *\n * */\n/**\n * An array of colored bands stretching across the plot area marking an\n * interval on the axis.\n *\n * In styled mode, the plot bands are styled by the `.highcharts-plot-band`\n * class in addition to the `className` option.\n *\n * @productdesc {highcharts}\n * In a gauge, a plot band on the Y axis (value axis) will stretch along the\n * perimeter of the gauge.\n *\n * @type      {Array<*>}\n * @product   highcharts highstock gantt\n * @apioption xAxis.plotBands\n */\n/**\n * Flag to decide if plotBand should be rendered across all panes.\n *\n * @since     7.1.2\n * @product   highstock\n * @type      {boolean}\n * @default   true\n * @apioption xAxis.plotBands.acrossPanes\n */\n/**\n * Border color for the plot band. Also requires `borderWidth` to be set.\n *\n * @type      {Highcharts.ColorString}\n * @apioption xAxis.plotBands.borderColor\n */\n/**\n * Border width for the plot band. Also requires `borderColor` to be set.\n *\n * @type      {number}\n * @default   0\n * @apioption xAxis.plotBands.borderWidth\n */\n/**\n * A custom class name, in addition to the default `highcharts-plot-band`,\n * to apply to each individual band.\n *\n * @type      {string}\n * @since     5.0.0\n * @apioption xAxis.plotBands.className\n */\n/**\n * The color of the plot band.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Color band\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @default   #e6e9ff\n * @apioption xAxis.plotBands.color\n */\n/**\n * An object defining mouse events for the plot band. Supported properties\n * are `click`, `mouseover`, `mouseout`, `mousemove`.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-events/\n *         Mouse events demonstrated\n *\n * @since     1.2\n * @apioption xAxis.plotBands.events\n */\n/**\n * Click event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.click\n */\n/**\n * Mouse move event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mousemove\n */\n/**\n * Mouse out event on the corner of a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mouseout\n */\n/**\n * Mouse over event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotBands.events.mouseover\n */\n/**\n * The start position of the plot band in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Datetime axis\n * @sample {highcharts} highcharts/xaxis/plotbands-from/\n *         Categorized axis\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotBands.from\n */\n/**\n * An id used for identifying the plot band in Axis.removePlotBand.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-id/\n *         Remove plot band by id\n * @sample {highstock} highcharts/xaxis/plotbands-id/\n *         Remove plot band by id\n *\n * @type      {string}\n * @apioption xAxis.plotBands.id\n */\n/**\n * The end position of the plot band in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Datetime axis\n * @sample {highcharts} highcharts/xaxis/plotbands-from/\n *         Categorized axis\n * @sample {highstock} stock/xaxis/plotbands/\n *         Plot band on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotBands.to\n */\n/**\n * The z index of the plot band within the chart, relative to other\n * elements. Using the same z index as another element may give\n * unpredictable results, as the last rendered element will be on top.\n * Values from 0 to 20 make sense.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-color/\n *         Behind plot lines by default\n * @sample {highcharts} highcharts/xaxis/plotbands-zindex/\n *         Above plot lines\n * @sample {highcharts} highcharts/xaxis/plotbands-zindex-above-series/\n *         Above plot lines and series\n *\n * @type      {number}\n * @since     1.2\n * @apioption xAxis.plotBands.zIndex\n */\n/**\n * Text labels for the plot bands\n *\n * @product   highcharts highstock gantt\n * @apioption xAxis.plotBands.label\n */\n/**\n * Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n * \"right\".\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-align/\n *         Aligned to the right\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {Highcharts.AlignValue}\n * @default   center\n * @since     2.1\n * @apioption xAxis.plotBands.label.align\n */\n/**\n * Rotation of the text label in degrees .\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-rotation/\n *         Vertical text\n *\n * @type      {number}\n * @default   0\n * @since     2.1\n * @apioption xAxis.plotBands.label.rotation\n */\n/**\n * CSS styles for the text label.\n *\n * In styled mode, the labels are styled by the\n * `.highcharts-plot-band-label` class.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-style/\n *         Blue and bold label\n *\n * @type      {Highcharts.CSSObject}\n * @since     2.1\n * @apioption xAxis.plotBands.label.style\n */\n/**\n * The string text itself. A subset of HTML is supported.\n *\n * @type      {string}\n * @since     2.1\n * @apioption xAxis.plotBands.label.text\n */\n/**\n * The text alignment for the label. While `align` determines where the\n * texts anchor point is placed within the plot band, `textAlign` determines\n * how the text is aligned against its anchor point. Possible values are\n * \"left\", \"center\" and \"right\". Defaults to the same as the `align` option.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-rotation/\n *         Vertical text in center position but text-aligned left\n *\n * @type       {Highcharts.AlignValue}\n * @since      2.1\n * @apioption  xAxis.plotBands.label.textAlign\n */\n/**\n * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n * to render the labels.\n *\n * @type      {boolean}\n * @default   false\n * @since     3.0.3\n * @apioption xAxis.plotBands.label.useHTML\n */\n/**\n * Vertical alignment of the label relative to the plot band. Can be one of\n * \"top\", \"middle\" or \"bottom\".\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-verticalalign/\n *         Vertically centered label\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type       {Highcharts.VerticalAlignValue}\n * @default    top\n * @since      2.1\n * @apioption  xAxis.plotBands.label.verticalAlign\n */\n/**\n * Horizontal position relative the alignment. Default varies by\n * orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-align/\n *         Aligned 10px from the right edge\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotBands.label.x\n */\n/**\n * Vertical position of the text baseline relative to the alignment. Default\n * varies by orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-label-y/\n *         Label on x axis\n * @sample {highstock} stock/xaxis/plotbands-label/\n *         Plot band with labels\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotBands.label.y\n */\n/**\n * An array of lines stretching across the plot area, marking a specific\n * value on one of the axes.\n *\n * In styled mode, the plot lines are styled by the\n * `.highcharts-plot-line` class in addition to the `className` option.\n *\n * @type      {Array<*>}\n * @product   highcharts highstock gantt\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         Basic plot line\n * @sample {highcharts} highcharts/series-solidgauge/labels-auto-aligned/\n *         Solid gauge plot line\n * @apioption xAxis.plotLines\n */\n/**\n * Flag to decide if plotLine should be rendered across all panes.\n *\n * @sample {highstock} stock/xaxis/plotlines-acrosspanes/\n *         Plot lines on different panes\n *\n * @since     7.1.2\n * @product   highstock\n * @type      {boolean}\n * @default   true\n * @apioption xAxis.plotLines.acrossPanes\n */\n/**\n * A custom class name, in addition to the default `highcharts-plot-line`,\n * to apply to each individual line.\n *\n * @type      {string}\n * @since     5.0.0\n * @apioption xAxis.plotLines.className\n */\n/**\n * The color of the line.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         A red line from X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {Highcharts.ColorString}\n * @default   #999999\n * @apioption xAxis.plotLines.color\n */\n/**\n * The dashing or dot style for the plot line. For possible values see\n * [this overview](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-dashstyle/\n *         Dash and dot pattern\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since     1.2\n * @apioption xAxis.plotLines.dashStyle\n */\n/**\n * An object defining mouse events for the plot line. Supported\n * properties are `click`, `mouseover`, `mouseout`, `mousemove`.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-events/\n *         Mouse events demonstrated\n *\n * @since     1.2\n * @apioption xAxis.plotLines.events\n */\n/**\n * Click event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.click\n */\n/**\n * Mouse move event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mousemove\n */\n/**\n * Mouse out event on the corner of a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mouseout\n */\n/**\n * Mouse over event on a plot band.\n *\n * @type      {Highcharts.EventCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.events.mouseover\n */\n/**\n * An id used for identifying the plot line in Axis.removePlotLine.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-id/\n *         Remove plot line by id\n *\n * @type      {string}\n * @apioption xAxis.plotLines.id\n */\n/**\n * The position of the line in axis units.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         Between two categories on X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @apioption xAxis.plotLines.value\n */\n/**\n * The width or thickness of the plot line.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-color/\n *         2px wide line from X axis\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @default   2\n * @apioption xAxis.plotLines.width\n */\n/**\n * The z index of the plot line within the chart.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-behind/\n *         Behind plot lines by default\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-above/\n *         Above plot lines\n * @sample {highcharts} highcharts/xaxis/plotlines-zindex-above-all/\n *         Above plot lines and series\n *\n * @type      {number}\n * @since     1.2\n * @apioption xAxis.plotLines.zIndex\n */\n/**\n * Text labels for the plot bands\n *\n * @apioption xAxis.plotLines.label\n */\n/**\n * Horizontal alignment of the label. Can be one of \"left\", \"center\" or\n * \"right\".\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-align-right/\n *         Aligned to the right\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type       {Highcharts.AlignValue}\n * @default    left\n * @since      2.1\n * @apioption  xAxis.plotLines.label.align\n */\n/**\n * Whether to hide labels that are outside the plot area.\n *\n * @type      {boolean}\n * @default   false\n * @since 10.3.3\n * @apioption xAxis.plotLines.labels.clip\n */\n/**\n * Callback JavaScript function to format the label. Useful properties like\n * the value of plot line or the range of plot band (`from` & `to`\n * properties) can be found in `this.options` object.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-plotbands-label-formatter\n *         Label formatters for plot line and plot band.\n * @type      {Highcharts.FormatterCallbackFunction<Highcharts.PlotLineOrBand>}\n * @apioption xAxis.plotLines.label.formatter\n */\n/**\n * Rotation of the text label in degrees. Defaults to 0 for horizontal plot\n * lines and 90 for vertical lines.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-verticalalign-middle/\n *         Slanted text\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.rotation\n */\n/**\n * CSS styles for the text label.\n *\n * In styled mode, the labels are styled by the\n * `.highcharts-plot-line-label` class.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-style/\n *         Blue and bold label\n *\n * @type      {Highcharts.CSSObject}\n * @since     2.1\n * @apioption xAxis.plotLines.label.style\n */\n/**\n * The text itself. A subset of HTML is supported.\n *\n * @type      {string}\n * @since     2.1\n * @apioption xAxis.plotLines.label.text\n */\n/**\n * The text alignment for the label. While `align` determines where the\n * texts anchor point is placed within the plot band, `textAlign` determines\n * how the text is aligned against its anchor point. Possible values are\n * \"left\", \"center\" and \"right\". Defaults to the same as the `align` option.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-textalign/\n *         Text label in bottom position\n *\n * @type      {Highcharts.AlignValue}\n * @since     2.1\n * @apioption xAxis.plotLines.label.textAlign\n */\n/**\n * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n * to render the labels.\n *\n * @type      {boolean}\n * @default   false\n * @since     3.0.3\n * @apioption xAxis.plotLines.label.useHTML\n */\n/**\n * Vertical alignment of the label relative to the plot line. Can be\n * one of \"top\", \"middle\" or \"bottom\".\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-verticalalign-middle/\n *         Vertically centered label\n *\n * @type       {Highcharts.VerticalAlignValue}\n * @default    {highcharts} top\n * @default    {highstock} top\n * @since      2.1\n * @apioption  xAxis.plotLines.label.verticalAlign\n */\n/**\n * Horizontal position relative the alignment. Default varies by\n * orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-align-right/\n *         Aligned 10px from the right edge\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.x\n */\n/**\n * Vertical position of the text baseline relative to the alignment. Default\n * varies by orientation.\n *\n * @sample {highcharts} highcharts/xaxis/plotlines-label-y/\n *         Label below the plot line\n * @sample {highstock} stock/xaxis/plotlines/\n *         Plot line on Y axis\n *\n * @type      {number}\n * @since     2.1\n * @apioption xAxis.plotLines.label.y\n */\n/**\n * @type      {Array<*>}\n * @extends   xAxis.plotBands\n * @apioption yAxis.plotBands\n */\n/**\n * In a gauge chart, this option determines the inner radius of the\n * plot band that stretches along the perimeter. It can be given as\n * a percentage string, like `\"100%\"`, or as a pixel number, like `100`.\n * By default, the inner radius is controlled by the [thickness](\n * #yAxis.plotBands.thickness) option.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.innerRadius\n */\n/**\n * In a gauge chart, this option determines the outer radius of the\n * plot band that stretches along the perimeter. It can be given as\n * a percentage string, like `\"100%\"`, or as a pixel number, like `100`.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @default   100%\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.outerRadius\n */\n/**\n * In a gauge chart, this option sets the width of the plot band\n * stretching along the perimeter. It can be given as a percentage\n * string, like `\"10%\"`, or as a pixel number, like `10`. The default\n * value 10 is the same as the default [tickLength](#yAxis.tickLength),\n * thus making the plot band act as a background for the tick markers.\n *\n * @sample {highcharts} highcharts/xaxis/plotbands-gauge\n *         Gauge plot band\n *\n * @type      {number|string}\n * @default   10\n * @since     2.3\n * @product   highcharts\n * @apioption yAxis.plotBands.thickness\n */\n/**\n * @type      {Array<*>}\n * @extends   xAxis.plotLines\n * @apioption yAxis.plotLines\n */\n(''); // keeps doclets above in JS file\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}