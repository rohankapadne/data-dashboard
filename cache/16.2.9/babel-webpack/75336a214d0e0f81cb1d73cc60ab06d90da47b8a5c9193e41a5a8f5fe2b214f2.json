{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport H from '../Globals.js';\nimport D from '../Defaults.js';\nconst {\n  defaultOptions\n} = D;\nimport Point from './Point.js';\nimport U from '../Utilities.js';\nconst {\n  extendClass,\n  merge\n} = U;\n/* *\n *\n *  Namespace\n *\n * */\nvar SeriesRegistry;\n(function (SeriesRegistry) {\n  /* *\n   *\n   *  Properties\n   *\n   * */\n  /**\n   * @internal\n   * @todo Move `Globals.seriesTypes` code to her.\n   */\n  SeriesRegistry.seriesTypes = H.seriesTypes;\n  /* *\n   *\n   *  Functions\n   *\n   * */\n  /**\n   * Registers class pattern of a series.\n   *\n   * @private\n   */\n  function registerSeriesType(seriesType, SeriesClass) {\n    const defaultPlotOptions = defaultOptions.plotOptions || {},\n      seriesOptions = SeriesClass.defaultOptions,\n      seriesProto = SeriesClass.prototype;\n    seriesProto.type = seriesType;\n    if (!seriesProto.pointClass) {\n      seriesProto.pointClass = Point;\n    }\n    if (seriesOptions) {\n      defaultPlotOptions[seriesType] = seriesOptions;\n    }\n    SeriesRegistry.seriesTypes[seriesType] = SeriesClass;\n  }\n  SeriesRegistry.registerSeriesType = registerSeriesType;\n  /**\n   * Old factory to create new series prototypes.\n   *\n   * @deprecated\n   * @function Highcharts.seriesType\n   *\n   * @param {string} type\n   * The series type name.\n   *\n   * @param {string} parent\n   * The parent series type name. Use `line` to inherit from the basic\n   * {@link Series} object.\n   *\n   * @param {Highcharts.SeriesOptionsType|Highcharts.Dictionary<*>} options\n   * The additional default options that are merged with the parent's options.\n   *\n   * @param {Highcharts.Dictionary<*>} [props]\n   * The properties (functions and primitives) to set on the new prototype.\n   *\n   * @param {Highcharts.Dictionary<*>} [pointProps]\n   * Members for a series-specific extension of the {@link Point} prototype if\n   * needed.\n   *\n   * @return {Highcharts.Series}\n   * The newly created prototype as extended from {@link Series} or its\n   * derivatives.\n   */\n  function seriesType(type, parent, options, seriesProto, pointProto) {\n    const defaultPlotOptions = defaultOptions.plotOptions || {};\n    parent = parent || '';\n    // Merge the options\n    defaultPlotOptions[type] = merge(defaultPlotOptions[parent], options);\n    // Create the class\n    registerSeriesType(type, extendClass(SeriesRegistry.seriesTypes[parent] || function () {}, seriesProto));\n    SeriesRegistry.seriesTypes[type].prototype.type = type;\n    // Create the point class if needed\n    if (pointProto) {\n      SeriesRegistry.seriesTypes[type].prototype.pointClass = extendClass(Point, pointProto);\n    }\n    return SeriesRegistry.seriesTypes[type];\n  }\n  SeriesRegistry.seriesType = seriesType;\n})(SeriesRegistry || (SeriesRegistry = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default SeriesRegistry;","map":{"version":3,"names":["H","D","defaultOptions","Point","U","extendClass","merge","SeriesRegistry","seriesTypes","registerSeriesType","seriesType","SeriesClass","defaultPlotOptions","plotOptions","seriesOptions","seriesProto","prototype","type","pointClass","parent","options","pointProto"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Series/SeriesRegistry.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../Globals.js';\nimport D from '../Defaults.js';\nconst { defaultOptions } = D;\nimport Point from './Point.js';\nimport U from '../Utilities.js';\nconst { extendClass, merge } = U;\n/* *\n *\n *  Namespace\n *\n * */\nvar SeriesRegistry;\n(function (SeriesRegistry) {\n    /* *\n     *\n     *  Properties\n     *\n     * */\n    /**\n     * @internal\n     * @todo Move `Globals.seriesTypes` code to her.\n     */\n    SeriesRegistry.seriesTypes = H.seriesTypes;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Registers class pattern of a series.\n     *\n     * @private\n     */\n    function registerSeriesType(seriesType, SeriesClass) {\n        const defaultPlotOptions = defaultOptions.plotOptions || {}, seriesOptions = SeriesClass.defaultOptions, seriesProto = SeriesClass.prototype;\n        seriesProto.type = seriesType;\n        if (!seriesProto.pointClass) {\n            seriesProto.pointClass = Point;\n        }\n        if (seriesOptions) {\n            defaultPlotOptions[seriesType] = seriesOptions;\n        }\n        SeriesRegistry.seriesTypes[seriesType] = SeriesClass;\n    }\n    SeriesRegistry.registerSeriesType = registerSeriesType;\n    /**\n     * Old factory to create new series prototypes.\n     *\n     * @deprecated\n     * @function Highcharts.seriesType\n     *\n     * @param {string} type\n     * The series type name.\n     *\n     * @param {string} parent\n     * The parent series type name. Use `line` to inherit from the basic\n     * {@link Series} object.\n     *\n     * @param {Highcharts.SeriesOptionsType|Highcharts.Dictionary<*>} options\n     * The additional default options that are merged with the parent's options.\n     *\n     * @param {Highcharts.Dictionary<*>} [props]\n     * The properties (functions and primitives) to set on the new prototype.\n     *\n     * @param {Highcharts.Dictionary<*>} [pointProps]\n     * Members for a series-specific extension of the {@link Point} prototype if\n     * needed.\n     *\n     * @return {Highcharts.Series}\n     * The newly created prototype as extended from {@link Series} or its\n     * derivatives.\n     */\n    function seriesType(type, parent, options, seriesProto, pointProto) {\n        const defaultPlotOptions = defaultOptions.plotOptions || {};\n        parent = parent || '';\n        // Merge the options\n        defaultPlotOptions[type] = merge(defaultPlotOptions[parent], options);\n        // Create the class\n        registerSeriesType(type, extendClass(SeriesRegistry.seriesTypes[parent] || function () { }, seriesProto));\n        SeriesRegistry.seriesTypes[type].prototype.type = type;\n        // Create the point class if needed\n        if (pointProto) {\n            SeriesRegistry.seriesTypes[type].prototype.pointClass = extendClass(Point, pointProto);\n        }\n        return SeriesRegistry.seriesTypes[type];\n    }\n    SeriesRegistry.seriesType = seriesType;\n})(SeriesRegistry || (SeriesRegistry = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default SeriesRegistry;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,OAAOA,CAAC,MAAM,eAAe;AAC7B,OAAOC,CAAC,MAAM,gBAAgB;AAC9B,MAAM;EAAEC;AAAe,CAAC,GAAGD,CAAC;AAC5B,OAAOE,KAAK,MAAM,YAAY;AAC9B,OAAOC,CAAC,MAAM,iBAAiB;AAC/B,MAAM;EAAEC,WAAW;EAAEC;AAAM,CAAC,GAAGF,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,IAAIG,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvB;AACJ;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;EACIA,cAAc,CAACC,WAAW,GAAGR,CAAC,CAACQ,WAAW;EAC1C;AACJ;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;EACI,SAASC,kBAAkBA,CAACC,UAAU,EAAEC,WAAW,EAAE;IACjD,MAAMC,kBAAkB,GAAGV,cAAc,CAACW,WAAW,IAAI,CAAC,CAAC;MAAEC,aAAa,GAAGH,WAAW,CAACT,cAAc;MAAEa,WAAW,GAAGJ,WAAW,CAACK,SAAS;IAC5ID,WAAW,CAACE,IAAI,GAAGP,UAAU;IAC7B,IAAI,CAACK,WAAW,CAACG,UAAU,EAAE;MACzBH,WAAW,CAACG,UAAU,GAAGf,KAAK;IAClC;IACA,IAAIW,aAAa,EAAE;MACfF,kBAAkB,CAACF,UAAU,CAAC,GAAGI,aAAa;IAClD;IACAP,cAAc,CAACC,WAAW,CAACE,UAAU,CAAC,GAAGC,WAAW;EACxD;EACAJ,cAAc,CAACE,kBAAkB,GAAGA,kBAAkB;EACtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,UAAUA,CAACO,IAAI,EAAEE,MAAM,EAAEC,OAAO,EAAEL,WAAW,EAAEM,UAAU,EAAE;IAChE,MAAMT,kBAAkB,GAAGV,cAAc,CAACW,WAAW,IAAI,CAAC,CAAC;IAC3DM,MAAM,GAAGA,MAAM,IAAI,EAAE;IACrB;IACAP,kBAAkB,CAACK,IAAI,CAAC,GAAGX,KAAK,CAACM,kBAAkB,CAACO,MAAM,CAAC,EAAEC,OAAO,CAAC;IACrE;IACAX,kBAAkB,CAACQ,IAAI,EAAEZ,WAAW,CAACE,cAAc,CAACC,WAAW,CAACW,MAAM,CAAC,IAAI,YAAY,CAAE,CAAC,EAAEJ,WAAW,CAAC,CAAC;IACzGR,cAAc,CAACC,WAAW,CAACS,IAAI,CAAC,CAACD,SAAS,CAACC,IAAI,GAAGA,IAAI;IACtD;IACA,IAAII,UAAU,EAAE;MACZd,cAAc,CAACC,WAAW,CAACS,IAAI,CAAC,CAACD,SAAS,CAACE,UAAU,GAAGb,WAAW,CAACF,KAAK,EAAEkB,UAAU,CAAC;IAC1F;IACA,OAAOd,cAAc,CAACC,WAAW,CAACS,IAAI,CAAC;EAC3C;EACAV,cAAc,CAACG,UAAU,GAAGA,UAAU;AAC1C,CAAC,EAAEH,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}