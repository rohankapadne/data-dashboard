{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport U from '../Utilities.js';\nconst {\n  extend,\n  merge,\n  pick\n} = U;\n/* *\n *\n *  Namespace\n *\n * */\nvar LegendSymbol;\n(function (LegendSymbol) {\n  /* *\n  *\n  *  Functions\n  *\n  * */\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Get the series' symbol in the legend.\n   *\n   * This method should be overridable to create custom symbols through\n   * Highcharts.seriesTypes[type].prototype.drawLegendSymbol.\n   *\n   * @private\n   * @function Highcharts.LegendSymbolMixin.lineMarker\n   *\n   * @param {Highcharts.Legend} legend\n   * The legend object.\n   */\n  function lineMarker(legend, item) {\n    const legendItem = this.legendItem = this.legendItem || {},\n      options = this.options,\n      symbolWidth = legend.symbolWidth,\n      symbolHeight = legend.symbolHeight,\n      symbol = this.symbol || 'circle',\n      generalRadius = symbolHeight / 2,\n      renderer = this.chart.renderer,\n      legendItemGroup = legendItem.group,\n      verticalCenter = legend.baseline - Math.round(legend.fontMetrics.b * 0.3);\n    let attr = {},\n      legendSymbol,\n      markerOptions = options.marker,\n      lineSizer = 0;\n    // Draw the line\n    if (!this.chart.styledMode) {\n      attr = {\n        'stroke-width': Math.min(options.lineWidth || 0, 24)\n      };\n      if (options.dashStyle) {\n        attr.dashstyle = options.dashStyle;\n      } else if (options.linecap !== 'square') {\n        attr['stroke-linecap'] = 'round';\n      }\n    }\n    legendItem.line = renderer.path().addClass('highcharts-graph').attr(attr).add(legendItemGroup);\n    if (attr['stroke-linecap']) {\n      lineSizer = Math.min(legendItem.line.strokeWidth(), symbolWidth) / 2;\n    }\n    if (symbolWidth) {\n      legendItem.line.attr({\n        d: [['M', lineSizer, verticalCenter], ['L', symbolWidth - lineSizer, verticalCenter]]\n      });\n    }\n    // Draw the marker\n    if (markerOptions && markerOptions.enabled !== false && symbolWidth) {\n      // Do not allow the marker to be larger than the symbolHeight\n      let radius = Math.min(pick(markerOptions.radius, generalRadius), generalRadius);\n      // Restrict symbol markers size\n      if (symbol.indexOf('url') === 0) {\n        markerOptions = merge(markerOptions, {\n          width: symbolHeight,\n          height: symbolHeight\n        });\n        radius = 0;\n      }\n      legendItem.symbol = legendSymbol = renderer.symbol(symbol, symbolWidth / 2 - radius, verticalCenter - radius, 2 * radius, 2 * radius, extend({\n        context: 'legend'\n      }, markerOptions)).addClass('highcharts-point').add(legendItemGroup);\n      legendSymbol.isMarker = true;\n    }\n  }\n  LegendSymbol.lineMarker = lineMarker;\n  /**\n   * Get the series' symbol in the legend.\n   *\n   * This method should be overridable to create custom symbols through\n   * Highcharts.seriesTypes[type].prototype.drawLegendSymbol.\n   *\n   * @private\n   * @function Highcharts.LegendSymbolMixin.rectangle\n   *\n   * @param {Highcharts.Legend} legend\n   * The legend object\n   *\n   * @param {Highcharts.Point|Highcharts.Series} item\n   * The series (this) or point\n   */\n  function rectangle(legend, item) {\n    const legendItem = item.legendItem || {},\n      options = legend.options,\n      symbolHeight = legend.symbolHeight,\n      square = options.squareSymbol,\n      symbolWidth = square ? symbolHeight : legend.symbolWidth;\n    legendItem.symbol = this.chart.renderer.rect(square ? (legend.symbolWidth - symbolHeight) / 2 : 0, legend.baseline - symbolHeight + 1,\n    // #3988\n    symbolWidth, symbolHeight, pick(legend.options.symbolRadius, symbolHeight / 2)).addClass('highcharts-point').attr({\n      zIndex: 3\n    }).add(legendItem.group);\n  }\n  LegendSymbol.rectangle = rectangle;\n})(LegendSymbol || (LegendSymbol = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default LegendSymbol;","map":{"version":3,"names":["U","extend","merge","pick","LegendSymbol","lineMarker","legend","item","legendItem","options","symbolWidth","symbolHeight","symbol","generalRadius","renderer","chart","legendItemGroup","group","verticalCenter","baseline","Math","round","fontMetrics","b","attr","legendSymbol","markerOptions","marker","lineSizer","styledMode","min","lineWidth","dashStyle","dashstyle","linecap","line","path","addClass","add","strokeWidth","d","enabled","radius","indexOf","width","height","context","isMarker","rectangle","square","squareSymbol","rect","symbolRadius","zIndex"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Legend/LegendSymbol.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport U from '../Utilities.js';\nconst { extend, merge, pick } = U;\n/* *\n *\n *  Namespace\n *\n * */\nvar LegendSymbol;\n(function (LegendSymbol) {\n    /* *\n    *\n    *  Functions\n    *\n    * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Get the series' symbol in the legend.\n     *\n     * This method should be overridable to create custom symbols through\n     * Highcharts.seriesTypes[type].prototype.drawLegendSymbol.\n     *\n     * @private\n     * @function Highcharts.LegendSymbolMixin.lineMarker\n     *\n     * @param {Highcharts.Legend} legend\n     * The legend object.\n     */\n    function lineMarker(legend, item) {\n        const legendItem = this.legendItem = this.legendItem || {}, options = this.options, symbolWidth = legend.symbolWidth, symbolHeight = legend.symbolHeight, symbol = this.symbol || 'circle', generalRadius = symbolHeight / 2, renderer = this.chart.renderer, legendItemGroup = legendItem.group, verticalCenter = legend.baseline -\n            Math.round(legend.fontMetrics.b * 0.3);\n        let attr = {}, legendSymbol, markerOptions = options.marker, lineSizer = 0;\n        // Draw the line\n        if (!this.chart.styledMode) {\n            attr = {\n                'stroke-width': Math.min(options.lineWidth || 0, 24)\n            };\n            if (options.dashStyle) {\n                attr.dashstyle = options.dashStyle;\n            }\n            else if (options.linecap !== 'square') {\n                attr['stroke-linecap'] = 'round';\n            }\n        }\n        legendItem.line = renderer\n            .path()\n            .addClass('highcharts-graph')\n            .attr(attr)\n            .add(legendItemGroup);\n        if (attr['stroke-linecap']) {\n            lineSizer = Math.min(legendItem.line.strokeWidth(), symbolWidth) / 2;\n        }\n        if (symbolWidth) {\n            legendItem.line\n                .attr({\n                d: [\n                    ['M', lineSizer, verticalCenter],\n                    ['L', symbolWidth - lineSizer, verticalCenter]\n                ]\n            });\n        }\n        // Draw the marker\n        if (markerOptions && markerOptions.enabled !== false && symbolWidth) {\n            // Do not allow the marker to be larger than the symbolHeight\n            let radius = Math.min(pick(markerOptions.radius, generalRadius), generalRadius);\n            // Restrict symbol markers size\n            if (symbol.indexOf('url') === 0) {\n                markerOptions = merge(markerOptions, {\n                    width: symbolHeight,\n                    height: symbolHeight\n                });\n                radius = 0;\n            }\n            legendItem.symbol = legendSymbol = renderer\n                .symbol(symbol, (symbolWidth / 2) - radius, verticalCenter - radius, 2 * radius, 2 * radius, extend({ context: 'legend' }, markerOptions))\n                .addClass('highcharts-point')\n                .add(legendItemGroup);\n            legendSymbol.isMarker = true;\n        }\n    }\n    LegendSymbol.lineMarker = lineMarker;\n    /**\n     * Get the series' symbol in the legend.\n     *\n     * This method should be overridable to create custom symbols through\n     * Highcharts.seriesTypes[type].prototype.drawLegendSymbol.\n     *\n     * @private\n     * @function Highcharts.LegendSymbolMixin.rectangle\n     *\n     * @param {Highcharts.Legend} legend\n     * The legend object\n     *\n     * @param {Highcharts.Point|Highcharts.Series} item\n     * The series (this) or point\n     */\n    function rectangle(legend, item) {\n        const legendItem = item.legendItem || {}, options = legend.options, symbolHeight = legend.symbolHeight, square = options.squareSymbol, symbolWidth = square ? symbolHeight : legend.symbolWidth;\n        legendItem.symbol = this.chart.renderer\n            .rect(square ? (legend.symbolWidth - symbolHeight) / 2 : 0, legend.baseline - symbolHeight + 1, // #3988\n        symbolWidth, symbolHeight, pick(legend.options.symbolRadius, symbolHeight / 2))\n            .addClass('highcharts-point')\n            .attr({\n            zIndex: 3\n        })\n            .add(legendItem.group);\n    }\n    LegendSymbol.rectangle = rectangle;\n})(LegendSymbol || (LegendSymbol = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default LegendSymbol;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}