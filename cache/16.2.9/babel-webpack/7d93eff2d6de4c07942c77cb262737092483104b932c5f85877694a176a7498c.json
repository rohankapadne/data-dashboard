{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport Fx from './Fx.js';\nimport U from '../Utilities.js';\nconst {\n  defined,\n  getStyle,\n  isArray,\n  isNumber,\n  isObject,\n  merge,\n  objectEach,\n  pick\n} = U;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Set the global animation to either a given value, or fall back to the given\n * chart's animation option.\n *\n * @function Highcharts.setAnimation\n *\n * @param {boolean|Partial<Highcharts.AnimationOptionsObject>|undefined} animation\n *        The animation object.\n *\n * @param {Highcharts.Chart} chart\n *        The chart instance.\n *\n * @todo\n * This function always relates to a chart, and sets a property on the renderer,\n * so it should be moved to the SVGRenderer.\n */\nfunction setAnimation(animation, chart) {\n  chart.renderer.globalAnimation = pick(animation, chart.options.chart.animation, true);\n}\n/**\n * Get the animation in object form, where a disabled animation is always\n * returned as `{ duration: 0 }`.\n *\n * @function Highcharts.animObject\n *\n * @param {boolean|Highcharts.AnimationOptionsObject} [animation=0]\n *        An animation setting. Can be an object with duration, complete and\n *        easing properties, or a boolean to enable or disable.\n *\n * @return {Highcharts.AnimationOptionsObject}\n *         An object with at least a duration property.\n */\nfunction animObject(animation) {\n  return isObject(animation) ? merge({\n    duration: 500,\n    defer: 0\n  }, animation) : {\n    duration: animation ? 500 : 0,\n    defer: 0\n  };\n}\n/**\n * Get the defer as a number value from series animation options.\n *\n * @function Highcharts.getDeferredAnimation\n *\n * @param {Highcharts.Chart} chart\n *        The chart instance.\n *\n * @param {boolean|Highcharts.AnimationOptionsObject} animation\n *        An animation setting. Can be an object with duration, complete and\n *        easing properties, or a boolean to enable or disable.\n *\n * @param {Highcharts.Series} [series]\n *        Series to defer animation.\n *\n * @return {number}\n *        The numeric value.\n */\nfunction getDeferredAnimation(chart, animation, series) {\n  const labelAnimation = animObject(animation),\n    s = series ? [series] : chart.series;\n  let defer = 0,\n    duration = 0;\n  s.forEach(series => {\n    const seriesAnim = animObject(series.options.animation);\n    defer = animation && defined(animation.defer) ? labelAnimation.defer : Math.max(defer, seriesAnim.duration + seriesAnim.defer);\n    duration = Math.min(labelAnimation.duration, seriesAnim.duration);\n  });\n  // Disable defer for exporting\n  if (chart.renderer.forExport) {\n    defer = 0;\n  }\n  const anim = {\n    defer: Math.max(0, defer - duration),\n    duration: Math.min(defer, duration)\n  };\n  return anim;\n}\n/**\n * The global animate method, which uses Fx to create individual animators.\n *\n * @function Highcharts.animate\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGElement} el\n *        The element to animate.\n *\n * @param {Highcharts.CSSObject|Highcharts.SVGAttributes} params\n *        An object containing key-value pairs of the properties to animate.\n *        Supports numeric as pixel-based CSS properties for HTML objects and\n *        attributes for SVGElements.\n *\n * @param {Partial<Highcharts.AnimationOptionsObject>} [opt]\n *        Animation options.\n *\n * @return {void}\n */\nfunction animate(el, params, opt) {\n  let start,\n    unit = '',\n    end,\n    fx,\n    args;\n  if (!isObject(opt)) {\n    // Number or undefined/null\n    args = arguments;\n    opt = {\n      duration: args[2],\n      easing: args[3],\n      complete: args[4]\n    };\n  }\n  if (!isNumber(opt.duration)) {\n    opt.duration = 400;\n  }\n  opt.easing = typeof opt.easing === 'function' ? opt.easing : Math[opt.easing] || Math.easeInOutSine;\n  opt.curAnim = merge(params);\n  objectEach(params, function (val, prop) {\n    // Stop current running animation of this property\n    stop(el, prop);\n    fx = new Fx(el, opt, prop);\n    end = void 0;\n    if (prop === 'd' && isArray(params.d)) {\n      fx.paths = fx.initPath(el, el.pathArray, params.d);\n      fx.toD = params.d;\n      start = 0;\n      end = 1;\n    } else if (el.attr) {\n      start = el.attr(prop);\n    } else {\n      start = parseFloat(getStyle(el, prop)) || 0;\n      if (prop !== 'opacity') {\n        unit = 'px';\n      }\n    }\n    if (!end) {\n      end = val;\n    }\n    if (typeof end === 'string' && end.match('px')) {\n      end = end.replace(/px/g, ''); // #4351\n    }\n\n    fx.run(start, end, unit);\n  });\n}\n/**\n * Stop running animation.\n *\n * @function Highcharts.stop\n *\n * @param {Highcharts.SVGElement} el\n *        The SVGElement to stop animation on.\n *\n * @param {string} [prop]\n *        The property to stop animating. If given, the stop method will stop a\n *        single property from animating, while others continue.\n *\n * @return {void}\n *\n * @todo\n * A possible extension to this would be to stop a single property, when\n * we want to continue animating others. Then assign the prop to the timer\n * in the Fx.run method, and check for the prop here. This would be an\n * improvement in all cases where we stop the animation from .attr. Instead of\n * stopping everything, we can just stop the actual attributes we're setting.\n */\nfunction stop(el, prop) {\n  let i = Fx.timers.length;\n  // Remove timers related to this element (#4519)\n  while (i--) {\n    if (Fx.timers[i].elem === el && (!prop || prop === Fx.timers[i].prop)) {\n      Fx.timers[i].stopped = true; // #4667\n    }\n  }\n}\n\nconst animationExports = {\n  animate,\n  animObject,\n  getDeferredAnimation,\n  setAnimation,\n  stop\n};\n/* *\n *\n *  Default Export\n *\n * */\nexport default animationExports;","map":{"version":3,"names":["Fx","U","defined","getStyle","isArray","isNumber","isObject","merge","objectEach","pick","setAnimation","animation","chart","renderer","globalAnimation","options","animObject","duration","defer","getDeferredAnimation","series","labelAnimation","s","forEach","seriesAnim","Math","max","min","forExport","anim","animate","el","params","opt","start","unit","end","fx","args","arguments","easing","complete","easeInOutSine","curAnim","val","prop","stop","d","paths","initPath","pathArray","toD","attr","parseFloat","match","replace","run","i","timers","length","elem","stopped","animationExports"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Animation/AnimationUtilities.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport Fx from './Fx.js';\nimport U from '../Utilities.js';\nconst { defined, getStyle, isArray, isNumber, isObject, merge, objectEach, pick } = U;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Set the global animation to either a given value, or fall back to the given\n * chart's animation option.\n *\n * @function Highcharts.setAnimation\n *\n * @param {boolean|Partial<Highcharts.AnimationOptionsObject>|undefined} animation\n *        The animation object.\n *\n * @param {Highcharts.Chart} chart\n *        The chart instance.\n *\n * @todo\n * This function always relates to a chart, and sets a property on the renderer,\n * so it should be moved to the SVGRenderer.\n */\nfunction setAnimation(animation, chart) {\n    chart.renderer.globalAnimation = pick(animation, chart.options.chart.animation, true);\n}\n/**\n * Get the animation in object form, where a disabled animation is always\n * returned as `{ duration: 0 }`.\n *\n * @function Highcharts.animObject\n *\n * @param {boolean|Highcharts.AnimationOptionsObject} [animation=0]\n *        An animation setting. Can be an object with duration, complete and\n *        easing properties, or a boolean to enable or disable.\n *\n * @return {Highcharts.AnimationOptionsObject}\n *         An object with at least a duration property.\n */\nfunction animObject(animation) {\n    return isObject(animation) ?\n        merge({ duration: 500, defer: 0 }, animation) :\n        { duration: animation ? 500 : 0, defer: 0 };\n}\n/**\n * Get the defer as a number value from series animation options.\n *\n * @function Highcharts.getDeferredAnimation\n *\n * @param {Highcharts.Chart} chart\n *        The chart instance.\n *\n * @param {boolean|Highcharts.AnimationOptionsObject} animation\n *        An animation setting. Can be an object with duration, complete and\n *        easing properties, or a boolean to enable or disable.\n *\n * @param {Highcharts.Series} [series]\n *        Series to defer animation.\n *\n * @return {number}\n *        The numeric value.\n */\nfunction getDeferredAnimation(chart, animation, series) {\n    const labelAnimation = animObject(animation), s = series ? [series] : chart.series;\n    let defer = 0, duration = 0;\n    s.forEach((series) => {\n        const seriesAnim = animObject(series.options.animation);\n        defer = animation && defined(animation.defer) ?\n            labelAnimation.defer :\n            Math.max(defer, seriesAnim.duration + seriesAnim.defer);\n        duration = Math.min(labelAnimation.duration, seriesAnim.duration);\n    });\n    // Disable defer for exporting\n    if (chart.renderer.forExport) {\n        defer = 0;\n    }\n    const anim = {\n        defer: Math.max(0, defer - duration),\n        duration: Math.min(defer, duration)\n    };\n    return anim;\n}\n/**\n * The global animate method, which uses Fx to create individual animators.\n *\n * @function Highcharts.animate\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGElement} el\n *        The element to animate.\n *\n * @param {Highcharts.CSSObject|Highcharts.SVGAttributes} params\n *        An object containing key-value pairs of the properties to animate.\n *        Supports numeric as pixel-based CSS properties for HTML objects and\n *        attributes for SVGElements.\n *\n * @param {Partial<Highcharts.AnimationOptionsObject>} [opt]\n *        Animation options.\n *\n * @return {void}\n */\nfunction animate(el, params, opt) {\n    let start, unit = '', end, fx, args;\n    if (!isObject(opt)) { // Number or undefined/null\n        args = arguments;\n        opt = {\n            duration: args[2],\n            easing: args[3],\n            complete: args[4]\n        };\n    }\n    if (!isNumber(opt.duration)) {\n        opt.duration = 400;\n    }\n    opt.easing = typeof opt.easing === 'function' ?\n        opt.easing :\n        (Math[opt.easing] || Math.easeInOutSine);\n    opt.curAnim = merge(params);\n    objectEach(params, function (val, prop) {\n        // Stop current running animation of this property\n        stop(el, prop);\n        fx = new Fx(el, opt, prop);\n        end = void 0;\n        if (prop === 'd' && isArray(params.d)) {\n            fx.paths = fx.initPath(el, el.pathArray, params.d);\n            fx.toD = params.d;\n            start = 0;\n            end = 1;\n        }\n        else if (el.attr) {\n            start = el.attr(prop);\n        }\n        else {\n            start = parseFloat(getStyle(el, prop)) || 0;\n            if (prop !== 'opacity') {\n                unit = 'px';\n            }\n        }\n        if (!end) {\n            end = val;\n        }\n        if (typeof end === 'string' && end.match('px')) {\n            end = end.replace(/px/g, ''); // #4351\n        }\n        fx.run(start, end, unit);\n    });\n}\n/**\n * Stop running animation.\n *\n * @function Highcharts.stop\n *\n * @param {Highcharts.SVGElement} el\n *        The SVGElement to stop animation on.\n *\n * @param {string} [prop]\n *        The property to stop animating. If given, the stop method will stop a\n *        single property from animating, while others continue.\n *\n * @return {void}\n *\n * @todo\n * A possible extension to this would be to stop a single property, when\n * we want to continue animating others. Then assign the prop to the timer\n * in the Fx.run method, and check for the prop here. This would be an\n * improvement in all cases where we stop the animation from .attr. Instead of\n * stopping everything, we can just stop the actual attributes we're setting.\n */\nfunction stop(el, prop) {\n    let i = Fx.timers.length;\n    // Remove timers related to this element (#4519)\n    while (i--) {\n        if (Fx.timers[i].elem === el && (!prop || prop === Fx.timers[i].prop)) {\n            Fx.timers[i].stopped = true; // #4667\n        }\n    }\n}\nconst animationExports = {\n    animate,\n    animObject,\n    getDeferredAnimation,\n    setAnimation,\n    stop\n};\n/* *\n *\n *  Default Export\n *\n * */\nexport default animationExports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}