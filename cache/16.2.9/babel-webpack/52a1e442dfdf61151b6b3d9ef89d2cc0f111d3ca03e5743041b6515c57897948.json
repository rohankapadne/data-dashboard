{"ast":null,"code":"/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n\nimport H from './Globals.js';\nconst {\n  charts,\n  doc,\n  win\n} = H;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Provide error messages for debugging, with links to online explanation. This\n * function can be overridden to provide custom error handling.\n *\n * @sample highcharts/chart/highcharts-error/\n *         Custom error handler\n *\n * @function Highcharts.error\n *\n * @param {number|string} code\n *        The error code. See\n *        [errors.xml](https://github.com/highcharts/highcharts/blob/master/errors/errors.xml)\n *        for available codes. If it is a string, the error message is printed\n *        directly in the console.\n *\n * @param {boolean} [stop=false]\n *        Whether to throw an error or just log a warning in the console.\n *\n * @param {Highcharts.Chart} [chart]\n *        Reference to the chart that causes the error. Used in 'debugger'\n *        module to display errors directly on the chart.\n *        Important note: This argument is undefined for errors that lack\n *        access to the Chart instance. In such case, the error will be\n *        displayed on the last created chart.\n *\n * @param {Highcharts.Dictionary<string>} [params]\n *        Additional parameters for the generated message.\n *\n * @return {void}\n */\nfunction error(code, stop, chart, params) {\n  const severity = stop ? 'Highcharts error' : 'Highcharts warning';\n  if (code === 32) {\n    code = `${severity}: Deprecated member`;\n  }\n  const isCode = isNumber(code);\n  let message = isCode ? `${severity} #${code}: www.highcharts.com/errors/${code}/` : code.toString();\n  const defaultHandler = function () {\n    if (stop) {\n      throw new Error(message);\n    }\n    // else ...\n    if (win.console && error.messages.indexOf(message) === -1 // prevent console flooting\n    ) {\n      console.warn(message); // eslint-disable-line no-console\n    }\n  };\n\n  if (typeof params !== 'undefined') {\n    let additionalMessages = '';\n    if (isCode) {\n      message += '?';\n    }\n    objectEach(params, function (value, key) {\n      additionalMessages += `\\n - ${key}: ${value}`;\n      if (isCode) {\n        message += encodeURI(key) + '=' + encodeURI(value);\n      }\n    });\n    message += additionalMessages;\n  }\n  fireEvent(H, 'displayError', {\n    chart,\n    code,\n    message,\n    params\n  }, defaultHandler);\n  error.messages.push(message);\n}\n(function (error) {\n  error.messages = [];\n})(error || (error = {}));\n/* eslint-disable valid-jsdoc */\n/**\n * Utility function to deep merge two or more objects and return a third object.\n * If the first argument is true, the contents of the second object is copied\n * into the first object. The merge function can also be used with a single\n * object argument to create a deep copy of an object.\n *\n * @function Highcharts.merge<T>\n *\n * @param {boolean} extend\n *        Whether to extend the left-side object (a) or return a whole new\n *        object.\n *\n * @param {T|undefined} a\n *        The first object to extend. When only this is given, the function\n *        returns a deep copy.\n *\n * @param {...Array<object|undefined>} [n]\n *        An object to merge into the previous one.\n *\n * @return {T}\n *         The merged object. If the first argument is true, the return is the\n *         same as the second argument.\n */ /**\n    * Utility function to deep merge two or more objects and return a third object.\n    * The merge function can also be used with a single object argument to create a\n    * deep copy of an object.\n    *\n    * @function Highcharts.merge<T>\n    *\n    * @param {T|undefined} a\n    *        The first object to extend. When only this is given, the function\n    *        returns a deep copy.\n    *\n    * @param {...Array<object|undefined>} [n]\n    *        An object to merge into the previous one.\n    *\n    * @return {T}\n    *         The merged object. If the first argument is true, the return is the\n    *         same as the second argument.\n    */\nfunction merge() {\n  /* eslint-enable valid-jsdoc */\n  let i,\n    args = arguments,\n    ret = {};\n  const doCopy = function (copy, original) {\n    // An object is replacing a primitive\n    if (typeof copy !== 'object') {\n      copy = {};\n    }\n    objectEach(original, function (value, key) {\n      // Prototype pollution (#14883)\n      if (key === '__proto__' || key === 'constructor') {\n        return;\n      }\n      // Copy the contents of objects, but not arrays or DOM nodes\n      if (isObject(value, true) && !isClass(value) && !isDOMElement(value)) {\n        copy[key] = doCopy(copy[key] || {}, value);\n        // Primitives and arrays are copied over directly\n      } else {\n        copy[key] = original[key];\n      }\n    });\n    return copy;\n  };\n  // If first argument is true, copy into the existing object. Used in\n  // setOptions.\n  if (args[0] === true) {\n    ret = args[1];\n    args = Array.prototype.slice.call(args, 2);\n  }\n  // For each argument, extend the return\n  const len = args.length;\n  for (i = 0; i < len; i++) {\n    ret = doCopy(ret, args[i]);\n  }\n  return ret;\n}\n/**\n * Constrain a value to within a lower and upper threshold.\n *\n * @private\n * @param {number} value The initial value\n * @param {number} min The lower threshold\n * @param {number} max The upper threshold\n * @return {number} Returns a number value within min and max.\n */\nfunction clamp(value, min, max) {\n  return value > min ? value < max ? value : max : min;\n}\n// eslint-disable-next-line valid-jsdoc\n/**\n * Return the deep difference between two objects. It can either return the new\n * properties, or optionally return the old values of new properties.\n * @private\n */\nfunction diffObjects(newer, older, keepOlder, collectionsWithUpdate) {\n  const ret = {};\n  /**\n   * Recurse over a set of options and its current values, and store the\n   * current values in the ret object.\n   */\n  function diff(newer, older, ret, depth) {\n    const keeper = keepOlder ? older : newer;\n    objectEach(newer, function (newerVal, key) {\n      if (!depth && collectionsWithUpdate && collectionsWithUpdate.indexOf(key) > -1 && older[key]) {\n        newerVal = splat(newerVal);\n        ret[key] = [];\n        // Iterate over collections like series, xAxis or yAxis and map\n        // the items by index.\n        for (let i = 0; i < Math.max(newerVal.length, older[key].length); i++) {\n          // Item exists in current data (#6347)\n          if (older[key][i]) {\n            // If the item is missing from the new data, we need to\n            // save the whole config structure. Like when\n            // responsively updating from a dual axis layout to a\n            // single axis and back (#13544).\n            if (newerVal[i] === void 0) {\n              ret[key][i] = older[key][i];\n              // Otherwise, proceed\n            } else {\n              ret[key][i] = {};\n              diff(newerVal[i], older[key][i], ret[key][i], depth + 1);\n            }\n          }\n        }\n      } else if (isObject(newerVal, true) && !newerVal.nodeType // #10044\n      ) {\n        ret[key] = isArray(newerVal) ? [] : {};\n        diff(newerVal, older[key] || {}, ret[key], depth + 1);\n        // Delete empty nested objects\n        if (Object.keys(ret[key]).length === 0 &&\n        // Except colorAxis which is a special case where the empty\n        // object means it is enabled. Which is unfortunate and we\n        // should try to find a better way.\n        !(key === 'colorAxis' && depth === 0)) {\n          delete ret[key];\n        }\n      } else if (newer[key] !== older[key] ||\n      // If the newer key is explicitly undefined, keep it (#10525)\n      key in newer && !(key in older)) {\n        ret[key] = keeper[key];\n      }\n    });\n  }\n  diff(newer, older, ret, 0);\n  return ret;\n}\n/**\n * Shortcut for parseInt\n *\n * @private\n * @function Highcharts.pInt\n *\n * @param {*} s\n *        any\n *\n * @param {number} [mag]\n *        Magnitude\n *\n * @return {number}\n *         number\n */\nfunction pInt(s, mag) {\n  return parseInt(s, mag || 10);\n}\n/**\n * Utility function to check for string type.\n *\n * @function Highcharts.isString\n *\n * @param {*} s\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a string.\n */\nfunction isString(s) {\n  return typeof s === 'string';\n}\n/**\n * Utility function to check if an item is an array.\n *\n * @function Highcharts.isArray\n *\n * @param {*} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is an array.\n */\nfunction isArray(obj) {\n  const str = Object.prototype.toString.call(obj);\n  return str === '[object Array]' || str === '[object Array Iterator]';\n}\n/**\n * Utility function to check if an item is of type object.\n *\n * @function Highcharts.isObject\n *\n * @param {*} obj\n *        The item to check.\n *\n * @param {boolean} [strict=false]\n *        Also checks that the object is not an array.\n *\n * @return {boolean}\n *         True if the argument is an object.\n */\nfunction isObject(obj, strict) {\n  return !!obj && typeof obj === 'object' && (!strict || !isArray(obj)); // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n/**\n * Utility function to check if an Object is a HTML Element.\n *\n * @function Highcharts.isDOMElement\n *\n * @param {*} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a HTML Element.\n */\nfunction isDOMElement(obj) {\n  return isObject(obj) && typeof obj.nodeType === 'number';\n}\n/**\n * Utility function to check if an Object is a class.\n *\n * @function Highcharts.isClass\n *\n * @param {object|undefined} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a class.\n */\nfunction isClass(obj) {\n  const c = obj && obj.constructor;\n  return !!(isObject(obj, true) && !isDOMElement(obj) && c && c.name && c.name !== 'Object');\n}\n/**\n * Utility function to check if an item is a number and it is finite (not NaN,\n * Infinity or -Infinity).\n *\n * @function Highcharts.isNumber\n *\n * @param {*} n\n *        The item to check.\n *\n * @return {boolean}\n *         True if the item is a finite number\n */\nfunction isNumber(n) {\n  return typeof n === 'number' && !isNaN(n) && n < Infinity && n > -Infinity;\n}\n/**\n * Remove the last occurence of an item from an array.\n *\n * @function Highcharts.erase\n *\n * @param {Array<*>} arr\n *        The array.\n *\n * @param {*} item\n *        The item to remove.\n *\n * @return {void}\n */\nfunction erase(arr, item) {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      arr.splice(i, 1);\n      break;\n    }\n  }\n}\n/**\n * Insert a series or an axis in a collection with other items, either the\n * chart series or yAxis series or axis collections, in the correct order\n * according to the index option and whether it is internal. Used internally\n * when adding series and axes.\n *\n * @private\n * @function Highcharts.Chart#insertItem\n * @param  {Highcharts.Series|Highcharts.Axis} item\n *         The item to insert\n * @param  {Array<Highcharts.Series>|Array<Highcharts.Axis>} collection\n *         A collection of items, like `chart.series` or `xAxis.series`.\n * @return {number} The index of the series in the collection.\n */\nfunction insertItem(item, collection) {\n  const indexOption = item.options.index,\n    length = collection.length;\n  let i;\n  for (\n  // Internal item (navigator) should always be pushed to the end\n  i = item.options.isInternal ? length : 0; i < length + 1; i++) {\n    if (\n    // No index option, reached the end of the collection,\n    // equivalent to pushing\n    !collection[i] ||\n    // Handle index option, the element to insert has lower index\n    isNumber(indexOption) && indexOption < pick(collection[i].options.index, collection[i]._i) ||\n    // Insert the new item before other internal items\n    // (navigator)\n    collection[i].options.isInternal) {\n      collection.splice(i, 0, item);\n      break;\n    }\n  }\n  return i;\n}\n/**\n * Adds an item to an array, if it is not present in the array.\n *\n * @function Highcharts.pushUnique\n *\n * @param {Array<unknown>} array\n * The array to add the item to.\n *\n * @param {unknown} item\n * The item to add.\n *\n * @return {boolean}\n * Returns true, if the item was not present and has been added.\n */\nfunction pushUnique(array, item) {\n  return array.indexOf(item) < 0 && !!array.push(item);\n}\n/**\n * Check if an object is null or undefined.\n *\n * @function Highcharts.defined\n *\n * @param {*} obj\n *        The object to check.\n *\n * @return {boolean}\n *         False if the object is null or undefined, otherwise true.\n */\nfunction defined(obj) {\n  return typeof obj !== 'undefined' && obj !== null;\n}\n/**\n * Set or get an attribute or an object of attributes.\n *\n * To use as a setter, pass a key and a value, or let the second argument be a\n * collection of keys and values. When using a collection, passing a value of\n * `null` or `undefined` will remove the attribute.\n *\n * To use as a getter, pass only a string as the second argument.\n *\n * @function Highcharts.attr\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} elem\n *        The DOM element to receive the attribute(s).\n *\n * @param {string|Highcharts.HTMLAttributes|Highcharts.SVGAttributes} [keyOrAttribs]\n *        The property or an object of key-value pairs.\n *\n * @param {number|string} [value]\n *        The value if a single property is set.\n *\n * @return {string|null|undefined}\n *         When used as a getter, return the value.\n */\nfunction attr(elem, keyOrAttribs, value) {\n  const isGetter = isString(keyOrAttribs) && !defined(value);\n  let ret;\n  const attrSingle = (value, key) => {\n    // Set the value\n    if (defined(value)) {\n      elem.setAttribute(key, value);\n      // Get the value\n    } else if (isGetter) {\n      ret = elem.getAttribute(key);\n      // IE7 and below cannot get class through getAttribute (#7850)\n      if (!ret && key === 'class') {\n        ret = elem.getAttribute(key + 'Name');\n      }\n      // Remove the value\n    } else {\n      elem.removeAttribute(key);\n    }\n  };\n  // If keyOrAttribs is a string\n  if (isString(keyOrAttribs)) {\n    attrSingle(value, keyOrAttribs);\n    // Else if keyOrAttribs is defined, it is a hash of key/value pairs\n  } else {\n    objectEach(keyOrAttribs, attrSingle);\n  }\n  return ret;\n}\n/**\n * Check if an element is an array, and if not, make it into an array.\n *\n * @function Highcharts.splat\n *\n * @param {*} obj\n *        The object to splat.\n *\n * @return {Array}\n *         The produced or original array.\n */\nfunction splat(obj) {\n  return isArray(obj) ? obj : [obj];\n}\n/**\n * Set a timeout if the delay is given, otherwise perform the function\n * synchronously.\n *\n * @function Highcharts.syncTimeout\n *\n * @param {Function} fn\n *        The function callback.\n *\n * @param {number} delay\n *        Delay in milliseconds.\n *\n * @param {*} [context]\n *        An optional context to send to the function callback.\n *\n * @return {number}\n *         An identifier for the timeout that can later be cleared with\n *         Highcharts.clearTimeout. Returns -1 if there is no timeout.\n */\nfunction syncTimeout(fn, delay, context) {\n  if (delay > 0) {\n    return setTimeout(fn, delay, context);\n  }\n  fn.call(0, context);\n  return -1;\n}\n/**\n * Internal clear timeout. The function checks that the `id` was not removed\n * (e.g. by `chart.destroy()`). For the details see\n * [issue #7901](https://github.com/highcharts/highcharts/issues/7901).\n *\n * @function Highcharts.clearTimeout\n *\n * @param {number|undefined} id\n * Id of a timeout.\n */\nfunction internalClearTimeout(id) {\n  if (defined(id)) {\n    clearTimeout(id);\n  }\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Utility function to extend an object with the members of another.\n *\n * @function Highcharts.extend<T>\n *\n * @param {T|undefined} a\n *        The object to be extended.\n *\n * @param {Partial<T>} b\n *        The object to add to the first one.\n *\n * @return {T}\n *         Object a, the original object.\n */\nfunction extend(a, b) {\n  /* eslint-enable valid-jsdoc */\n  let n;\n  if (!a) {\n    a = {};\n  }\n  for (n in b) {\n    // eslint-disable-line guard-for-in\n    a[n] = b[n];\n  }\n  return a;\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Return the first value that is not null or undefined.\n *\n * @function Highcharts.pick<T>\n *\n * @param {...Array<T|null|undefined>} items\n *        Variable number of arguments to inspect.\n *\n * @return {T}\n *         The value of the first argument that is not null or undefined.\n */\nfunction pick() {\n  const args = arguments;\n  const length = args.length;\n  for (let i = 0; i < length; i++) {\n    const arg = args[i];\n    if (typeof arg !== 'undefined' && arg !== null) {\n      return arg;\n    }\n  }\n}\n/**\n * Set CSS on a given element.\n *\n * @function Highcharts.css\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} el\n *        An HTML DOM element.\n *\n * @param {Highcharts.CSSObject} styles\n *        Style object with camel case property names.\n *\n * @return {void}\n */\nfunction css(el, styles) {\n  if (H.isMS && !H.svg) {\n    // #2686\n    if (styles && defined(styles.opacity)) {\n      styles.filter = `alpha(opacity=${styles.opacity * 100})`;\n    }\n  }\n  extend(el.style, styles);\n}\n/**\n * Utility function to create an HTML element with attributes and styles.\n *\n * @function Highcharts.createElement\n *\n * @param {string} tag\n *        The HTML tag.\n *\n * @param {Highcharts.HTMLAttributes} [attribs]\n *        Attributes as an object of key-value pairs.\n *\n * @param {Highcharts.CSSObject} [styles]\n *        Styles as an object of key-value pairs.\n *\n * @param {Highcharts.HTMLDOMElement} [parent]\n *        The parent HTML object.\n *\n * @param {boolean} [nopad=false]\n *        If true, remove all padding, border and margin.\n *\n * @return {Highcharts.HTMLDOMElement}\n *         The created DOM element.\n */\nfunction createElement(tag, attribs, styles, parent, nopad) {\n  const el = doc.createElement(tag);\n  if (attribs) {\n    extend(el, attribs);\n  }\n  if (nopad) {\n    css(el, {\n      padding: '0',\n      border: 'none',\n      margin: '0'\n    });\n  }\n  if (styles) {\n    css(el, styles);\n  }\n  if (parent) {\n    parent.appendChild(el);\n  }\n  return el;\n}\n// eslint-disable-next-line valid-jsdoc\n/**\n * Extend a prototyped class by new members.\n *\n * @deprecated\n * @function Highcharts.extendClass<T>\n *\n * @param {Highcharts.Class<T>} parent\n *        The parent prototype to inherit.\n *\n * @param {Highcharts.Dictionary<*>} members\n *        A collection of prototype members to add or override compared to the\n *        parent prototype.\n *\n * @return {Highcharts.Class<T>}\n *         A new prototype.\n */\nfunction extendClass(parent, members) {\n  const obj = function () {};\n  obj.prototype = new parent(); // eslint-disable-line new-cap\n  extend(obj.prototype, members);\n  return obj;\n}\n/**\n * Left-pad a string to a given length by adding a character repetitively.\n *\n * @function Highcharts.pad\n *\n * @param {number} number\n *        The input string or number.\n *\n * @param {number} [length]\n *        The desired string length.\n *\n * @param {string} [padder=0]\n *        The character to pad with.\n *\n * @return {string}\n *         The padded string.\n */\nfunction pad(number, length, padder) {\n  return new Array((length || 2) + 1 - String(number).replace('-', '').length).join(padder || '0') + number;\n}\n/**\n * Return a length based on either the integer value, or a percentage of a base.\n *\n * @function Highcharts.relativeLength\n *\n * @param {Highcharts.RelativeSize} value\n *        A percentage string or a number.\n *\n * @param {number} base\n *        The full length that represents 100%.\n *\n * @param {number} [offset=0]\n *        A pixel offset to apply for percentage values. Used internally in\n *        axis positioning.\n *\n * @return {number}\n *         The computed length.\n */\nfunction relativeLength(value, base, offset) {\n  return /%$/.test(value) ? base * parseFloat(value) / 100 + (offset || 0) : parseFloat(value);\n}\n/**\n * Wrap a method with extended functionality, preserving the original function.\n *\n * @function Highcharts.wrap\n *\n * @param {*} obj\n *        The context object that the method belongs to. In real cases, this is\n *        often a prototype.\n *\n * @param {string} method\n *        The name of the method to extend.\n *\n * @param {Highcharts.WrapProceedFunction} func\n *        A wrapper function callback. This function is called with the same\n *        arguments as the original function, except that the original function\n *        is unshifted and passed as the first argument.\n */\nfunction wrap(obj, method, func) {\n  const proceed = obj[method];\n  obj[method] = function () {\n    const outerArgs = arguments,\n      scope = this;\n    return func.apply(this, [function () {\n      return proceed.apply(scope, arguments.length ? arguments : outerArgs);\n    }].concat([].slice.call(arguments)));\n  };\n}\n/**\n * Get the magnitude of a number.\n *\n * @function Highcharts.getMagnitude\n *\n * @param {number} num\n *        The number.\n *\n * @return {number}\n *         The magnitude, where 1-9 are magnitude 1, 10-99 magnitude 2 etc.\n */\nfunction getMagnitude(num) {\n  return Math.pow(10, Math.floor(Math.log(num) / Math.LN10));\n}\n/**\n * Take an interval and normalize it to multiples of round numbers.\n *\n * @deprecated\n * @function Highcharts.normalizeTickInterval\n *\n * @param {number} interval\n *        The raw, un-rounded interval.\n *\n * @param {Array<*>} [multiples]\n *        Allowed multiples.\n *\n * @param {number} [magnitude]\n *        The magnitude of the number.\n *\n * @param {boolean} [allowDecimals]\n *        Whether to allow decimals.\n *\n * @param {boolean} [hasTickAmount]\n *        If it has tickAmount, avoid landing on tick intervals lower than\n *        original.\n *\n * @return {number}\n *         The normalized interval.\n *\n * @todo\n * Move this function to the Axis prototype. It is here only for historical\n * reasons.\n */\nfunction normalizeTickInterval(interval, multiples, magnitude, allowDecimals, hasTickAmount) {\n  let i,\n    retInterval = interval;\n  // round to a tenfold of 1, 2, 2.5 or 5\n  magnitude = pick(magnitude, getMagnitude(interval));\n  const normalized = interval / magnitude;\n  // multiples for a linear scale\n  if (!multiples) {\n    multiples = hasTickAmount ?\n    // Finer grained ticks when the tick amount is hard set, including\n    // when alignTicks is true on multiple axes (#4580).\n    [1, 1.2, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10] :\n    // Else, let ticks fall on rounder numbers\n    [1, 2, 2.5, 5, 10];\n    // the allowDecimals option\n    if (allowDecimals === false) {\n      if (magnitude === 1) {\n        multiples = multiples.filter(function (num) {\n          return num % 1 === 0;\n        });\n      } else if (magnitude <= 0.1) {\n        multiples = [1 / magnitude];\n      }\n    }\n  }\n  // normalize the interval to the nearest multiple\n  for (i = 0; i < multiples.length; i++) {\n    retInterval = multiples[i];\n    // only allow tick amounts smaller than natural\n    if (hasTickAmount && retInterval * magnitude >= interval || !hasTickAmount && normalized <= (multiples[i] + (multiples[i + 1] || multiples[i])) / 2) {\n      break;\n    }\n  }\n  // Multiply back to the correct magnitude. Correct floats to appropriate\n  // precision (#6085).\n  retInterval = correctFloat(retInterval * magnitude, -Math.round(Math.log(0.001) / Math.LN10));\n  return retInterval;\n}\n/**\n * Sort an object array and keep the order of equal items. The ECMAScript\n * standard does not specify the behaviour when items are equal.\n *\n * @function Highcharts.stableSort\n *\n * @param {Array<*>} arr\n *        The array to sort.\n *\n * @param {Function} sortFunction\n *        The function to sort it with, like with regular Array.prototype.sort.\n */\nfunction stableSort(arr, sortFunction) {\n  // @todo It seems like Chrome since v70 sorts in a stable way internally,\n  // plus all other browsers do it, so over time we may be able to remove this\n  // function\n  const length = arr.length;\n  let sortValue, i;\n  // Add index to each item\n  for (i = 0; i < length; i++) {\n    arr[i].safeI = i; // stable sort index\n  }\n\n  arr.sort(function (a, b) {\n    sortValue = sortFunction(a, b);\n    return sortValue === 0 ? a.safeI - b.safeI : sortValue;\n  });\n  // Remove index from items\n  for (i = 0; i < length; i++) {\n    delete arr[i].safeI; // stable sort index\n  }\n}\n/**\n * Non-recursive method to find the lowest member of an array. `Math.min` raises\n * a maximum call stack size exceeded error in Chrome when trying to apply more\n * than 150.000 points. This method is slightly slower, but safe.\n *\n * @function Highcharts.arrayMin\n *\n * @param {Array<*>} data\n *        An array of numbers.\n *\n * @return {number}\n *         The lowest number.\n */\nfunction arrayMin(data) {\n  let i = data.length,\n    min = data[0];\n  while (i--) {\n    if (data[i] < min) {\n      min = data[i];\n    }\n  }\n  return min;\n}\n/**\n * Non-recursive method to find the lowest member of an array. `Math.max` raises\n * a maximum call stack size exceeded error in Chrome when trying to apply more\n * than 150.000 points. This method is slightly slower, but safe.\n *\n * @function Highcharts.arrayMax\n *\n * @param {Array<*>} data\n *        An array of numbers.\n *\n * @return {number}\n *         The highest number.\n */\nfunction arrayMax(data) {\n  let i = data.length,\n    max = data[0];\n  while (i--) {\n    if (data[i] > max) {\n      max = data[i];\n    }\n  }\n  return max;\n}\n/**\n * Utility method that destroys any SVGElement instances that are properties on\n * the given object. It loops all properties and invokes destroy if there is a\n * destroy method. The property is then delete.\n *\n * @function Highcharts.destroyObjectProperties\n *\n * @param {*} obj\n *        The object to destroy properties on.\n *\n * @param {*} [except]\n *        Exception, do not destroy this property, only delete it.\n */\nfunction destroyObjectProperties(obj, except) {\n  objectEach(obj, function (val, n) {\n    // If the object is non-null and destroy is defined\n    if (val && val !== except && val.destroy) {\n      // Invoke the destroy\n      val.destroy();\n    }\n    // Delete the property from the object.\n    delete obj[n];\n  });\n}\n/**\n * Discard a HTML element\n *\n * @function Highcharts.discardElement\n *\n * @param {Highcharts.HTMLDOMElement} element\n *        The HTML node to discard.\n */\nfunction discardElement(element) {\n  if (element && element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Fix JS round off float errors.\n *\n * @function Highcharts.correctFloat\n *\n * @param {number} num\n *        A float number to fix.\n *\n * @param {number} [prec=14]\n *        The precision.\n *\n * @return {number}\n *         The corrected float number.\n */\nfunction correctFloat(num, prec) {\n  // When the number is higher than 1e14 use the number (#16275)\n  return num > 1e14 ? num : parseFloat(num.toPrecision(prec || 14));\n}\n/**\n * The time unit lookup\n *\n * @ignore\n */\nconst timeUnits = {\n  millisecond: 1,\n  second: 1000,\n  minute: 60000,\n  hour: 3600000,\n  day: 24 * 3600000,\n  week: 7 * 24 * 3600000,\n  month: 28 * 24 * 3600000,\n  year: 364 * 24 * 3600000\n};\n/**\n * Easing definition\n *\n * @private\n * @function Math.easeInOutSine\n *\n * @param {number} pos\n *        Current position, ranging from 0 to 1.\n *\n * @return {number}\n *         Ease result\n */\nMath.easeInOutSine = function (pos) {\n  return -0.5 * (Math.cos(Math.PI * pos) - 1);\n};\n/**\n * Find the closest distance between two values of a two-dimensional array\n * @private\n * @function Highcharts.getClosestDistance\n *\n * @param {Array<Array<number>>} arrays\n *          An array of arrays of numbers\n *\n * @return {number | undefined}\n *          The closest distance between values\n */\nfunction getClosestDistance(arrays, onError) {\n  const allowNegative = !onError;\n  let closest, loopLength, distance, i;\n  arrays.forEach(xData => {\n    if (xData.length > 1) {\n      loopLength = xData.length - 1;\n      for (i = loopLength; i > 0; i--) {\n        distance = xData[i] - xData[i - 1];\n        if (distance < 0 && !allowNegative) {\n          onError?.();\n          // Only one call\n          onError = void 0;\n        } else if (distance && (typeof closest === 'undefined' || distance < closest)) {\n          closest = distance;\n        }\n      }\n    }\n  });\n  return closest;\n}\n/**\n * Returns the value of a property path on a given object.\n *\n * @private\n * @function getNestedProperty\n *\n * @param {string} path\n * Path to the property, for example `custom.myValue`.\n *\n * @param {unknown} obj\n * Instance containing the property on the specific path.\n *\n * @return {unknown}\n * The unknown property value.\n */\nfunction getNestedProperty(path, parent) {\n  const pathElements = path.split('.');\n  while (pathElements.length && defined(parent)) {\n    const pathElement = pathElements.shift();\n    // Filter on the key\n    if (typeof pathElement === 'undefined' || pathElement === '__proto__') {\n      return; // undefined\n    }\n\n    if (pathElement === 'this') {\n      let thisProp;\n      if (isObject(parent)) {\n        thisProp = parent['@this'];\n      }\n      return thisProp ?? parent;\n    }\n    const child = parent[pathElement];\n    // Filter on the child\n    if (!defined(child) || typeof child === 'function' || typeof child.nodeType === 'number' || child === win) {\n      return; // undefined\n    }\n    // Else, proceed\n    parent = child;\n  }\n  return parent;\n}\n/**\n * Get the computed CSS value for given element and property, only for numerical\n * properties. For width and height, the dimension of the inner box (excluding\n * padding) is returned. Used for fitting the chart within the container.\n *\n * @function Highcharts.getStyle\n *\n * @param {Highcharts.HTMLDOMElement} el\n * An HTML element.\n *\n * @param {string} prop\n * The property name.\n *\n * @param {boolean} [toInt=true]\n * Parse to integer.\n *\n * @return {number|string|undefined}\n * The style value.\n */\nfunction getStyle(el, prop, toInt) {\n  let style;\n  // For width and height, return the actual inner pixel size (#4913)\n  if (prop === 'width') {\n    let offsetWidth = Math.min(el.offsetWidth, el.scrollWidth);\n    // In flex boxes, we need to use getBoundingClientRect and floor it,\n    // because scrollWidth doesn't support subpixel precision (#6427) ...\n    const boundingClientRectWidth = el.getBoundingClientRect && el.getBoundingClientRect().width;\n    // ...unless if the containing div or its parents are transform-scaled\n    // down, in which case the boundingClientRect can't be used as it is\n    // also scaled down (#9871, #10498).\n    if (boundingClientRectWidth < offsetWidth && boundingClientRectWidth >= offsetWidth - 1) {\n      offsetWidth = Math.floor(boundingClientRectWidth);\n    }\n    return Math.max(0,\n    // #8377\n    offsetWidth - (getStyle(el, 'padding-left', true) || 0) - (getStyle(el, 'padding-right', true) || 0));\n  }\n  if (prop === 'height') {\n    return Math.max(0,\n    // #8377\n    Math.min(el.offsetHeight, el.scrollHeight) - (getStyle(el, 'padding-top', true) || 0) - (getStyle(el, 'padding-bottom', true) || 0));\n  }\n  // Otherwise, get the computed style\n  const css = win.getComputedStyle(el, void 0); // eslint-disable-line no-undefined\n  if (css) {\n    style = css.getPropertyValue(prop);\n    if (pick(toInt, prop !== 'opacity')) {\n      style = pInt(style);\n    }\n  }\n  return style;\n}\n/**\n * Search for an item in an array.\n *\n * @function Highcharts.inArray\n *\n * @deprecated\n *\n * @param {*} item\n *        The item to search for.\n *\n * @param {Array<*>} arr\n *        The array or node collection to search in.\n *\n * @param {number} [fromIndex=0]\n *        The index to start searching from.\n *\n * @return {number}\n *         The index within the array, or -1 if not found.\n */\nfunction inArray(item, arr, fromIndex) {\n  error(32, false, void 0, {\n    'Highcharts.inArray': 'use Array.indexOf'\n  });\n  return arr.indexOf(item, fromIndex);\n}\n/**\n * Return the value of the first element in the array that satisfies the\n * provided testing function.\n *\n * @function Highcharts.find<T>\n *\n * @param {Array<T>} arr\n *        The array to test.\n *\n * @param {Function} callback\n *        The callback function. The function receives the item as the first\n *        argument. Return `true` if this item satisfies the condition.\n *\n * @return {T|undefined}\n *         The value of the element.\n */\nconst find = Array.prototype.find ? function (arr, callback) {\n  return arr.find(callback);\n} :\n// Legacy implementation. PhantomJS, IE <= 11 etc. #7223.\nfunction (arr, callback) {\n  let i;\n  const length = arr.length;\n  for (i = 0; i < length; i++) {\n    if (callback(arr[i], i)) {\n      // eslint-disable-line node/callback-return\n      return arr[i];\n    }\n  }\n};\n/**\n * Returns an array of a given object's own properties.\n *\n * @function Highcharts.keys\n * @deprecated\n *\n * @param {*} obj\n *        The object of which the properties are to be returned.\n *\n * @return {Array<string>}\n *         An array of strings that represents all the properties.\n */\nfunction keys(obj) {\n  error(32, false, void 0, {\n    'Highcharts.keys': 'use Object.keys'\n  });\n  return Object.keys(obj);\n}\n/**\n * Get the element's offset position, corrected for `overflow: auto`.\n *\n * @function Highcharts.offset\n *\n * @param {global.Element} el\n *        The DOM element.\n *\n * @return {Highcharts.OffsetObject}\n *         An object containing `left` and `top` properties for the position in\n *         the page.\n */\nfunction offset(el) {\n  const docElem = doc.documentElement,\n    box = el.parentElement || el.parentNode ? el.getBoundingClientRect() : {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n  return {\n    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),\n    width: box.width,\n    height: box.height\n  };\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Iterate over object key pairs in an object.\n *\n * @function Highcharts.objectEach<T>\n *\n * @param {*} obj\n *        The object to iterate over.\n *\n * @param {Highcharts.ObjectEachCallbackFunction<T>} fn\n *        The iterator callback. It passes three arguments:\n *        * value - The property value.\n *        * key - The property key.\n *        * obj - The object that objectEach is being applied to.\n *\n * @param {T} [ctx]\n *        The context.\n */\nfunction objectEach(obj, fn, ctx) {\n  /* eslint-enable valid-jsdoc */\n  for (const key in obj) {\n    if (Object.hasOwnProperty.call(obj, key)) {\n      fn.call(ctx || obj[key], obj[key], key, obj);\n    }\n  }\n}\n/**\n * Iterate over an array.\n *\n * @deprecated\n * @function Highcharts.each\n *\n * @param {Array<*>} arr\n *        The array to iterate over.\n *\n * @param {Function} fn\n *        The iterator callback. It passes three arguments:\n *        - `item`: The array item.\n *        - `index`: The item's index in the array.\n *        - `arr`: The array that each is being applied to.\n *\n * @param {*} [ctx]\n *        The context.\n *\n * @return {void}\n */\n/**\n * Filter an array by a callback.\n *\n * @deprecated\n * @function Highcharts.grep\n *\n * @param {Array<*>} arr\n *        The array to filter.\n *\n * @param {Function} callback\n *        The callback function. The function receives the item as the first\n *        argument. Return `true` if the item is to be preserved.\n *\n * @return {Array<*>}\n *         A new, filtered array.\n */\n/**\n * Map an array by a callback.\n *\n * @deprecated\n * @function Highcharts.map\n *\n * @param {Array<*>} arr\n *        The array to map.\n *\n * @param {Function} fn\n *        The callback function. Return the new value for the new array.\n *\n * @return {Array<*>}\n *         A new array item with modified items.\n */\n/**\n * Reduce an array to a single value.\n *\n * @deprecated\n * @function Highcharts.reduce\n *\n * @param {Array<*>} arr\n *        The array to reduce.\n *\n * @param {Function} fn\n *        The callback function. Return the reduced value. Receives 4\n *        arguments: Accumulated/reduced value, current value, current array\n *        index, and the array.\n *\n * @param {*} initialValue\n *        The initial value of the accumulator.\n *\n * @return {*}\n *         The reduced value.\n */\n/**\n * Test whether at least one element in the array passes the test implemented by\n * the provided function.\n *\n * @deprecated\n * @function Highcharts.some\n *\n * @param {Array<*>} arr\n *        The array to test\n *\n * @param {Function} fn\n *        The function to run on each item. Return truty to pass the test.\n *        Receives arguments `currentValue`, `index` and `array`.\n *\n * @param {*} ctx\n *        The context.\n *\n * @return {boolean}\n */\nobjectEach({\n  map: 'map',\n  each: 'forEach',\n  grep: 'filter',\n  reduce: 'reduce',\n  some: 'some'\n}, function (val, key) {\n  H[key] = function (arr) {\n    error(32, false, void 0, {\n      [`Highcharts.${key}`]: `use Array.${val}`\n    });\n    return Array.prototype[val].apply(arr, [].slice.call(arguments, 1));\n  };\n});\n/* eslint-disable valid-jsdoc */\n/**\n * Add an event listener.\n *\n * @function Highcharts.addEvent<T>\n *\n * @param {Highcharts.Class<T>|T} el\n *        The element or object to add a listener to. It can be a\n *        {@link HTMLDOMElement}, an {@link SVGElement} or any other object.\n *\n * @param {string} type\n *        The event type.\n *\n * @param {Highcharts.EventCallbackFunction<T>|Function} fn\n *        The function callback to execute when the event is fired.\n *\n * @param {Highcharts.EventOptionsObject} [options]\n *        Options for adding the event.\n *\n * @return {Function}\n *         A callback function to remove the added event.\n */\nfunction addEvent(el, type, fn, options = {}) {\n  /* eslint-enable valid-jsdoc */\n  // Add hcEvents to either the prototype (in case we're running addEvent on a\n  // class) or the instance. If hasOwnProperty('hcEvents') is false, it is\n  // inherited down the prototype chain, in which case we need to set the\n  // property on this instance (which may itself be a prototype).\n  const owner = typeof el === 'function' && el.prototype || el;\n  if (!Object.hasOwnProperty.call(owner, 'hcEvents')) {\n    owner.hcEvents = {};\n  }\n  const events = owner.hcEvents;\n  // Allow click events added to points, otherwise they will be prevented by\n  // the TouchPointer.pinch function after a pinch zoom operation (#7091).\n  if (H.Point &&\n  // without H a dependency loop occurs\n  el instanceof H.Point && el.series && el.series.chart) {\n    el.series.chart.runTrackerClick = true;\n  }\n  // Handle DOM events\n  // If the browser supports passive events, add it to improve performance\n  // on touch events (#11353).\n  const addEventListener = el.addEventListener;\n  if (addEventListener) {\n    addEventListener.call(el, type, fn, H.supportsPassiveEvents ? {\n      passive: options.passive === void 0 ? type.indexOf('touch') !== -1 : options.passive,\n      capture: false\n    } : false);\n  }\n  if (!events[type]) {\n    events[type] = [];\n  }\n  const eventObject = {\n    fn,\n    order: typeof options.order === 'number' ? options.order : Infinity\n  };\n  events[type].push(eventObject);\n  // Order the calls\n  events[type].sort((a, b) => a.order - b.order);\n  // Return a function that can be called to remove this event.\n  return function () {\n    removeEvent(el, type, fn);\n  };\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Remove an event that was added with {@link Highcharts#addEvent}.\n *\n * @function Highcharts.removeEvent<T>\n *\n * @param {Highcharts.Class<T>|T} el\n *        The element to remove events on.\n *\n * @param {string} [type]\n *        The type of events to remove. If undefined, all events are removed\n *        from the element.\n *\n * @param {Highcharts.EventCallbackFunction<T>} [fn]\n *        The specific callback to remove. If undefined, all events that match\n *        the element and optionally the type are removed.\n *\n * @return {void}\n */\nfunction removeEvent(el, type, fn) {\n  /* eslint-enable valid-jsdoc */\n  /**\n   * @private\n   */\n  function removeOneEvent(type, fn) {\n    const removeEventListener = el.removeEventListener;\n    if (removeEventListener) {\n      removeEventListener.call(el, type, fn, false);\n    }\n  }\n  /**\n   * @private\n   */\n  function removeAllEvents(eventCollection) {\n    let types, len;\n    if (!el.nodeName) {\n      return; // break on non-DOM events\n    }\n\n    if (type) {\n      types = {};\n      types[type] = true;\n    } else {\n      types = eventCollection;\n    }\n    objectEach(types, function (_val, n) {\n      if (eventCollection[n]) {\n        len = eventCollection[n].length;\n        while (len--) {\n          removeOneEvent(n, eventCollection[n][len].fn);\n        }\n      }\n    });\n  }\n  const owner = typeof el === 'function' && el.prototype || el;\n  if (Object.hasOwnProperty.call(owner, 'hcEvents')) {\n    const events = owner.hcEvents;\n    if (type) {\n      const typeEvents = events[type] || [];\n      if (fn) {\n        events[type] = typeEvents.filter(function (obj) {\n          return fn !== obj.fn;\n        });\n        removeOneEvent(type, fn);\n      } else {\n        removeAllEvents(events);\n        events[type] = [];\n      }\n    } else {\n      removeAllEvents(events);\n      delete owner.hcEvents;\n    }\n  }\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Fire an event that was registered with {@link Highcharts#addEvent}.\n *\n * @function Highcharts.fireEvent<T>\n *\n * @param {T} el\n *        The object to fire the event on. It can be a {@link HTMLDOMElement},\n *        an {@link SVGElement} or any other object.\n *\n * @param {string} type\n *        The type of event.\n *\n * @param {Highcharts.Dictionary<*>|Event} [eventArguments]\n *        Custom event arguments that are passed on as an argument to the event\n *        handler.\n *\n * @param {Highcharts.EventCallbackFunction<T>|Function} [defaultFunction]\n *        The default function to execute if the other listeners haven't\n *        returned false.\n *\n * @return {void}\n */\nfunction fireEvent(el, type, eventArguments, defaultFunction) {\n  /* eslint-enable valid-jsdoc */\n  let e, i;\n  eventArguments = eventArguments || {};\n  if (doc.createEvent && (el.dispatchEvent || el.fireEvent &&\n  // Enable firing events on Highcharts instance.\n  el !== H)) {\n    e = doc.createEvent('Events');\n    e.initEvent(type, true, true);\n    eventArguments = extend(e, eventArguments);\n    if (el.dispatchEvent) {\n      el.dispatchEvent(eventArguments);\n    } else {\n      el.fireEvent(type, eventArguments);\n    }\n  } else if (el.hcEvents) {\n    if (!eventArguments.target) {\n      // We're running a custom event\n      extend(eventArguments, {\n        // Attach a simple preventDefault function to skip\n        // default handler if called. The built-in\n        // defaultPrevented property is not overwritable (#5112)\n        preventDefault: function () {\n          eventArguments.defaultPrevented = true;\n        },\n        // Setting target to native events fails with clicking\n        // the zoom-out button in Chrome.\n        target: el,\n        // If the type is not set, we're running a custom event\n        // (#2297). If it is set, we're running a browser event.\n        type: type\n      });\n    }\n    const events = [];\n    let object = el;\n    let multilevel = false;\n    // Recurse up the inheritance chain and collect hcEvents set as own\n    // objects on the prototypes.\n    while (object.hcEvents) {\n      if (Object.hasOwnProperty.call(object, 'hcEvents') && object.hcEvents[type]) {\n        if (events.length) {\n          multilevel = true;\n        }\n        events.unshift.apply(events, object.hcEvents[type]);\n      }\n      object = Object.getPrototypeOf(object);\n    }\n    // For performance reasons, only sort the event handlers in case we are\n    // dealing with multiple levels in the prototype chain. Otherwise, the\n    // events are already sorted in the addEvent function.\n    if (multilevel) {\n      // Order the calls\n      events.sort((a, b) => a.order - b.order);\n    }\n    // Call the collected event handlers\n    events.forEach(obj => {\n      // If the event handler returns false, prevent the default handler\n      // from executing\n      if (obj.fn.call(el, eventArguments) === false) {\n        eventArguments.preventDefault();\n      }\n    });\n  }\n  // Run the default if not prevented\n  if (defaultFunction && !eventArguments.defaultPrevented) {\n    defaultFunction.call(el, eventArguments);\n  }\n}\nlet serialMode;\n/**\n * Get a unique key for using in internal element id's and pointers. The key is\n * composed of a random hash specific to this Highcharts instance, and a\n * counter.\n *\n * @example\n * let id = uniqueKey(); // => 'highcharts-x45f6hp-0'\n *\n * @function Highcharts.uniqueKey\n *\n * @return {string}\n * A unique key.\n */\nconst uniqueKey = function () {\n  const hash = Math.random().toString(36).substring(2, 9) + '-';\n  let id = 0;\n  return function () {\n    return 'highcharts-' + (serialMode ? '' : hash) + id++;\n  };\n}();\n/**\n * Activates a serial mode for element IDs provided by\n * {@link Highcharts.uniqueKey}. This mode can be used in automated tests, where\n * a simple comparison of two rendered SVG graphics is needed.\n *\n * **Note:** This is only for testing purposes and will break functionality in\n * webpages with multiple charts.\n *\n * @example\n * if (\n *   process &&\n *   process.env.NODE_ENV === 'development'\n * ) {\n *   Highcharts.useSerialIds(true);\n * }\n *\n * @function Highcharts.useSerialIds\n *\n * @param {boolean} [mode]\n * Changes the state of serial mode.\n *\n * @return {boolean|undefined}\n * State of the serial mode.\n */\nfunction useSerialIds(mode) {\n  return serialMode = pick(mode, serialMode);\n}\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n// Register Highcharts as a plugin in jQuery\nif (win.jQuery) {\n  /**\n   * Highcharts-extended JQuery.\n   *\n   * @external JQuery\n   */\n  /**\n   * Helper function to return the chart of the current JQuery selector\n   * element.\n   *\n   * @function external:JQuery#highcharts\n   *\n   * @return {Highcharts.Chart}\n   *         The chart that is linked to the JQuery selector element.\n   */ /**\n      * Factory function to create a chart in the current JQuery selector\n      * element.\n      *\n      * @function external:JQuery#highcharts\n      *\n      * @param {'Chart'|'Map'|'StockChart'|string} [className]\n      *        Name of the factory class in the Highcharts namespace.\n      *\n      * @param {Highcharts.Options} [options]\n      *        The chart options structure.\n      *\n      * @param {Highcharts.ChartCallbackFunction} [callback]\n      *        Function to run when the chart has loaded and and all external\n      *        images are loaded. Defining a\n      *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n      *        handler is equivalent.\n      *\n      * @return {JQuery}\n      *         The current JQuery selector.\n      */\n  win.jQuery.fn.highcharts = function () {\n    const args = [].slice.call(arguments);\n    if (this[0]) {\n      // this[0] is the renderTo div\n      // Create the chart\n      if (args[0]) {\n        new H[\n        // eslint-disable-line computed-property-spacing, no-new\n        // Constructor defaults to Chart\n        isString(args[0]) ? args.shift() : 'Chart'](this[0], args[0], args[1]);\n        return this;\n      }\n      // When called without parameters or with the return argument,\n      // return an existing chart\n      return charts[attr(this[0], 'data-highcharts-chart')];\n    }\n  };\n}\n/* *\n *\n *  Default Export\n *\n * */\n// TODO use named exports when supported.\nconst Utilities = {\n  addEvent,\n  arrayMax,\n  arrayMin,\n  attr,\n  clamp,\n  clearTimeout: internalClearTimeout,\n  correctFloat,\n  createElement,\n  css,\n  defined,\n  destroyObjectProperties,\n  diffObjects,\n  discardElement,\n  erase,\n  error,\n  extend,\n  extendClass,\n  find,\n  fireEvent,\n  getClosestDistance,\n  getMagnitude,\n  getNestedProperty,\n  getStyle,\n  inArray,\n  insertItem,\n  isArray,\n  isClass,\n  isDOMElement,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  keys,\n  merge,\n  normalizeTickInterval,\n  objectEach,\n  offset,\n  pad,\n  pick,\n  pInt,\n  pushUnique,\n  relativeLength,\n  removeEvent,\n  splat,\n  stableSort,\n  syncTimeout,\n  timeUnits,\n  uniqueKey,\n  useSerialIds,\n  wrap\n};\nexport default Utilities;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * An animation configuration. Animation configurations can also be defined as\n * booleans, where `false` turns off animation and `true` defaults to a duration\n * of 500ms and defer of 0ms.\n *\n * @interface Highcharts.AnimationOptionsObject\n */ /**\n    * A callback function to exectute when the animation finishes.\n    * @name Highcharts.AnimationOptionsObject#complete\n    * @type {Function|undefined}\n    */ /**\n       * The animation defer in milliseconds.\n       * @name Highcharts.AnimationOptionsObject#defer\n       * @type {number|undefined}\n       */ /**\n          * The animation duration in milliseconds.\n          * @name Highcharts.AnimationOptionsObject#duration\n          * @type {number|undefined}\n          */ /**\n             * The name of an easing function as defined on the `Math` object.\n             * @name Highcharts.AnimationOptionsObject#easing\n             * @type {string|Function|undefined}\n             */ /**\n                * A callback function to execute on each step of each attribute or CSS property\n                * that's being animated. The first argument contains information about the\n                * animation and progress.\n                * @name Highcharts.AnimationOptionsObject#step\n                * @type {Function|undefined}\n                */\n/**\n * Creates a frame for the animated SVG element.\n *\n * @callback Highcharts.AnimationStepCallbackFunction\n *\n * @param {Highcharts.SVGElement} this\n *        The SVG element to animate.\n *\n * @return {void}\n */\n/**\n * Interface description for a class.\n *\n * @interface Highcharts.Class<T>\n * @extends Function\n */ /**\n    * Class costructor.\n    * @function Highcharts.Class<T>#new\n    * @param {...Array<*>} args\n    *        Constructor arguments.\n    * @return {T}\n    *         Class instance.\n    */\n/**\n * A style object with camel case property names to define visual appearance of\n * a SVG element or HTML element. The properties can be whatever styles are\n * supported on the given SVG or HTML element.\n *\n * @example\n * {\n *    fontFamily: 'monospace',\n *    fontSize: '1.2em'\n * }\n *\n * @interface Highcharts.CSSObject\n */ /**\n    * @name Highcharts.CSSObject#[key:string]\n    * @type {boolean|number|string|undefined}\n    */ /**\n       * Background style for the element.\n       * @name Highcharts.CSSObject#background\n       * @type {string|undefined}\n       */ /**\n          * Background color of the element.\n          * @name Highcharts.CSSObject#backgroundColor\n          * @type {Highcharts.ColorString|undefined}\n          */ /**\n             * Border style for the element.\n             * @name Highcharts.CSSObject#border\n             * @type {string|undefined}\n             */ /**\n                * Radius of the element border.\n                * @name Highcharts.CSSObject#borderRadius\n                * @type {number|undefined}\n                */ /**\n                   * Color used in the element. The 'contrast' option is a Highcharts custom\n                   * property that results in black or white, depending on the background of the\n                   * element.\n                   * @name Highcharts.CSSObject#color\n                   * @type {'contrast'|Highcharts.ColorString|undefined}\n                   */ /**\n                      * Style of the mouse cursor when resting over the element.\n                      * @name Highcharts.CSSObject#cursor\n                      * @type {Highcharts.CursorValue|undefined}\n                      */ /**\n                         * Font family of the element text. Multiple values have to be in decreasing\n                         * preference order and separated by comma.\n                         * @name Highcharts.CSSObject#fontFamily\n                         * @type {string|undefined}\n                         */ /**\n                            * Font size of the element text.\n                            * @name Highcharts.CSSObject#fontSize\n                            * @type {string|undefined}\n                            */ /**\n                               * Font weight of the element text.\n                               * @name Highcharts.CSSObject#fontWeight\n                               * @type {string|undefined}\n                               */ /**\n                                  * Height of the element.\n                                  * @name Highcharts.CSSObject#height\n                                  * @type {number|undefined}\n                                  */ /**\n                                     * Width of the element border.\n                                     * @name Highcharts.CSSObject#lineWidth\n                                     * @type {number|undefined}\n                                     */ /**\n                                        * Opacity of the element.\n                                        * @name Highcharts.CSSObject#opacity\n                                        * @type {number|undefined}\n                                        */ /**\n                                           * Space around the element content.\n                                           * @name Highcharts.CSSObject#padding\n                                           * @type {string|undefined}\n                                           */ /**\n                                              * Behaviour of the element when the mouse cursor rests over it.\n                                              * @name Highcharts.CSSObject#pointerEvents\n                                              * @type {string|undefined}\n                                              */ /**\n                                                 * Positioning of the element.\n                                                 * @name Highcharts.CSSObject#position\n                                                 * @type {string|undefined}\n                                                 */ /**\n                                                    * Alignment of the element text.\n                                                    * @name Highcharts.CSSObject#textAlign\n                                                    * @type {string|undefined}\n                                                    */ /**\n                                                       * Additional decoration of the element text.\n                                                       * @name Highcharts.CSSObject#textDecoration\n                                                       * @type {string|undefined}\n                                                       */ /**\n                                                          * Outline style of the element text.\n                                                          * @name Highcharts.CSSObject#textOutline\n                                                          * @type {string|undefined}\n                                                          */ /**\n                                                             * Line break style of the element text. Highcharts SVG elements support\n                                                             * `ellipsis` when a `width` is set.\n                                                             * @name Highcharts.CSSObject#textOverflow\n                                                             * @type {string|undefined}\n                                                             */ /**\n                                                                * Top spacing of the element relative to the parent element.\n                                                                * @name Highcharts.CSSObject#top\n                                                                * @type {string|undefined}\n                                                                */ /**\n                                                                   * Animated transition of selected element properties.\n                                                                   * @name Highcharts.CSSObject#transition\n                                                                   * @type {string|undefined}\n                                                                   */ /**\n                                                                      * Line break style of the element text.\n                                                                      * @name Highcharts.CSSObject#whiteSpace\n                                                                      * @type {string|undefined}\n                                                                      */ /**\n                                                                         * Width of the element.\n                                                                         * @name Highcharts.CSSObject#width\n                                                                         * @type {number|undefined}\n                                                                         */\n/**\n * All possible cursor styles.\n *\n * @typedef {'alias'|'all-scroll'|'auto'|'cell'|'col-resize'|'context-menu'|'copy'|'crosshair'|'default'|'e-resize'|'ew-resize'|'grab'|'grabbing'|'help'|'move'|'n-resize'|'ne-resize'|'nesw-resize'|'no-drop'|'none'|'not-allowed'|'ns-resize'|'nw-resize'|'nwse-resize'|'pointer'|'progress'|'row-resize'|'s-resize'|'se-resize'|'sw-resize'|'text'|'vertical-text'|'w-resize'|'wait'|'zoom-in'|'zoom-out'} Highcharts.CursorValue\n */\n/**\n * All possible dash styles.\n *\n * @typedef {'Dash'|'DashDot'|'Dot'|'LongDash'|'LongDashDot'|'LongDashDotDot'|'ShortDash'|'ShortDashDot'|'ShortDashDotDot'|'ShortDot'|'Solid'} Highcharts.DashStyleValue\n */\n/**\n * Generic dictionary in TypeScript notation.\n * Use the native `AnyRecord` instead.\n *\n * @deprecated\n * @interface Highcharts.Dictionary<T>\n */ /**\n    * @name Highcharts.Dictionary<T>#[key:string]\n    * @type {T}\n    */\n/**\n * The function callback to execute when the event is fired. The `this` context\n * contains the instance, that fired the event.\n *\n * @callback Highcharts.EventCallbackFunction<T>\n *\n * @param {T} this\n *\n * @param {Highcharts.Dictionary<*>|Event} [eventArguments]\n *        Event arguments.\n *\n * @return {boolean|void}\n */\n/**\n * The event options for adding function callback.\n *\n * @interface Highcharts.EventOptionsObject\n */ /**\n    * The order the event handler should be called. This opens for having one\n    * handler be called before another, independent of in which order they were\n    * added.\n    * @name Highcharts.EventOptionsObject#order\n    * @type {number}\n    */ /**\n       * Whether an event should be passive or not.\n       * When set to `true`, the function specified by listener will never call\n       * `preventDefault()`.\n       * @name Highcharts.EventOptionsObject#passive\n       * @type boolean\n       */\n/**\n * Formats data as a string. Usually the data is accessible throught the `this`\n * keyword.\n *\n * @callback Highcharts.FormatterCallbackFunction<T>\n *\n * @param {T} this\n *        Context to format\n *\n * @return {string}\n *         Formatted text\n */\n/**\n * An object of key-value pairs for HTML attributes.\n *\n * @typedef {Highcharts.Dictionary<boolean|number|string|Function>} Highcharts.HTMLAttributes\n */\n/**\n * An HTML DOM element. The type is a reference to the regular HTMLElement in\n * the global scope.\n *\n * @typedef {global.HTMLElement} Highcharts.HTMLDOMElement\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n */\n/**\n * The iterator callback.\n *\n * @callback Highcharts.ObjectEachCallbackFunction<T>\n *\n * @param {T} this\n *        The context.\n *\n * @param {*} value\n *        The property value.\n *\n * @param {string} key\n *        The property key.\n *\n * @param {*} obj\n *        The object that objectEach is being applied to.\n */\n/**\n * An object containing `left` and `top` properties for the position in the\n * page.\n *\n * @interface Highcharts.OffsetObject\n */ /**\n    * Left distance to the page border.\n    * @name Highcharts.OffsetObject#left\n    * @type {number}\n    */ /**\n       * Top distance to the page border.\n       * @name Highcharts.OffsetObject#top\n       * @type {number}\n       */\n/**\n * Describes a range.\n *\n * @interface Highcharts.RangeObject\n */ /**\n    * Maximum number of the range.\n    * @name Highcharts.RangeObject#max\n    * @type {number}\n    */ /**\n       * Minimum number of the range.\n       * @name Highcharts.RangeObject#min\n       * @type {number}\n       */\n/**\n * If a number is given, it defines the pixel length. If a percentage string is\n * given, like for example `'50%'`, the setting defines a length relative to a\n * base size, for example the size of a container.\n *\n * @typedef {number|string} Highcharts.RelativeSize\n */\n/**\n * Proceed function to call original (wrapped) function.\n *\n * @callback Highcharts.WrapProceedFunction\n *\n * @param {*} [arg1]\n *        Optional argument. Without any arguments defaults to first argument of\n *        the wrapping function.\n *\n * @param {*} [arg2]\n *        Optional argument. Without any arguments defaults to second argument\n *        of the wrapping function.\n *\n * @param {*} [arg3]\n *        Optional argument. Without any arguments defaults to third argument of\n *        the wrapping function.\n *\n * @return {*}\n *         Return value of the original function.\n */\n/**\n * The Highcharts object is the placeholder for all other members, and various\n * utility functions. The most important member of the namespace would be the\n * chart constructor.\n *\n * @example\n * let chart = Highcharts.chart('container', { ... });\n *\n * @namespace Highcharts\n */\n''; // detach doclets above","map":{"version":3,"names":["H","charts","doc","win","error","code","stop","chart","params","severity","isCode","isNumber","message","toString","defaultHandler","Error","console","messages","indexOf","warn","additionalMessages","objectEach","value","key","encodeURI","fireEvent","push","merge","i","args","arguments","ret","doCopy","copy","original","isObject","isClass","isDOMElement","Array","prototype","slice","call","len","length","clamp","min","max","diffObjects","newer","older","keepOlder","collectionsWithUpdate","diff","depth","keeper","newerVal","splat","Math","nodeType","isArray","Object","keys","pInt","s","mag","parseInt","isString","obj","str","strict","c","constructor","name","n","isNaN","Infinity","erase","arr","item","splice","insertItem","collection","indexOption","options","index","isInternal","pick","_i","pushUnique","array","defined","attr","elem","keyOrAttribs","isGetter","attrSingle","setAttribute","getAttribute","removeAttribute","syncTimeout","fn","delay","context","setTimeout","internalClearTimeout","id","clearTimeout","extend","a","b","arg","css","el","styles","isMS","svg","opacity","filter","style","createElement","tag","attribs","parent","nopad","padding","border","margin","appendChild","extendClass","members","pad","number","padder","String","replace","join","relativeLength","base","offset","test","parseFloat","wrap","method","func","proceed","outerArgs","scope","apply","concat","getMagnitude","num","pow","floor","log","LN10","normalizeTickInterval","interval","multiples","magnitude","allowDecimals","hasTickAmount","retInterval","normalized","correctFloat","round","stableSort","sortFunction","sortValue","safeI","sort","arrayMin","data","arrayMax","destroyObjectProperties","except","val","destroy","discardElement","element","parentElement","removeChild","prec","toPrecision","timeUnits","millisecond","second","minute","hour","day","week","month","year","easeInOutSine","pos","cos","PI","getClosestDistance","arrays","onError","allowNegative","closest","loopLength","distance","forEach","xData","getNestedProperty","path","pathElements","split","pathElement","shift","thisProp","child","getStyle","prop","toInt","offsetWidth","scrollWidth","boundingClientRectWidth","getBoundingClientRect","width","offsetHeight","scrollHeight","getComputedStyle","getPropertyValue","inArray","fromIndex","find","callback","docElem","documentElement","box","parentNode","top","left","height","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","ctx","hasOwnProperty","map","each","grep","reduce","some","addEvent","type","owner","hcEvents","events","Point","series","runTrackerClick","addEventListener","supportsPassiveEvents","passive","capture","eventObject","order","removeEvent","removeOneEvent","removeEventListener","removeAllEvents","eventCollection","types","nodeName","_val","typeEvents","eventArguments","defaultFunction","e","createEvent","dispatchEvent","initEvent","target","preventDefault","defaultPrevented","object","multilevel","unshift","getPrototypeOf","serialMode","uniqueKey","hash","random","substring","useSerialIds","mode","isFunction","jQuery","highcharts","Utilities"],"sources":["D:/Vamtage/angular-widget-project/node_modules/highcharts/es-modules/Core/Utilities.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from './Globals.js';\nconst { charts, doc, win } = H;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Provide error messages for debugging, with links to online explanation. This\n * function can be overridden to provide custom error handling.\n *\n * @sample highcharts/chart/highcharts-error/\n *         Custom error handler\n *\n * @function Highcharts.error\n *\n * @param {number|string} code\n *        The error code. See\n *        [errors.xml](https://github.com/highcharts/highcharts/blob/master/errors/errors.xml)\n *        for available codes. If it is a string, the error message is printed\n *        directly in the console.\n *\n * @param {boolean} [stop=false]\n *        Whether to throw an error or just log a warning in the console.\n *\n * @param {Highcharts.Chart} [chart]\n *        Reference to the chart that causes the error. Used in 'debugger'\n *        module to display errors directly on the chart.\n *        Important note: This argument is undefined for errors that lack\n *        access to the Chart instance. In such case, the error will be\n *        displayed on the last created chart.\n *\n * @param {Highcharts.Dictionary<string>} [params]\n *        Additional parameters for the generated message.\n *\n * @return {void}\n */\nfunction error(code, stop, chart, params) {\n    const severity = stop ? 'Highcharts error' : 'Highcharts warning';\n    if (code === 32) {\n        code = `${severity}: Deprecated member`;\n    }\n    const isCode = isNumber(code);\n    let message = isCode ?\n        `${severity} #${code}: www.highcharts.com/errors/${code}/` :\n        code.toString();\n    const defaultHandler = function () {\n        if (stop) {\n            throw new Error(message);\n        }\n        // else ...\n        if (win.console &&\n            error.messages.indexOf(message) === -1 // prevent console flooting\n        ) {\n            console.warn(message); // eslint-disable-line no-console\n        }\n    };\n    if (typeof params !== 'undefined') {\n        let additionalMessages = '';\n        if (isCode) {\n            message += '?';\n        }\n        objectEach(params, function (value, key) {\n            additionalMessages += `\\n - ${key}: ${value}`;\n            if (isCode) {\n                message += encodeURI(key) + '=' + encodeURI(value);\n            }\n        });\n        message += additionalMessages;\n    }\n    fireEvent(H, 'displayError', { chart, code, message, params }, defaultHandler);\n    error.messages.push(message);\n}\n(function (error) {\n    error.messages = [];\n})(error || (error = {}));\n/* eslint-disable valid-jsdoc */\n/**\n * Utility function to deep merge two or more objects and return a third object.\n * If the first argument is true, the contents of the second object is copied\n * into the first object. The merge function can also be used with a single\n * object argument to create a deep copy of an object.\n *\n * @function Highcharts.merge<T>\n *\n * @param {boolean} extend\n *        Whether to extend the left-side object (a) or return a whole new\n *        object.\n *\n * @param {T|undefined} a\n *        The first object to extend. When only this is given, the function\n *        returns a deep copy.\n *\n * @param {...Array<object|undefined>} [n]\n *        An object to merge into the previous one.\n *\n * @return {T}\n *         The merged object. If the first argument is true, the return is the\n *         same as the second argument.\n */ /**\n* Utility function to deep merge two or more objects and return a third object.\n* The merge function can also be used with a single object argument to create a\n* deep copy of an object.\n*\n* @function Highcharts.merge<T>\n*\n* @param {T|undefined} a\n*        The first object to extend. When only this is given, the function\n*        returns a deep copy.\n*\n* @param {...Array<object|undefined>} [n]\n*        An object to merge into the previous one.\n*\n* @return {T}\n*         The merged object. If the first argument is true, the return is the\n*         same as the second argument.\n*/\nfunction merge() {\n    /* eslint-enable valid-jsdoc */\n    let i, args = arguments, ret = {};\n    const doCopy = function (copy, original) {\n        // An object is replacing a primitive\n        if (typeof copy !== 'object') {\n            copy = {};\n        }\n        objectEach(original, function (value, key) {\n            // Prototype pollution (#14883)\n            if (key === '__proto__' || key === 'constructor') {\n                return;\n            }\n            // Copy the contents of objects, but not arrays or DOM nodes\n            if (isObject(value, true) &&\n                !isClass(value) &&\n                !isDOMElement(value)) {\n                copy[key] = doCopy(copy[key] || {}, value);\n                // Primitives and arrays are copied over directly\n            }\n            else {\n                copy[key] = original[key];\n            }\n        });\n        return copy;\n    };\n    // If first argument is true, copy into the existing object. Used in\n    // setOptions.\n    if (args[0] === true) {\n        ret = args[1];\n        args = Array.prototype.slice.call(args, 2);\n    }\n    // For each argument, extend the return\n    const len = args.length;\n    for (i = 0; i < len; i++) {\n        ret = doCopy(ret, args[i]);\n    }\n    return ret;\n}\n/**\n * Constrain a value to within a lower and upper threshold.\n *\n * @private\n * @param {number} value The initial value\n * @param {number} min The lower threshold\n * @param {number} max The upper threshold\n * @return {number} Returns a number value within min and max.\n */\nfunction clamp(value, min, max) {\n    return value > min ? value < max ? value : max : min;\n}\n// eslint-disable-next-line valid-jsdoc\n/**\n * Return the deep difference between two objects. It can either return the new\n * properties, or optionally return the old values of new properties.\n * @private\n */\nfunction diffObjects(newer, older, keepOlder, collectionsWithUpdate) {\n    const ret = {};\n    /**\n     * Recurse over a set of options and its current values, and store the\n     * current values in the ret object.\n     */\n    function diff(newer, older, ret, depth) {\n        const keeper = keepOlder ? older : newer;\n        objectEach(newer, function (newerVal, key) {\n            if (!depth &&\n                collectionsWithUpdate &&\n                collectionsWithUpdate.indexOf(key) > -1 &&\n                older[key]) {\n                newerVal = splat(newerVal);\n                ret[key] = [];\n                // Iterate over collections like series, xAxis or yAxis and map\n                // the items by index.\n                for (let i = 0; i < Math.max(newerVal.length, older[key].length); i++) {\n                    // Item exists in current data (#6347)\n                    if (older[key][i]) {\n                        // If the item is missing from the new data, we need to\n                        // save the whole config structure. Like when\n                        // responsively updating from a dual axis layout to a\n                        // single axis and back (#13544).\n                        if (newerVal[i] === void 0) {\n                            ret[key][i] = older[key][i];\n                            // Otherwise, proceed\n                        }\n                        else {\n                            ret[key][i] = {};\n                            diff(newerVal[i], older[key][i], ret[key][i], depth + 1);\n                        }\n                    }\n                }\n            }\n            else if (isObject(newerVal, true) &&\n                !newerVal.nodeType // #10044\n            ) {\n                ret[key] = isArray(newerVal) ? [] : {};\n                diff(newerVal, older[key] || {}, ret[key], depth + 1);\n                // Delete empty nested objects\n                if (Object.keys(ret[key]).length === 0 &&\n                    // Except colorAxis which is a special case where the empty\n                    // object means it is enabled. Which is unfortunate and we\n                    // should try to find a better way.\n                    !(key === 'colorAxis' && depth === 0)) {\n                    delete ret[key];\n                }\n            }\n            else if (newer[key] !== older[key] ||\n                // If the newer key is explicitly undefined, keep it (#10525)\n                (key in newer && !(key in older))) {\n                ret[key] = keeper[key];\n            }\n        });\n    }\n    diff(newer, older, ret, 0);\n    return ret;\n}\n/**\n * Shortcut for parseInt\n *\n * @private\n * @function Highcharts.pInt\n *\n * @param {*} s\n *        any\n *\n * @param {number} [mag]\n *        Magnitude\n *\n * @return {number}\n *         number\n */\nfunction pInt(s, mag) {\n    return parseInt(s, mag || 10);\n}\n/**\n * Utility function to check for string type.\n *\n * @function Highcharts.isString\n *\n * @param {*} s\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a string.\n */\nfunction isString(s) {\n    return typeof s === 'string';\n}\n/**\n * Utility function to check if an item is an array.\n *\n * @function Highcharts.isArray\n *\n * @param {*} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is an array.\n */\nfunction isArray(obj) {\n    const str = Object.prototype.toString.call(obj);\n    return str === '[object Array]' || str === '[object Array Iterator]';\n}\n/**\n * Utility function to check if an item is of type object.\n *\n * @function Highcharts.isObject\n *\n * @param {*} obj\n *        The item to check.\n *\n * @param {boolean} [strict=false]\n *        Also checks that the object is not an array.\n *\n * @return {boolean}\n *         True if the argument is an object.\n */\nfunction isObject(obj, strict) {\n    return (!!obj &&\n        typeof obj === 'object' &&\n        (!strict || !isArray(obj))); // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n/**\n * Utility function to check if an Object is a HTML Element.\n *\n * @function Highcharts.isDOMElement\n *\n * @param {*} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a HTML Element.\n */\nfunction isDOMElement(obj) {\n    return isObject(obj) && typeof obj.nodeType === 'number';\n}\n/**\n * Utility function to check if an Object is a class.\n *\n * @function Highcharts.isClass\n *\n * @param {object|undefined} obj\n *        The item to check.\n *\n * @return {boolean}\n *         True if the argument is a class.\n */\nfunction isClass(obj) {\n    const c = obj && obj.constructor;\n    return !!(isObject(obj, true) &&\n        !isDOMElement(obj) &&\n        (c && c.name && c.name !== 'Object'));\n}\n/**\n * Utility function to check if an item is a number and it is finite (not NaN,\n * Infinity or -Infinity).\n *\n * @function Highcharts.isNumber\n *\n * @param {*} n\n *        The item to check.\n *\n * @return {boolean}\n *         True if the item is a finite number\n */\nfunction isNumber(n) {\n    return typeof n === 'number' && !isNaN(n) && n < Infinity && n > -Infinity;\n}\n/**\n * Remove the last occurence of an item from an array.\n *\n * @function Highcharts.erase\n *\n * @param {Array<*>} arr\n *        The array.\n *\n * @param {*} item\n *        The item to remove.\n *\n * @return {void}\n */\nfunction erase(arr, item) {\n    let i = arr.length;\n    while (i--) {\n        if (arr[i] === item) {\n            arr.splice(i, 1);\n            break;\n        }\n    }\n}\n/**\n * Insert a series or an axis in a collection with other items, either the\n * chart series or yAxis series or axis collections, in the correct order\n * according to the index option and whether it is internal. Used internally\n * when adding series and axes.\n *\n * @private\n * @function Highcharts.Chart#insertItem\n * @param  {Highcharts.Series|Highcharts.Axis} item\n *         The item to insert\n * @param  {Array<Highcharts.Series>|Array<Highcharts.Axis>} collection\n *         A collection of items, like `chart.series` or `xAxis.series`.\n * @return {number} The index of the series in the collection.\n */\nfunction insertItem(item, collection) {\n    const indexOption = item.options.index, length = collection.length;\n    let i;\n    for (\n    // Internal item (navigator) should always be pushed to the end\n    i = item.options.isInternal ? length : 0; i < length + 1; i++) {\n        if (\n        // No index option, reached the end of the collection,\n        // equivalent to pushing\n        !collection[i] ||\n            // Handle index option, the element to insert has lower index\n            (isNumber(indexOption) &&\n                indexOption < pick(collection[i].options.index, collection[i]._i)) ||\n            // Insert the new item before other internal items\n            // (navigator)\n            collection[i].options.isInternal) {\n            collection.splice(i, 0, item);\n            break;\n        }\n    }\n    return i;\n}\n/**\n * Adds an item to an array, if it is not present in the array.\n *\n * @function Highcharts.pushUnique\n *\n * @param {Array<unknown>} array\n * The array to add the item to.\n *\n * @param {unknown} item\n * The item to add.\n *\n * @return {boolean}\n * Returns true, if the item was not present and has been added.\n */\nfunction pushUnique(array, item) {\n    return array.indexOf(item) < 0 && !!array.push(item);\n}\n/**\n * Check if an object is null or undefined.\n *\n * @function Highcharts.defined\n *\n * @param {*} obj\n *        The object to check.\n *\n * @return {boolean}\n *         False if the object is null or undefined, otherwise true.\n */\nfunction defined(obj) {\n    return typeof obj !== 'undefined' && obj !== null;\n}\n/**\n * Set or get an attribute or an object of attributes.\n *\n * To use as a setter, pass a key and a value, or let the second argument be a\n * collection of keys and values. When using a collection, passing a value of\n * `null` or `undefined` will remove the attribute.\n *\n * To use as a getter, pass only a string as the second argument.\n *\n * @function Highcharts.attr\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} elem\n *        The DOM element to receive the attribute(s).\n *\n * @param {string|Highcharts.HTMLAttributes|Highcharts.SVGAttributes} [keyOrAttribs]\n *        The property or an object of key-value pairs.\n *\n * @param {number|string} [value]\n *        The value if a single property is set.\n *\n * @return {string|null|undefined}\n *         When used as a getter, return the value.\n */\nfunction attr(elem, keyOrAttribs, value) {\n    const isGetter = isString(keyOrAttribs) && !defined(value);\n    let ret;\n    const attrSingle = (value, key) => {\n        // Set the value\n        if (defined(value)) {\n            elem.setAttribute(key, value);\n            // Get the value\n        }\n        else if (isGetter) {\n            ret = elem.getAttribute(key);\n            // IE7 and below cannot get class through getAttribute (#7850)\n            if (!ret && key === 'class') {\n                ret = elem.getAttribute(key + 'Name');\n            }\n            // Remove the value\n        }\n        else {\n            elem.removeAttribute(key);\n        }\n    };\n    // If keyOrAttribs is a string\n    if (isString(keyOrAttribs)) {\n        attrSingle(value, keyOrAttribs);\n        // Else if keyOrAttribs is defined, it is a hash of key/value pairs\n    }\n    else {\n        objectEach(keyOrAttribs, attrSingle);\n    }\n    return ret;\n}\n/**\n * Check if an element is an array, and if not, make it into an array.\n *\n * @function Highcharts.splat\n *\n * @param {*} obj\n *        The object to splat.\n *\n * @return {Array}\n *         The produced or original array.\n */\nfunction splat(obj) {\n    return isArray(obj) ? obj : [obj];\n}\n/**\n * Set a timeout if the delay is given, otherwise perform the function\n * synchronously.\n *\n * @function Highcharts.syncTimeout\n *\n * @param {Function} fn\n *        The function callback.\n *\n * @param {number} delay\n *        Delay in milliseconds.\n *\n * @param {*} [context]\n *        An optional context to send to the function callback.\n *\n * @return {number}\n *         An identifier for the timeout that can later be cleared with\n *         Highcharts.clearTimeout. Returns -1 if there is no timeout.\n */\nfunction syncTimeout(fn, delay, context) {\n    if (delay > 0) {\n        return setTimeout(fn, delay, context);\n    }\n    fn.call(0, context);\n    return -1;\n}\n/**\n * Internal clear timeout. The function checks that the `id` was not removed\n * (e.g. by `chart.destroy()`). For the details see\n * [issue #7901](https://github.com/highcharts/highcharts/issues/7901).\n *\n * @function Highcharts.clearTimeout\n *\n * @param {number|undefined} id\n * Id of a timeout.\n */\nfunction internalClearTimeout(id) {\n    if (defined(id)) {\n        clearTimeout(id);\n    }\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Utility function to extend an object with the members of another.\n *\n * @function Highcharts.extend<T>\n *\n * @param {T|undefined} a\n *        The object to be extended.\n *\n * @param {Partial<T>} b\n *        The object to add to the first one.\n *\n * @return {T}\n *         Object a, the original object.\n */\nfunction extend(a, b) {\n    /* eslint-enable valid-jsdoc */\n    let n;\n    if (!a) {\n        a = {};\n    }\n    for (n in b) { // eslint-disable-line guard-for-in\n        a[n] = b[n];\n    }\n    return a;\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Return the first value that is not null or undefined.\n *\n * @function Highcharts.pick<T>\n *\n * @param {...Array<T|null|undefined>} items\n *        Variable number of arguments to inspect.\n *\n * @return {T}\n *         The value of the first argument that is not null or undefined.\n */\nfunction pick() {\n    const args = arguments;\n    const length = args.length;\n    for (let i = 0; i < length; i++) {\n        const arg = args[i];\n        if (typeof arg !== 'undefined' && arg !== null) {\n            return arg;\n        }\n    }\n}\n/**\n * Set CSS on a given element.\n *\n * @function Highcharts.css\n *\n * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} el\n *        An HTML DOM element.\n *\n * @param {Highcharts.CSSObject} styles\n *        Style object with camel case property names.\n *\n * @return {void}\n */\nfunction css(el, styles) {\n    if (H.isMS && !H.svg) { // #2686\n        if (styles && defined(styles.opacity)) {\n            styles.filter = `alpha(opacity=${styles.opacity * 100})`;\n        }\n    }\n    extend(el.style, styles);\n}\n/**\n * Utility function to create an HTML element with attributes and styles.\n *\n * @function Highcharts.createElement\n *\n * @param {string} tag\n *        The HTML tag.\n *\n * @param {Highcharts.HTMLAttributes} [attribs]\n *        Attributes as an object of key-value pairs.\n *\n * @param {Highcharts.CSSObject} [styles]\n *        Styles as an object of key-value pairs.\n *\n * @param {Highcharts.HTMLDOMElement} [parent]\n *        The parent HTML object.\n *\n * @param {boolean} [nopad=false]\n *        If true, remove all padding, border and margin.\n *\n * @return {Highcharts.HTMLDOMElement}\n *         The created DOM element.\n */\nfunction createElement(tag, attribs, styles, parent, nopad) {\n    const el = doc.createElement(tag);\n    if (attribs) {\n        extend(el, attribs);\n    }\n    if (nopad) {\n        css(el, { padding: '0', border: 'none', margin: '0' });\n    }\n    if (styles) {\n        css(el, styles);\n    }\n    if (parent) {\n        parent.appendChild(el);\n    }\n    return el;\n}\n// eslint-disable-next-line valid-jsdoc\n/**\n * Extend a prototyped class by new members.\n *\n * @deprecated\n * @function Highcharts.extendClass<T>\n *\n * @param {Highcharts.Class<T>} parent\n *        The parent prototype to inherit.\n *\n * @param {Highcharts.Dictionary<*>} members\n *        A collection of prototype members to add or override compared to the\n *        parent prototype.\n *\n * @return {Highcharts.Class<T>}\n *         A new prototype.\n */\nfunction extendClass(parent, members) {\n    const obj = (function () { });\n    obj.prototype = new parent(); // eslint-disable-line new-cap\n    extend(obj.prototype, members);\n    return obj;\n}\n/**\n * Left-pad a string to a given length by adding a character repetitively.\n *\n * @function Highcharts.pad\n *\n * @param {number} number\n *        The input string or number.\n *\n * @param {number} [length]\n *        The desired string length.\n *\n * @param {string} [padder=0]\n *        The character to pad with.\n *\n * @return {string}\n *         The padded string.\n */\nfunction pad(number, length, padder) {\n    return new Array((length || 2) +\n        1 -\n        String(number)\n            .replace('-', '')\n            .length).join(padder || '0') + number;\n}\n/**\n * Return a length based on either the integer value, or a percentage of a base.\n *\n * @function Highcharts.relativeLength\n *\n * @param {Highcharts.RelativeSize} value\n *        A percentage string or a number.\n *\n * @param {number} base\n *        The full length that represents 100%.\n *\n * @param {number} [offset=0]\n *        A pixel offset to apply for percentage values. Used internally in\n *        axis positioning.\n *\n * @return {number}\n *         The computed length.\n */\nfunction relativeLength(value, base, offset) {\n    return (/%$/).test(value) ?\n        (base * parseFloat(value) / 100) + (offset || 0) :\n        parseFloat(value);\n}\n/**\n * Wrap a method with extended functionality, preserving the original function.\n *\n * @function Highcharts.wrap\n *\n * @param {*} obj\n *        The context object that the method belongs to. In real cases, this is\n *        often a prototype.\n *\n * @param {string} method\n *        The name of the method to extend.\n *\n * @param {Highcharts.WrapProceedFunction} func\n *        A wrapper function callback. This function is called with the same\n *        arguments as the original function, except that the original function\n *        is unshifted and passed as the first argument.\n */\nfunction wrap(obj, method, func) {\n    const proceed = obj[method];\n    obj[method] = function () {\n        const outerArgs = arguments, scope = this;\n        return func.apply(this, [\n            function () {\n                return proceed.apply(scope, arguments.length ? arguments : outerArgs);\n            }\n        ].concat([].slice.call(arguments)));\n    };\n}\n/**\n * Get the magnitude of a number.\n *\n * @function Highcharts.getMagnitude\n *\n * @param {number} num\n *        The number.\n *\n * @return {number}\n *         The magnitude, where 1-9 are magnitude 1, 10-99 magnitude 2 etc.\n */\nfunction getMagnitude(num) {\n    return Math.pow(10, Math.floor(Math.log(num) / Math.LN10));\n}\n/**\n * Take an interval and normalize it to multiples of round numbers.\n *\n * @deprecated\n * @function Highcharts.normalizeTickInterval\n *\n * @param {number} interval\n *        The raw, un-rounded interval.\n *\n * @param {Array<*>} [multiples]\n *        Allowed multiples.\n *\n * @param {number} [magnitude]\n *        The magnitude of the number.\n *\n * @param {boolean} [allowDecimals]\n *        Whether to allow decimals.\n *\n * @param {boolean} [hasTickAmount]\n *        If it has tickAmount, avoid landing on tick intervals lower than\n *        original.\n *\n * @return {number}\n *         The normalized interval.\n *\n * @todo\n * Move this function to the Axis prototype. It is here only for historical\n * reasons.\n */\nfunction normalizeTickInterval(interval, multiples, magnitude, allowDecimals, hasTickAmount) {\n    let i, retInterval = interval;\n    // round to a tenfold of 1, 2, 2.5 or 5\n    magnitude = pick(magnitude, getMagnitude(interval));\n    const normalized = interval / magnitude;\n    // multiples for a linear scale\n    if (!multiples) {\n        multiples = hasTickAmount ?\n            // Finer grained ticks when the tick amount is hard set, including\n            // when alignTicks is true on multiple axes (#4580).\n            [1, 1.2, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10] :\n            // Else, let ticks fall on rounder numbers\n            [1, 2, 2.5, 5, 10];\n        // the allowDecimals option\n        if (allowDecimals === false) {\n            if (magnitude === 1) {\n                multiples = multiples.filter(function (num) {\n                    return num % 1 === 0;\n                });\n            }\n            else if (magnitude <= 0.1) {\n                multiples = [1 / magnitude];\n            }\n        }\n    }\n    // normalize the interval to the nearest multiple\n    for (i = 0; i < multiples.length; i++) {\n        retInterval = multiples[i];\n        // only allow tick amounts smaller than natural\n        if ((hasTickAmount &&\n            retInterval * magnitude >= interval) ||\n            (!hasTickAmount &&\n                (normalized <=\n                    (multiples[i] +\n                        (multiples[i + 1] || multiples[i])) / 2))) {\n            break;\n        }\n    }\n    // Multiply back to the correct magnitude. Correct floats to appropriate\n    // precision (#6085).\n    retInterval = correctFloat(retInterval * magnitude, -Math.round(Math.log(0.001) / Math.LN10));\n    return retInterval;\n}\n/**\n * Sort an object array and keep the order of equal items. The ECMAScript\n * standard does not specify the behaviour when items are equal.\n *\n * @function Highcharts.stableSort\n *\n * @param {Array<*>} arr\n *        The array to sort.\n *\n * @param {Function} sortFunction\n *        The function to sort it with, like with regular Array.prototype.sort.\n */\nfunction stableSort(arr, sortFunction) {\n    // @todo It seems like Chrome since v70 sorts in a stable way internally,\n    // plus all other browsers do it, so over time we may be able to remove this\n    // function\n    const length = arr.length;\n    let sortValue, i;\n    // Add index to each item\n    for (i = 0; i < length; i++) {\n        arr[i].safeI = i; // stable sort index\n    }\n    arr.sort(function (a, b) {\n        sortValue = sortFunction(a, b);\n        return sortValue === 0 ? a.safeI - b.safeI : sortValue;\n    });\n    // Remove index from items\n    for (i = 0; i < length; i++) {\n        delete arr[i].safeI; // stable sort index\n    }\n}\n/**\n * Non-recursive method to find the lowest member of an array. `Math.min` raises\n * a maximum call stack size exceeded error in Chrome when trying to apply more\n * than 150.000 points. This method is slightly slower, but safe.\n *\n * @function Highcharts.arrayMin\n *\n * @param {Array<*>} data\n *        An array of numbers.\n *\n * @return {number}\n *         The lowest number.\n */\nfunction arrayMin(data) {\n    let i = data.length, min = data[0];\n    while (i--) {\n        if (data[i] < min) {\n            min = data[i];\n        }\n    }\n    return min;\n}\n/**\n * Non-recursive method to find the lowest member of an array. `Math.max` raises\n * a maximum call stack size exceeded error in Chrome when trying to apply more\n * than 150.000 points. This method is slightly slower, but safe.\n *\n * @function Highcharts.arrayMax\n *\n * @param {Array<*>} data\n *        An array of numbers.\n *\n * @return {number}\n *         The highest number.\n */\nfunction arrayMax(data) {\n    let i = data.length, max = data[0];\n    while (i--) {\n        if (data[i] > max) {\n            max = data[i];\n        }\n    }\n    return max;\n}\n/**\n * Utility method that destroys any SVGElement instances that are properties on\n * the given object. It loops all properties and invokes destroy if there is a\n * destroy method. The property is then delete.\n *\n * @function Highcharts.destroyObjectProperties\n *\n * @param {*} obj\n *        The object to destroy properties on.\n *\n * @param {*} [except]\n *        Exception, do not destroy this property, only delete it.\n */\nfunction destroyObjectProperties(obj, except) {\n    objectEach(obj, function (val, n) {\n        // If the object is non-null and destroy is defined\n        if (val && val !== except && val.destroy) {\n            // Invoke the destroy\n            val.destroy();\n        }\n        // Delete the property from the object.\n        delete obj[n];\n    });\n}\n/**\n * Discard a HTML element\n *\n * @function Highcharts.discardElement\n *\n * @param {Highcharts.HTMLDOMElement} element\n *        The HTML node to discard.\n */\nfunction discardElement(element) {\n    if (element && element.parentElement) {\n        element.parentElement.removeChild(element);\n    }\n}\n/**\n * Fix JS round off float errors.\n *\n * @function Highcharts.correctFloat\n *\n * @param {number} num\n *        A float number to fix.\n *\n * @param {number} [prec=14]\n *        The precision.\n *\n * @return {number}\n *         The corrected float number.\n */\nfunction correctFloat(num, prec) {\n    // When the number is higher than 1e14 use the number (#16275)\n    return num > 1e14 ? num : parseFloat(num.toPrecision(prec || 14));\n}\n/**\n * The time unit lookup\n *\n * @ignore\n */\nconst timeUnits = {\n    millisecond: 1,\n    second: 1000,\n    minute: 60000,\n    hour: 3600000,\n    day: 24 * 3600000,\n    week: 7 * 24 * 3600000,\n    month: 28 * 24 * 3600000,\n    year: 364 * 24 * 3600000\n};\n/**\n * Easing definition\n *\n * @private\n * @function Math.easeInOutSine\n *\n * @param {number} pos\n *        Current position, ranging from 0 to 1.\n *\n * @return {number}\n *         Ease result\n */\nMath.easeInOutSine = function (pos) {\n    return -0.5 * (Math.cos(Math.PI * pos) - 1);\n};\n/**\n * Find the closest distance between two values of a two-dimensional array\n * @private\n * @function Highcharts.getClosestDistance\n *\n * @param {Array<Array<number>>} arrays\n *          An array of arrays of numbers\n *\n * @return {number | undefined}\n *          The closest distance between values\n */\nfunction getClosestDistance(arrays, onError) {\n    const allowNegative = !onError;\n    let closest, loopLength, distance, i;\n    arrays.forEach((xData) => {\n        if (xData.length > 1) {\n            loopLength = xData.length - 1;\n            for (i = loopLength; i > 0; i--) {\n                distance = xData[i] - xData[i - 1];\n                if (distance < 0 && !allowNegative) {\n                    onError?.();\n                    // Only one call\n                    onError = void 0;\n                }\n                else if (distance && (typeof closest === 'undefined' || distance < closest)) {\n                    closest = distance;\n                }\n            }\n        }\n    });\n    return closest;\n}\n/**\n * Returns the value of a property path on a given object.\n *\n * @private\n * @function getNestedProperty\n *\n * @param {string} path\n * Path to the property, for example `custom.myValue`.\n *\n * @param {unknown} obj\n * Instance containing the property on the specific path.\n *\n * @return {unknown}\n * The unknown property value.\n */\nfunction getNestedProperty(path, parent) {\n    const pathElements = path.split('.');\n    while (pathElements.length && defined(parent)) {\n        const pathElement = pathElements.shift();\n        // Filter on the key\n        if (typeof pathElement === 'undefined' ||\n            pathElement === '__proto__') {\n            return; // undefined\n        }\n        if (pathElement === 'this') {\n            let thisProp;\n            if (isObject(parent)) {\n                thisProp = parent['@this'];\n            }\n            return thisProp ?? parent;\n        }\n        const child = parent[pathElement];\n        // Filter on the child\n        if (!defined(child) ||\n            typeof child === 'function' ||\n            typeof child.nodeType === 'number' ||\n            child === win) {\n            return; // undefined\n        }\n        // Else, proceed\n        parent = child;\n    }\n    return parent;\n}\n/**\n * Get the computed CSS value for given element and property, only for numerical\n * properties. For width and height, the dimension of the inner box (excluding\n * padding) is returned. Used for fitting the chart within the container.\n *\n * @function Highcharts.getStyle\n *\n * @param {Highcharts.HTMLDOMElement} el\n * An HTML element.\n *\n * @param {string} prop\n * The property name.\n *\n * @param {boolean} [toInt=true]\n * Parse to integer.\n *\n * @return {number|string|undefined}\n * The style value.\n */\nfunction getStyle(el, prop, toInt) {\n    let style;\n    // For width and height, return the actual inner pixel size (#4913)\n    if (prop === 'width') {\n        let offsetWidth = Math.min(el.offsetWidth, el.scrollWidth);\n        // In flex boxes, we need to use getBoundingClientRect and floor it,\n        // because scrollWidth doesn't support subpixel precision (#6427) ...\n        const boundingClientRectWidth = el.getBoundingClientRect &&\n            el.getBoundingClientRect().width;\n        // ...unless if the containing div or its parents are transform-scaled\n        // down, in which case the boundingClientRect can't be used as it is\n        // also scaled down (#9871, #10498).\n        if (boundingClientRectWidth < offsetWidth &&\n            boundingClientRectWidth >= offsetWidth - 1) {\n            offsetWidth = Math.floor(boundingClientRectWidth);\n        }\n        return Math.max(0, // #8377\n        (offsetWidth -\n            (getStyle(el, 'padding-left', true) || 0) -\n            (getStyle(el, 'padding-right', true) || 0)));\n    }\n    if (prop === 'height') {\n        return Math.max(0, // #8377\n        (Math.min(el.offsetHeight, el.scrollHeight) -\n            (getStyle(el, 'padding-top', true) || 0) -\n            (getStyle(el, 'padding-bottom', true) || 0)));\n    }\n    // Otherwise, get the computed style\n    const css = win.getComputedStyle(el, void 0); // eslint-disable-line no-undefined\n    if (css) {\n        style = css.getPropertyValue(prop);\n        if (pick(toInt, prop !== 'opacity')) {\n            style = pInt(style);\n        }\n    }\n    return style;\n}\n/**\n * Search for an item in an array.\n *\n * @function Highcharts.inArray\n *\n * @deprecated\n *\n * @param {*} item\n *        The item to search for.\n *\n * @param {Array<*>} arr\n *        The array or node collection to search in.\n *\n * @param {number} [fromIndex=0]\n *        The index to start searching from.\n *\n * @return {number}\n *         The index within the array, or -1 if not found.\n */\nfunction inArray(item, arr, fromIndex) {\n    error(32, false, void 0, { 'Highcharts.inArray': 'use Array.indexOf' });\n    return arr.indexOf(item, fromIndex);\n}\n/**\n * Return the value of the first element in the array that satisfies the\n * provided testing function.\n *\n * @function Highcharts.find<T>\n *\n * @param {Array<T>} arr\n *        The array to test.\n *\n * @param {Function} callback\n *        The callback function. The function receives the item as the first\n *        argument. Return `true` if this item satisfies the condition.\n *\n * @return {T|undefined}\n *         The value of the element.\n */\nconst find = Array.prototype.find ?\n    function (arr, callback) {\n        return arr.find(callback);\n    } :\n    // Legacy implementation. PhantomJS, IE <= 11 etc. #7223.\n    function (arr, callback) {\n        let i;\n        const length = arr.length;\n        for (i = 0; i < length; i++) {\n            if (callback(arr[i], i)) { // eslint-disable-line node/callback-return\n                return arr[i];\n            }\n        }\n    };\n/**\n * Returns an array of a given object's own properties.\n *\n * @function Highcharts.keys\n * @deprecated\n *\n * @param {*} obj\n *        The object of which the properties are to be returned.\n *\n * @return {Array<string>}\n *         An array of strings that represents all the properties.\n */\nfunction keys(obj) {\n    error(32, false, void 0, { 'Highcharts.keys': 'use Object.keys' });\n    return Object.keys(obj);\n}\n/**\n * Get the element's offset position, corrected for `overflow: auto`.\n *\n * @function Highcharts.offset\n *\n * @param {global.Element} el\n *        The DOM element.\n *\n * @return {Highcharts.OffsetObject}\n *         An object containing `left` and `top` properties for the position in\n *         the page.\n */\nfunction offset(el) {\n    const docElem = doc.documentElement, box = (el.parentElement || el.parentNode) ?\n        el.getBoundingClientRect() :\n        { top: 0, left: 0, width: 0, height: 0 };\n    return {\n        top: box.top + (win.pageYOffset || docElem.scrollTop) -\n            (docElem.clientTop || 0),\n        left: box.left + (win.pageXOffset || docElem.scrollLeft) -\n            (docElem.clientLeft || 0),\n        width: box.width,\n        height: box.height\n    };\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Iterate over object key pairs in an object.\n *\n * @function Highcharts.objectEach<T>\n *\n * @param {*} obj\n *        The object to iterate over.\n *\n * @param {Highcharts.ObjectEachCallbackFunction<T>} fn\n *        The iterator callback. It passes three arguments:\n *        * value - The property value.\n *        * key - The property key.\n *        * obj - The object that objectEach is being applied to.\n *\n * @param {T} [ctx]\n *        The context.\n */\nfunction objectEach(obj, fn, ctx) {\n    /* eslint-enable valid-jsdoc */\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn.call(ctx || obj[key], obj[key], key, obj);\n        }\n    }\n}\n/**\n * Iterate over an array.\n *\n * @deprecated\n * @function Highcharts.each\n *\n * @param {Array<*>} arr\n *        The array to iterate over.\n *\n * @param {Function} fn\n *        The iterator callback. It passes three arguments:\n *        - `item`: The array item.\n *        - `index`: The item's index in the array.\n *        - `arr`: The array that each is being applied to.\n *\n * @param {*} [ctx]\n *        The context.\n *\n * @return {void}\n */\n/**\n * Filter an array by a callback.\n *\n * @deprecated\n * @function Highcharts.grep\n *\n * @param {Array<*>} arr\n *        The array to filter.\n *\n * @param {Function} callback\n *        The callback function. The function receives the item as the first\n *        argument. Return `true` if the item is to be preserved.\n *\n * @return {Array<*>}\n *         A new, filtered array.\n */\n/**\n * Map an array by a callback.\n *\n * @deprecated\n * @function Highcharts.map\n *\n * @param {Array<*>} arr\n *        The array to map.\n *\n * @param {Function} fn\n *        The callback function. Return the new value for the new array.\n *\n * @return {Array<*>}\n *         A new array item with modified items.\n */\n/**\n * Reduce an array to a single value.\n *\n * @deprecated\n * @function Highcharts.reduce\n *\n * @param {Array<*>} arr\n *        The array to reduce.\n *\n * @param {Function} fn\n *        The callback function. Return the reduced value. Receives 4\n *        arguments: Accumulated/reduced value, current value, current array\n *        index, and the array.\n *\n * @param {*} initialValue\n *        The initial value of the accumulator.\n *\n * @return {*}\n *         The reduced value.\n */\n/**\n * Test whether at least one element in the array passes the test implemented by\n * the provided function.\n *\n * @deprecated\n * @function Highcharts.some\n *\n * @param {Array<*>} arr\n *        The array to test\n *\n * @param {Function} fn\n *        The function to run on each item. Return truty to pass the test.\n *        Receives arguments `currentValue`, `index` and `array`.\n *\n * @param {*} ctx\n *        The context.\n *\n * @return {boolean}\n */\nobjectEach({\n    map: 'map',\n    each: 'forEach',\n    grep: 'filter',\n    reduce: 'reduce',\n    some: 'some'\n}, function (val, key) {\n    H[key] = function (arr) {\n        error(32, false, void 0, { [`Highcharts.${key}`]: `use Array.${val}` });\n        return Array.prototype[val].apply(arr, [].slice.call(arguments, 1));\n    };\n});\n/* eslint-disable valid-jsdoc */\n/**\n * Add an event listener.\n *\n * @function Highcharts.addEvent<T>\n *\n * @param {Highcharts.Class<T>|T} el\n *        The element or object to add a listener to. It can be a\n *        {@link HTMLDOMElement}, an {@link SVGElement} or any other object.\n *\n * @param {string} type\n *        The event type.\n *\n * @param {Highcharts.EventCallbackFunction<T>|Function} fn\n *        The function callback to execute when the event is fired.\n *\n * @param {Highcharts.EventOptionsObject} [options]\n *        Options for adding the event.\n *\n * @return {Function}\n *         A callback function to remove the added event.\n */\nfunction addEvent(el, type, fn, options = {}) {\n    /* eslint-enable valid-jsdoc */\n    // Add hcEvents to either the prototype (in case we're running addEvent on a\n    // class) or the instance. If hasOwnProperty('hcEvents') is false, it is\n    // inherited down the prototype chain, in which case we need to set the\n    // property on this instance (which may itself be a prototype).\n    const owner = typeof el === 'function' && el.prototype || el;\n    if (!Object.hasOwnProperty.call(owner, 'hcEvents')) {\n        owner.hcEvents = {};\n    }\n    const events = owner.hcEvents;\n    // Allow click events added to points, otherwise they will be prevented by\n    // the TouchPointer.pinch function after a pinch zoom operation (#7091).\n    if (H.Point && // without H a dependency loop occurs\n        el instanceof H.Point &&\n        el.series &&\n        el.series.chart) {\n        el.series.chart.runTrackerClick = true;\n    }\n    // Handle DOM events\n    // If the browser supports passive events, add it to improve performance\n    // on touch events (#11353).\n    const addEventListener = el.addEventListener;\n    if (addEventListener) {\n        addEventListener.call(el, type, fn, H.supportsPassiveEvents ? {\n            passive: options.passive === void 0 ?\n                type.indexOf('touch') !== -1 : options.passive,\n            capture: false\n        } : false);\n    }\n    if (!events[type]) {\n        events[type] = [];\n    }\n    const eventObject = {\n        fn,\n        order: typeof options.order === 'number' ? options.order : Infinity\n    };\n    events[type].push(eventObject);\n    // Order the calls\n    events[type].sort((a, b) => a.order - b.order);\n    // Return a function that can be called to remove this event.\n    return function () {\n        removeEvent(el, type, fn);\n    };\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Remove an event that was added with {@link Highcharts#addEvent}.\n *\n * @function Highcharts.removeEvent<T>\n *\n * @param {Highcharts.Class<T>|T} el\n *        The element to remove events on.\n *\n * @param {string} [type]\n *        The type of events to remove. If undefined, all events are removed\n *        from the element.\n *\n * @param {Highcharts.EventCallbackFunction<T>} [fn]\n *        The specific callback to remove. If undefined, all events that match\n *        the element and optionally the type are removed.\n *\n * @return {void}\n */\nfunction removeEvent(el, type, fn) {\n    /* eslint-enable valid-jsdoc */\n    /**\n     * @private\n     */\n    function removeOneEvent(type, fn) {\n        const removeEventListener = el.removeEventListener;\n        if (removeEventListener) {\n            removeEventListener.call(el, type, fn, false);\n        }\n    }\n    /**\n     * @private\n     */\n    function removeAllEvents(eventCollection) {\n        let types, len;\n        if (!el.nodeName) {\n            return; // break on non-DOM events\n        }\n        if (type) {\n            types = {};\n            types[type] = true;\n        }\n        else {\n            types = eventCollection;\n        }\n        objectEach(types, function (_val, n) {\n            if (eventCollection[n]) {\n                len = eventCollection[n].length;\n                while (len--) {\n                    removeOneEvent(n, eventCollection[n][len].fn);\n                }\n            }\n        });\n    }\n    const owner = typeof el === 'function' && el.prototype || el;\n    if (Object.hasOwnProperty.call(owner, 'hcEvents')) {\n        const events = owner.hcEvents;\n        if (type) {\n            const typeEvents = (events[type] || []);\n            if (fn) {\n                events[type] = typeEvents.filter(function (obj) {\n                    return fn !== obj.fn;\n                });\n                removeOneEvent(type, fn);\n            }\n            else {\n                removeAllEvents(events);\n                events[type] = [];\n            }\n        }\n        else {\n            removeAllEvents(events);\n            delete owner.hcEvents;\n        }\n    }\n}\n/* eslint-disable valid-jsdoc */\n/**\n * Fire an event that was registered with {@link Highcharts#addEvent}.\n *\n * @function Highcharts.fireEvent<T>\n *\n * @param {T} el\n *        The object to fire the event on. It can be a {@link HTMLDOMElement},\n *        an {@link SVGElement} or any other object.\n *\n * @param {string} type\n *        The type of event.\n *\n * @param {Highcharts.Dictionary<*>|Event} [eventArguments]\n *        Custom event arguments that are passed on as an argument to the event\n *        handler.\n *\n * @param {Highcharts.EventCallbackFunction<T>|Function} [defaultFunction]\n *        The default function to execute if the other listeners haven't\n *        returned false.\n *\n * @return {void}\n */\nfunction fireEvent(el, type, eventArguments, defaultFunction) {\n    /* eslint-enable valid-jsdoc */\n    let e, i;\n    eventArguments = eventArguments || {};\n    if (doc.createEvent &&\n        (el.dispatchEvent ||\n            (el.fireEvent &&\n                // Enable firing events on Highcharts instance.\n                el !== H))) {\n        e = doc.createEvent('Events');\n        e.initEvent(type, true, true);\n        eventArguments = extend(e, eventArguments);\n        if (el.dispatchEvent) {\n            el.dispatchEvent(eventArguments);\n        }\n        else {\n            el.fireEvent(type, eventArguments);\n        }\n    }\n    else if (el.hcEvents) {\n        if (!eventArguments.target) {\n            // We're running a custom event\n            extend(eventArguments, {\n                // Attach a simple preventDefault function to skip\n                // default handler if called. The built-in\n                // defaultPrevented property is not overwritable (#5112)\n                preventDefault: function () {\n                    eventArguments.defaultPrevented = true;\n                },\n                // Setting target to native events fails with clicking\n                // the zoom-out button in Chrome.\n                target: el,\n                // If the type is not set, we're running a custom event\n                // (#2297). If it is set, we're running a browser event.\n                type: type\n            });\n        }\n        const events = [];\n        let object = el;\n        let multilevel = false;\n        // Recurse up the inheritance chain and collect hcEvents set as own\n        // objects on the prototypes.\n        while (object.hcEvents) {\n            if (Object.hasOwnProperty.call(object, 'hcEvents') &&\n                object.hcEvents[type]) {\n                if (events.length) {\n                    multilevel = true;\n                }\n                events.unshift.apply(events, object.hcEvents[type]);\n            }\n            object = Object.getPrototypeOf(object);\n        }\n        // For performance reasons, only sort the event handlers in case we are\n        // dealing with multiple levels in the prototype chain. Otherwise, the\n        // events are already sorted in the addEvent function.\n        if (multilevel) {\n            // Order the calls\n            events.sort((a, b) => a.order - b.order);\n        }\n        // Call the collected event handlers\n        events.forEach((obj) => {\n            // If the event handler returns false, prevent the default handler\n            // from executing\n            if (obj.fn.call(el, eventArguments) === false) {\n                eventArguments.preventDefault();\n            }\n        });\n    }\n    // Run the default if not prevented\n    if (defaultFunction && !eventArguments.defaultPrevented) {\n        defaultFunction.call(el, eventArguments);\n    }\n}\nlet serialMode;\n/**\n * Get a unique key for using in internal element id's and pointers. The key is\n * composed of a random hash specific to this Highcharts instance, and a\n * counter.\n *\n * @example\n * let id = uniqueKey(); // => 'highcharts-x45f6hp-0'\n *\n * @function Highcharts.uniqueKey\n *\n * @return {string}\n * A unique key.\n */\nconst uniqueKey = (function () {\n    const hash = Math.random().toString(36).substring(2, 9) + '-';\n    let id = 0;\n    return function () {\n        return 'highcharts-' + (serialMode ? '' : hash) + id++;\n    };\n}());\n/**\n * Activates a serial mode for element IDs provided by\n * {@link Highcharts.uniqueKey}. This mode can be used in automated tests, where\n * a simple comparison of two rendered SVG graphics is needed.\n *\n * **Note:** This is only for testing purposes and will break functionality in\n * webpages with multiple charts.\n *\n * @example\n * if (\n *   process &&\n *   process.env.NODE_ENV === 'development'\n * ) {\n *   Highcharts.useSerialIds(true);\n * }\n *\n * @function Highcharts.useSerialIds\n *\n * @param {boolean} [mode]\n * Changes the state of serial mode.\n *\n * @return {boolean|undefined}\n * State of the serial mode.\n */\nfunction useSerialIds(mode) {\n    return (serialMode = pick(mode, serialMode));\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n// Register Highcharts as a plugin in jQuery\nif (win.jQuery) {\n    /**\n     * Highcharts-extended JQuery.\n     *\n     * @external JQuery\n     */\n    /**\n     * Helper function to return the chart of the current JQuery selector\n     * element.\n     *\n     * @function external:JQuery#highcharts\n     *\n     * @return {Highcharts.Chart}\n     *         The chart that is linked to the JQuery selector element.\n     */ /**\n    * Factory function to create a chart in the current JQuery selector\n    * element.\n    *\n    * @function external:JQuery#highcharts\n    *\n    * @param {'Chart'|'Map'|'StockChart'|string} [className]\n    *        Name of the factory class in the Highcharts namespace.\n    *\n    * @param {Highcharts.Options} [options]\n    *        The chart options structure.\n    *\n    * @param {Highcharts.ChartCallbackFunction} [callback]\n    *        Function to run when the chart has loaded and and all external\n    *        images are loaded. Defining a\n    *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n    *        handler is equivalent.\n    *\n    * @return {JQuery}\n    *         The current JQuery selector.\n    */\n    win.jQuery.fn.highcharts = function () {\n        const args = [].slice.call(arguments);\n        if (this[0]) { // this[0] is the renderTo div\n            // Create the chart\n            if (args[0]) {\n                new H[ // eslint-disable-line computed-property-spacing, no-new\n                // Constructor defaults to Chart\n                isString(args[0]) ? args.shift() : 'Chart'](this[0], args[0], args[1]);\n                return this;\n            }\n            // When called without parameters or with the return argument,\n            // return an existing chart\n            return charts[attr(this[0], 'data-highcharts-chart')];\n        }\n    };\n}\n/* *\n *\n *  Default Export\n *\n * */\n// TODO use named exports when supported.\nconst Utilities = {\n    addEvent,\n    arrayMax,\n    arrayMin,\n    attr,\n    clamp,\n    clearTimeout: internalClearTimeout,\n    correctFloat,\n    createElement,\n    css,\n    defined,\n    destroyObjectProperties,\n    diffObjects,\n    discardElement,\n    erase,\n    error,\n    extend,\n    extendClass,\n    find,\n    fireEvent,\n    getClosestDistance,\n    getMagnitude,\n    getNestedProperty,\n    getStyle,\n    inArray,\n    insertItem,\n    isArray,\n    isClass,\n    isDOMElement,\n    isFunction,\n    isNumber,\n    isObject,\n    isString,\n    keys,\n    merge,\n    normalizeTickInterval,\n    objectEach,\n    offset,\n    pad,\n    pick,\n    pInt,\n    pushUnique,\n    relativeLength,\n    removeEvent,\n    splat,\n    stableSort,\n    syncTimeout,\n    timeUnits,\n    uniqueKey,\n    useSerialIds,\n    wrap\n};\nexport default Utilities;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * An animation configuration. Animation configurations can also be defined as\n * booleans, where `false` turns off animation and `true` defaults to a duration\n * of 500ms and defer of 0ms.\n *\n * @interface Highcharts.AnimationOptionsObject\n */ /**\n* A callback function to exectute when the animation finishes.\n* @name Highcharts.AnimationOptionsObject#complete\n* @type {Function|undefined}\n*/ /**\n* The animation defer in milliseconds.\n* @name Highcharts.AnimationOptionsObject#defer\n* @type {number|undefined}\n*/ /**\n* The animation duration in milliseconds.\n* @name Highcharts.AnimationOptionsObject#duration\n* @type {number|undefined}\n*/ /**\n* The name of an easing function as defined on the `Math` object.\n* @name Highcharts.AnimationOptionsObject#easing\n* @type {string|Function|undefined}\n*/ /**\n* A callback function to execute on each step of each attribute or CSS property\n* that's being animated. The first argument contains information about the\n* animation and progress.\n* @name Highcharts.AnimationOptionsObject#step\n* @type {Function|undefined}\n*/\n/**\n * Creates a frame for the animated SVG element.\n *\n * @callback Highcharts.AnimationStepCallbackFunction\n *\n * @param {Highcharts.SVGElement} this\n *        The SVG element to animate.\n *\n * @return {void}\n */\n/**\n * Interface description for a class.\n *\n * @interface Highcharts.Class<T>\n * @extends Function\n */ /**\n* Class costructor.\n* @function Highcharts.Class<T>#new\n* @param {...Array<*>} args\n*        Constructor arguments.\n* @return {T}\n*         Class instance.\n*/\n/**\n * A style object with camel case property names to define visual appearance of\n * a SVG element or HTML element. The properties can be whatever styles are\n * supported on the given SVG or HTML element.\n *\n * @example\n * {\n *    fontFamily: 'monospace',\n *    fontSize: '1.2em'\n * }\n *\n * @interface Highcharts.CSSObject\n */ /**\n* @name Highcharts.CSSObject#[key:string]\n* @type {boolean|number|string|undefined}\n*/ /**\n* Background style for the element.\n* @name Highcharts.CSSObject#background\n* @type {string|undefined}\n*/ /**\n* Background color of the element.\n* @name Highcharts.CSSObject#backgroundColor\n* @type {Highcharts.ColorString|undefined}\n*/ /**\n* Border style for the element.\n* @name Highcharts.CSSObject#border\n* @type {string|undefined}\n*/ /**\n* Radius of the element border.\n* @name Highcharts.CSSObject#borderRadius\n* @type {number|undefined}\n*/ /**\n* Color used in the element. The 'contrast' option is a Highcharts custom\n* property that results in black or white, depending on the background of the\n* element.\n* @name Highcharts.CSSObject#color\n* @type {'contrast'|Highcharts.ColorString|undefined}\n*/ /**\n* Style of the mouse cursor when resting over the element.\n* @name Highcharts.CSSObject#cursor\n* @type {Highcharts.CursorValue|undefined}\n*/ /**\n* Font family of the element text. Multiple values have to be in decreasing\n* preference order and separated by comma.\n* @name Highcharts.CSSObject#fontFamily\n* @type {string|undefined}\n*/ /**\n* Font size of the element text.\n* @name Highcharts.CSSObject#fontSize\n* @type {string|undefined}\n*/ /**\n* Font weight of the element text.\n* @name Highcharts.CSSObject#fontWeight\n* @type {string|undefined}\n*/ /**\n* Height of the element.\n* @name Highcharts.CSSObject#height\n* @type {number|undefined}\n*/ /**\n* Width of the element border.\n* @name Highcharts.CSSObject#lineWidth\n* @type {number|undefined}\n*/ /**\n* Opacity of the element.\n* @name Highcharts.CSSObject#opacity\n* @type {number|undefined}\n*/ /**\n* Space around the element content.\n* @name Highcharts.CSSObject#padding\n* @type {string|undefined}\n*/ /**\n* Behaviour of the element when the mouse cursor rests over it.\n* @name Highcharts.CSSObject#pointerEvents\n* @type {string|undefined}\n*/ /**\n* Positioning of the element.\n* @name Highcharts.CSSObject#position\n* @type {string|undefined}\n*/ /**\n* Alignment of the element text.\n* @name Highcharts.CSSObject#textAlign\n* @type {string|undefined}\n*/ /**\n* Additional decoration of the element text.\n* @name Highcharts.CSSObject#textDecoration\n* @type {string|undefined}\n*/ /**\n* Outline style of the element text.\n* @name Highcharts.CSSObject#textOutline\n* @type {string|undefined}\n*/ /**\n* Line break style of the element text. Highcharts SVG elements support\n* `ellipsis` when a `width` is set.\n* @name Highcharts.CSSObject#textOverflow\n* @type {string|undefined}\n*/ /**\n* Top spacing of the element relative to the parent element.\n* @name Highcharts.CSSObject#top\n* @type {string|undefined}\n*/ /**\n* Animated transition of selected element properties.\n* @name Highcharts.CSSObject#transition\n* @type {string|undefined}\n*/ /**\n* Line break style of the element text.\n* @name Highcharts.CSSObject#whiteSpace\n* @type {string|undefined}\n*/ /**\n* Width of the element.\n* @name Highcharts.CSSObject#width\n* @type {number|undefined}\n*/\n/**\n * All possible cursor styles.\n *\n * @typedef {'alias'|'all-scroll'|'auto'|'cell'|'col-resize'|'context-menu'|'copy'|'crosshair'|'default'|'e-resize'|'ew-resize'|'grab'|'grabbing'|'help'|'move'|'n-resize'|'ne-resize'|'nesw-resize'|'no-drop'|'none'|'not-allowed'|'ns-resize'|'nw-resize'|'nwse-resize'|'pointer'|'progress'|'row-resize'|'s-resize'|'se-resize'|'sw-resize'|'text'|'vertical-text'|'w-resize'|'wait'|'zoom-in'|'zoom-out'} Highcharts.CursorValue\n */\n/**\n * All possible dash styles.\n *\n * @typedef {'Dash'|'DashDot'|'Dot'|'LongDash'|'LongDashDot'|'LongDashDotDot'|'ShortDash'|'ShortDashDot'|'ShortDashDotDot'|'ShortDot'|'Solid'} Highcharts.DashStyleValue\n */\n/**\n * Generic dictionary in TypeScript notation.\n * Use the native `AnyRecord` instead.\n *\n * @deprecated\n * @interface Highcharts.Dictionary<T>\n */ /**\n* @name Highcharts.Dictionary<T>#[key:string]\n* @type {T}\n*/\n/**\n * The function callback to execute when the event is fired. The `this` context\n * contains the instance, that fired the event.\n *\n * @callback Highcharts.EventCallbackFunction<T>\n *\n * @param {T} this\n *\n * @param {Highcharts.Dictionary<*>|Event} [eventArguments]\n *        Event arguments.\n *\n * @return {boolean|void}\n */\n/**\n * The event options for adding function callback.\n *\n * @interface Highcharts.EventOptionsObject\n */ /**\n* The order the event handler should be called. This opens for having one\n* handler be called before another, independent of in which order they were\n* added.\n* @name Highcharts.EventOptionsObject#order\n* @type {number}\n*/ /**\n* Whether an event should be passive or not.\n* When set to `true`, the function specified by listener will never call\n* `preventDefault()`.\n* @name Highcharts.EventOptionsObject#passive\n* @type boolean\n*/\n/**\n * Formats data as a string. Usually the data is accessible throught the `this`\n * keyword.\n *\n * @callback Highcharts.FormatterCallbackFunction<T>\n *\n * @param {T} this\n *        Context to format\n *\n * @return {string}\n *         Formatted text\n */\n/**\n * An object of key-value pairs for HTML attributes.\n *\n * @typedef {Highcharts.Dictionary<boolean|number|string|Function>} Highcharts.HTMLAttributes\n */\n/**\n * An HTML DOM element. The type is a reference to the regular HTMLElement in\n * the global scope.\n *\n * @typedef {global.HTMLElement} Highcharts.HTMLDOMElement\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n */\n/**\n * The iterator callback.\n *\n * @callback Highcharts.ObjectEachCallbackFunction<T>\n *\n * @param {T} this\n *        The context.\n *\n * @param {*} value\n *        The property value.\n *\n * @param {string} key\n *        The property key.\n *\n * @param {*} obj\n *        The object that objectEach is being applied to.\n */\n/**\n * An object containing `left` and `top` properties for the position in the\n * page.\n *\n * @interface Highcharts.OffsetObject\n */ /**\n* Left distance to the page border.\n* @name Highcharts.OffsetObject#left\n* @type {number}\n*/ /**\n* Top distance to the page border.\n* @name Highcharts.OffsetObject#top\n* @type {number}\n*/\n/**\n * Describes a range.\n *\n * @interface Highcharts.RangeObject\n */ /**\n* Maximum number of the range.\n* @name Highcharts.RangeObject#max\n* @type {number}\n*/ /**\n* Minimum number of the range.\n* @name Highcharts.RangeObject#min\n* @type {number}\n*/\n/**\n * If a number is given, it defines the pixel length. If a percentage string is\n * given, like for example `'50%'`, the setting defines a length relative to a\n * base size, for example the size of a container.\n *\n * @typedef {number|string} Highcharts.RelativeSize\n */\n/**\n * Proceed function to call original (wrapped) function.\n *\n * @callback Highcharts.WrapProceedFunction\n *\n * @param {*} [arg1]\n *        Optional argument. Without any arguments defaults to first argument of\n *        the wrapping function.\n *\n * @param {*} [arg2]\n *        Optional argument. Without any arguments defaults to second argument\n *        of the wrapping function.\n *\n * @param {*} [arg3]\n *        Optional argument. Without any arguments defaults to third argument of\n *        the wrapping function.\n *\n * @return {*}\n *         Return value of the original function.\n */\n/**\n * The Highcharts object is the placeholder for all other members, and various\n * utility functions. The most important member of the namespace would be the\n * chart constructor.\n *\n * @example\n * let chart = Highcharts.chart('container', { ... });\n *\n * @namespace Highcharts\n */\n''; // detach doclets above\n"],"mappings":"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8D,YAAY,EAAEF,oBAAoB;EAClC2D,YAAY;EACZ5C,aAAa;EACbR,GAAG;EACHrB,OAAO;EACPmF,uBAAuB;EACvB9H,WAAW;EACXkI,cAAc;EACdrG,KAAK;EACLxE,KAAK;EACLuG,MAAM;EACNqB,WAAW;EACXmG,IAAI;EACJ1M,SAAS;EACT2K,kBAAkB;EAClB/C,YAAY;EACZwD,iBAAiB;EACjBQ,QAAQ;EACRY,OAAO;EACPjJ,UAAU;EACVrB,OAAO;EACPvB,OAAO;EACPC,YAAY;EACZ+P,UAAU;EACVzR,QAAQ;EACRwB,QAAQ;EACR+B,QAAQ;EACRL,IAAI;EACJlC,KAAK;EACLgI,qBAAqB;EACrBtI,UAAU;EACVqH,MAAM;EACNR,GAAG;EACH5C,IAAI;EACJxB,IAAI;EACJ0B,UAAU;EACVgD,cAAc;EACd+H,WAAW;EACX/M,KAAK;EACL6G,UAAU;EACVlE,WAAW;EACXoF,SAAS;EACTuG,SAAS;EACTI,YAAY;EACZrJ;AACJ,CAAC;AACD,eAAe0J,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GANA,CAMI;AACJ;AACA;AACA;AACA,MAJI,CAID;AACH;AACA;AACA;AACA,SAJG,CAIA;AACH;AACA;AACA;AACA,YAJG,CAIA;AACH;AACA;AACA;AACA,eAJG,CAIA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GALA,CAKI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAZA,CAYI;AACJ;AACA;AACA,MAHI,CAGD;AACH;AACA;AACA;AACA,SAJG,CAIA;AACH;AACA;AACA;AACA,YAJG,CAIA;AACH;AACA;AACA;AACA,eAJG,CAIA;AACH;AACA;AACA;AACA,kBAJG,CAIA;AACH;AACA;AACA;AACA;AACA;AACA,qBANG,CAMA;AACH;AACA;AACA;AACA,wBAJG,CAIA;AACH;AACA;AACA;AACA;AACA,2BALG,CAKA;AACH;AACA;AACA;AACA,8BAJG,CAIA;AACH;AACA;AACA;AACA,iCAJG,CAIA;AACH;AACA;AACA;AACA,oCAJG,CAIA;AACH;AACA;AACA;AACA,uCAJG,CAIA;AACH;AACA;AACA;AACA,0CAJG,CAIA;AACH;AACA;AACA;AACA,6CAJG,CAIA;AACH;AACA;AACA;AACA,gDAJG,CAIA;AACH;AACA;AACA;AACA,mDAJG,CAIA;AACH;AACA;AACA;AACA,sDAJG,CAIA;AACH;AACA;AACA;AACA,yDAJG,CAIA;AACH;AACA;AACA;AACA,4DAJG,CAIA;AACH;AACA;AACA;AACA;AACA,+DALG,CAKA;AACH;AACA;AACA;AACA,kEAJG,CAIA;AACH;AACA;AACA;AACA,qEAJG,CAIA;AACH;AACA;AACA;AACA,wEAJG,CAIA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GANA,CAMI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAJA,CAII;AACJ;AACA;AACA;AACA;AACA;AACA,MANI,CAMD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GALA,CAKI;AACJ;AACA;AACA;AACA,MAJI,CAID;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAJA,CAII;AACJ;AACA;AACA;AACA,MAJI,CAID;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}